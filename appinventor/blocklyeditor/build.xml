<?xml version="1.0" encoding="UTF-8"?>

<!-- ======================================================================
     Copyright 2012 Google Inc.  All Rights Reserved.
     Author: sharon@google.com (Sharon Perl)
     Copyright Â© 2012-2016 Massachusetts Institute of Technology. All Rights Reserved.
     Author: andrew.f.mckinney@gmail.com (Andrew F. McKinney)
     Author: jis@mit.edu (Jeffrey I. Schiller)
     Author: lizlooney@google.com (Liz Looney)
     Author: ewpatton@mit.edu (Evan W. Patton)

     Blockly-based blocks editor
     ====================================================================== -->

<project name="blocklyeditor" default="all">
	<description>
    In-browser blocks editor for App Inventor based on Blockly
  </description>

  <property name="release" value="false"/>

  <condition property="blockly.config"
             value="ploverConfig.js"
             else="ploverConfig-dev.js">
    <equals arg1="${release}" arg2="true"/>
  </condition>

  <target name="all"
          depends="BlocklyTranslationGenerator">
  </target>

  <target name="tests"
          depends="BlocklyTestbed, BlocklyeditorTests">
  </target>

	<!-- =====================================================================
       Import common directory, task, and target definitions.
       ===================================================================== -->

	<import file="../build-common.xml" />

	<!-- =====================================================================
       Define base package path.
       ===================================================================== -->
	<property name="blocklyeditor.pkg" value="com/google/appinventor/blocklyeditor" />

	<property name="local.lib.dir" location="lib" />
	<property name="run.dir" location="${local.build.dir}/run" />
	<property name="run.lib.dir" location="${run.dir}/lib" />

	<property name="blockly.src.dir" location="${lib.dir}/blockly" />
	<property name="i18n.src.dir" location="${src.dir}/msg" />
	<property name="ai.i18n.src.dir" location="${i18n.src.dir}/ai_blockly" />
	<property name="BlocklyTranslator-class.dir" location="${class.dir}/BlocklyTranslator-classes" />
	<property name="BlocklyTranslations.dir" location="${public.build.dir}/msg" />

	<property name="gwt.sdk" location="${lib.dir}/gwt/2.8.1-patched" />


  <!-- =====================================================================
       Targets
       ===================================================================== -->
  <target name="CheckBlocklyTranslations">
    <uptodate property="Blocklyi18n.uptodate">
      <srcfiles dir="${ai.i18n.src.dir}">
	<include name="*.json" />
      </srcfiles>
      <srcfiles dir="${blockly.src.dir}/msg/json">
	<include name="en.json" />
      </srcfiles>
      <srcfiles dir="${i18n.src.dir}">
	<include name="*.java"/>
      </srcfiles>
      <firstmatchmapper>
	<globmapper from="*.java" to="${BlocklyTranslator-class.dir}/msg/*.class"/>
	<globmapper from="en.json" to="${BlocklyTranslations.dir}/messages.json" />
	<globmapper from="*.json" to="${BlocklyTranslations.dir}/*.json" />
      </firstmatchmapper>
    </uptodate>
  </target>

	<target name="BlocklyTranslationGenerator"
			description="This is the script for creating combined i18n files from blockly and app inventor"
			depends="CheckBlocklyTranslations,BlocklyCompile"
			unless="Blocklyi18n.uptodate">
		<mkdir dir="${BlocklyTranslator-class.dir}" />
		<mkdir dir="${BlocklyTranslations.dir}" />
		<ai.javac destdir="${BlocklyTranslator-class.dir}">
			<include name="msg/BlocklyTranslationGenerator.java" />
			<classpath>
				<pathelement location="${gwt.sdk}/gwt-dev.jar"/>
				<pathelement location="${lib.dir}/json/json.jar" />
			</classpath>
		</ai.javac>
		<java failonerror="true" classname="msg.BlocklyTranslationGenerator">
                      <arg value="${ai.i18n.src.dir}"/>
                      <arg value="${lib.dir}/blockly/msg/json"/>
                      <arg value="${BlocklyTranslations.dir}"/>
			<classpath>
				<pathelement location="${BlocklyTranslator-class.dir}"/>
				<pathelement location="${gwt.sdk}/gwt-dev.jar"/>
				<pathelement location="${lib.dir}/json/json.jar" />
			</classpath>
		</java>
	</target>

        <target name="CheckBlocklyCompile">
          <uptodate property="BlocklyCompile.uptodate" targetfile="${public.build.dir}/blockly-all.js">
            <srcfiles dir="src/" includes="**/*.js" />
            <srcfiles dir="${blockly.src.dir}/" includes="core/**/*.js" />
            <srcfiles dir="${lib.dir}/closure-library/" includes="closure/goog/**/*.js" />
            <srcfiles dir="${basedir}" includes="${blockly.config}" />
          </uptodate>
        </target>

	<target name="BlocklyCompile"
		      description="For now, compiling the Blockly editor means cat-ing its javascript together with the relevant javascript in the Blockly library"
		      depends="init,CheckBlocklyCompile"
                      unless="BlocklyCompile.uptodate">
		<java failonerror="true" fork="true" jar="${lib.dir}/plovr/plovr-eba786b34df9.jar">
			<arg line="build ${blockly.config}" />
		</java>
	</target>

	<!--  property name="js.tests.dir" location="./tests" /-->
	<!-- Change as needed -->

	<!--target name="tests">
    <exec executable="phantomjs" failonerror="true">
      <arg path="${js.tests.dir}/buttonClickTest.js"/>
    </exec>
  </target-->

	<!-- =====================================================================
       BlocklyeditorTests: build and run the Blocklyeditor tests and
       generate the output results
       ===================================================================== -->

	<target name="BlocklyTestbed"
		      description="Testbed for blockly code generation. To use this, open blocklyeditor/src/demos/yail/index.html (using a file:/// url) in a browser"
		      depends="components_AndroidRuntime, common_CommonTestUtils">
		<mkdir dir="${run.lib.dir}" />

		<echo message="var componentTypeJson = " file="${public.build.dir}/component-types.js" />
		<concat destfile="${public.build.dir}/component-types.js" append="true">
			<fileset file="${build.dir}/components/simple_components.json" />
		</concat>
		<mkdir dir="${public.build.dir}/media" />
		<copy todir="${public.build.dir}/media">
			<fileset dir="${blockly.src.dir}/media" />
		</copy>
	</target>

	<path id="libsForBlocklyeditorTests.path">
		<fileset dir="${run.lib.dir}" includes="*.jar" />
		<pathelement location="${build.dir}/common/CommonTestUtils.jar" />
                <pathelement location="${build.dir}/components/CommonConstants.jar" />
		<pathelement location="${lib.dir}/junit/junit-4.8.2.jar" />
	</path>

	<path id="BlocklyeditorTests.path">
		<path refid="libsForBlocklyeditorTests.path" />
		<pathelement location="${local.build.dir}/BlocklyeditorTests.jar" />
	</path>

	<target name="BlocklyeditorTests"
		      description="Blocklyeditor: build and run the test suite"
		      depends="BlocklyCompile, BlocklyTestbed" >
		<sequential>
			<ai.dojunit aij-testingtarget="BlocklyeditorTests" aij-dir="${blocklyeditor.pkg}">
			</ai.dojunit>
			<exec executable="phantomjs" output="reports/raw/TEST-MochaTests.xml">
				<arg value="../node_modules/mocha-phantomjs-core/mocha-phantomjs-core.js"/>
				<arg value="tests/com/google/appinventor/mocha/index.html"/>
				<arg value="xunit"/>
			</exec>
			<!--Remove anything before the first < (start of xml)-->
			<replaceregexp file="reports/raw/TEST-MochaTests.xml"
				match="^[^&lt;]*"
				replace=""/>
			<!--Add package name to file-->
			<replace file="reports/raw/TEST-MochaTests.xml"
					 token="name=&quot;Mocha Tests&quot;"
					 value="name=&quot;com.google.appinventor.blocklyeditor.MochaTests&quot;"/>
			<junitreport todir="${reports.dir}">
				<fileset file="reports/raw/TEST-*.xml"/>
				<report format="frames" todir="${reports.dir}/html"/>
			</junitreport>
		</sequential>
	</target>
</project>
