# Description: 
AccelerometerSensor__MinimumIntervalPropertyDescriptions=電話が切れるまでの最小間隔
# Description: 
AccelerationChangedEvents=加速度が変化しました
# Description: 
AccelerationChangedEventDescriptions=加速度がX, Y, Z座標のいずれかの方向で変化しました。
# Description: 
AboveRangeEvents=範囲超過
# Description: 
AboveRangeEventEnabledProperties=範囲超過イベントが有効です
# Description: 
AboutScreenPropertyDescriptions=画面に関する情報。システムメニューから「このアプリケーションについて」を選択すると表示されます。アプリについて人々に知らせるために使用します。複数画面アプリでは、各画面に独自のスクリーンについての情報があります。
# Description: 
AboutScreenProperties=スクリーンについて
# Description: Message providing details about starting the wireless connection.
AICompanionMenuItem=AIコンパニオン
# Description: 
Button__FontBoldPropertyDescriptions=設定した場合、ボタンテキストは太字で表示されます。
# Description: 
Button__EnabledPropertyDescriptions=設定した場合、ユーザーはボタンをタップしてアクションを起こすことができます。
# Description: 
Button__ClickEventDescriptions=ユーザーはボタンをタップして離しました。
# Description: 
Button__BackgroundColorPropertyDescriptions=ボタンの背景色を返します
# Description: 
ButtonHelpStringComponentPallette=クリックを検出する機能を持つボタン。外観の多くの部分を変更することができ、クリックが可能かどうか（<code>Enabled</code>）は、デザイナーまたはブロックエディタで変更することができます。
# Description: 
BuildRequestDataMethods=ビルドリクエストデータ
# Description: 
BuildRequestDataMethodDescriptions=名前と値のペアを表す2要素のサブリストのリストを、ポストテキストに渡すのに適した、application/x-www-form-urlencodedメディアタイプとしてフォーマットされた文字列に変換します。
# Description: 
BuildPostDataMethods=ビルドポストデータ
# Description: 
BufferSizePropertyDescriptions=バッファーの大きさをバイト数で返します
# Description: 
BufferSizeProperties=バッファーの大きさ
# Description: 
BoundsMethods=境界
# Description: 
BoundsMethodDescriptions=四角形の外接枠を ((北西) (南東)) の形式で返します。
# Description: 
BoundsChangeEvents=境界の変更
# Description: 
BoundsChangeEventDescriptions=ユーザーがマップをパンニングまたはズームしてマップの境界を変更しました。
# Description: 
BoundingBoxPropertyDescriptions=マップのバウンディングボックスを[[北, 西], [南, 東]]として保存。
# Description: 
BoundingBoxProperties=バウンディング（境界）ボックス
# Description: 
BounceMethods=バウンドする
# Description: 
BottomOfRangePropertyDescriptions=範囲以下(BelowRange)、範囲内(WithinRange)、範囲以上(AboveRange) イベントで使用される範囲の一番下。
# Description: 
BottomOfRangeProperties=範囲のボトム
# Description: 
BluetoothServer__EnabledPropertyDescriptions=Bluetoothが有効かどうか
# Description: 
BluetoothServer__AvailablePropertyDescriptions=デバイスでBluetoothが利用可能かどうか
# Description: 
BluetoothServerHelpStringComponentPallette=Bluetoothサーバーコンポーネント
# Description: 
BluetoothErrorEventDescriptions=Bluetoothエラーイベントは使用されなくなりました。代わりに、スクリーン.エラーが発生イベントを使用してください。
# Description: 
BluetoothClient__EnabledPropertyDescriptions=Bluetoothが有効かどうか
# Description: 
BluetoothClient__AvailablePropertyDescriptions=デバイスでBluetoothが利用可能かどうか
# Description: 
BluetoothClientPropertyDescriptions=通信に使用するBluetoothクライアントコンポーネント。
# Description: 
BluetoothClientProperties=Bluetooth　クライアント
# Description: 
BluetoothClientHelpStringComponentPallette=Bluetooth クライアント・コンポーネント
# Description: 
BlocksToolkitPropertyDescriptions=画面のサブセットを表すJSON文字列。テンプレートアプリの作成者は、これを使用して、プロジェクトで利用可能なコンポーネント、デザイナープロパティ、およびブロックを制御できます。
# Description: 
BlocksToolkitProperties=ブロックツールキット
# Description: 
BigDefaultTextPropertyDescriptions=チェックを入れると、ハイコントラストモードになります
# Description: 
BigDefaultTextProperties=ビッグデフォルトテキスト
# Description: 
BelowRangeEvents=範囲外
# Description: 
BelowRangeEventEnabledProperties=範囲外イベントが有効
# Description: 
BehaviorPropertyCategory=行動
# Description: 
BeforeSpeakingEvents=話す前
# Description: 
BeforeSpeakingEventDescriptions=スピークが呼び出されたときに発生するイベント。
# Description: 
BeforePickingEvents=ピッキング前
# Description: 
BeforePageLoadEvents=ページのロード前
# Description: 
BeforePageLoadEventDescriptions=ページがロードされると、このイベントが実行されます。
# Description: 
BeforeGettingTextEvents=テキストを取得する前
# Description: 
BeforeGettingTextEventDescriptions=`音声認識`が起動されたときに発生するシンプルなイベント。
# Description: 
BearingToPointMethodDescriptions=マーカーから指定された緯度経度までの方位を、真北からの度数で返します。
# Description: 
BearingToFeatureMethodDescriptions=マーカー（目印）から指定された地図フィーチャーまでの方位を、真北からの度数で返します。線とロイド（重心）パラメータが true の場合、方位は地図フィーチャの中心になります。そうでない場合、方位はマーカー（目印）に最も近いフィーチャ内の点に対して計算されます。
# Description: 
BaudRatePropertyDescriptions=現在の通信速度を返す
# Description: 
BaudRateProperties=通信速度
# Description: 
Barometer__EnabledPropertyDescriptions=もし有効なら、デバイスは変更を聞きます。
# Description: 
Barometer__AvailablePropertyDescriptions=デバイスが気圧計コンポーネントをサポートするハードウェアを持っているかどうかを指定します。
# Description: 
BarometerHelpStringComponentPallette=周囲の気圧を測定できるセンサー部品。
# Description: 
BarcodeScanner__ResultPropertyDescriptions=前回のスキャン結果のテキスト。
# Description: 
BarcodeScannerHelpStringComponentPallette=バーコードスキャナーを使用してバーコードを読み取るためのコンポーネント
# Description: 
BallotQuestionPropertyDescriptions=投票される質問（問題）。
# Description: 
BallotQuestionProperties=バロットに関する質問
# Description: 
BallotOptionsPropertyDescriptions=バロットオプションのリスト。
# Description: 
BallotOptionsProperties=バロットオプション
# Description: 
Ball__ZPropertyDescriptions=’ボール’を他のボールとどのように重ねるか
# Description: 
Ball__YPropertyDescriptions=ボールの垂直座標で、ボールが下に移動するにつれて増加する。原点中心プロパティがtrueの場合、この座標はボールの中心を表し、そうでない場合はボールの上端を表します。
# Description: 
Ball__XPropertyDescriptions=ボールの水平座標で、ボールが右に移動するにつれて大きくなります。原点中心プロパティがtrueの場合、この座標はボールの中心を表し、そうでない場合はボールの左端を表します。
# Description: 
Ball__VisiblePropertyDescriptions=ボールが表示されているかどうか。
# Description: 
Ball__TouchedEventDescriptions=ユーザーが有効化されたボールに触れ、すぐに指を離したときに呼び出されるイベントハンドラーです。指定された x 座標と y 座標は、キャンバスの左上からの相対座標です。
# Description: 
Ball__TouchUpEventDescriptions=ユーザーが有効化されたボールへのタッチを止めたとき（タッチダウンイベントの後に指を離したとき）に呼び出されるイベント ハンドラーです。これは、キャンバスの左上からの相対的なタッチの x 座標と y 座標を提供します。
# Description: 
Ball__TouchDownEventDescriptions=ユーザーが有効化されたボールにタッチし始める（指をボールの上に置いてそのままにしておく）ときに呼び出されるイベントハンドラーです。これは、キャンバスの左上からのタッチの x 座標と y 座標を提供します。
# Description: 
Ball__SpeedPropertyDescriptions=有効な場合の、ボールが間隔ごとに移動するピクセル数。
# Description: 
Ball__RadiusPropertyDescriptions=ボールの端から中心までの距離。
# Description: 
Ball__PointTowardsMethodDescriptions=ボールを指定したスプライト（ボールまたは画像スプライト）の方向に向けます。新しい方位は、2つのスプライトの中心点を結ぶ線と平行になります。
# Description: 
Ball__PointInDirectionMethodDescriptions=座標(x, y)を持つ点に向かってボールのヘディングを設定します。
# Description: 
Ball__PaintColorPropertyDescriptions=ボールの色。
# Description: 
Ball__MoveToPointMethodDescriptions=ボールの原点を、[x-座標, y-座標]としてフォーマットされたリストで指定された座標の位置に移動します。
# Description: 
Ball__MoveToMethodDescriptions=ボールのx座標とy座標を設定します。原点の中心がtrueの場合、ボールの中心がここに配置されます。そうでない場合は、ボールの左上端が指定した座標に配置されます。
# Description: 
Ball__MoveIntoBoundsMethodDescriptions=ボールの一部が枠外にはみ出した場合、ボールを枠内に戻します。ボールの幅が大きすぎてキャンバスに収まらない場合、ボールの左側をキャンバスの左側に揃えます。ボールが高すぎて キャンバスに収まらない場合、ボールの上辺をキャンバスの上辺に揃えます。
# Description: 
Ball__IntervalPropertyDescriptions=ボールの位置が更新される間隔をミリ秒で指定します。例えば、間隔が50で速度が10の場合、50ミリ秒ごとにスプライトはヘディング方向に10ピクセル移動します。
# Description: 
Ball__HeadingPropertyDescriptions=ボールのヘディングを正のX軸より上の角度で返します。0度は画面の右方向、90度は画面の上方向です。
# Description: 
Ball__FlungEventDescriptions=有効化されたボール上でフライングジェスチャー（クイックスワイプ）が行われたときに呼び出されるイベントハンドラーです。これは、フリングの開始位置の x 座標と y 座標（キャンバスの左上からの相対座標）、速度（ピクセル/ミリ秒）、ヘディング（-180度～180度）、フリングのベクトルの x 成分と y 成分を提供します。
# Description: 
Ball__EnabledPropertyDescriptions=ボールが動くかどうかをコントロールし、コリジョン、ドラッグ、タッチ、フライングで操作できます。
# Description: 
Ball__EdgeReachedEventDescriptions=ボールが画面の端に達したときに呼び出されるイベントハンドラーです。そのエッジで Bounce （バウンド）が呼ばれると、ボールは到達したエッジから跳ね返ったように見えます。ここでの端は、北(1)、北東(2)、東(3)、南東(4)、南(-1)、南西(-2)、西(-3)、北西(-4)の8方向のいずれかを示す整数で表されます。
# Description: 
Ball__DraggedEventDescriptions=ボールがドラッグされたときに呼び出されるイベントハンドラーです。すべての呼び出しにおいて、開始座標はスクリーンが最初にタッチされた場所であり、"current "座標は現在の線分の終点を表します。ドラッグの最初の呼び出しでは、"previous "座標は開始座標と同じです。MoveToが明示的に呼び出されない限り、ボールはドラッグされたイベントに応じて実際にはどこにも移動しないことに注意してください。スムーズな移動のためには、各座標を初期値と現在値と前回値の差の和に設定する必要があります。
# Description: 
Ball__CollidingWithMethodDescriptions=このボールと渡されたスプライト（ボールまたは画像スプライト）の間に衝突が登録されているかどうかを示します。
# Description: 
Ball__BounceMethodDescriptions=ボールを壁から離れるようにバウンドさせます。通常のバウンドの場合、エッジ引数はエッジリーチが返すものを指定します。
# Description: 
BallHelpStringComponentPallette=<p><code>Canvas</code> 上に配置できる丸い「スプライト」。タッチやドラッグに反応し、他のスプライト (<code>ImageSprite</code> など) と対話できます。 <code>Ball</code>s) と Canvas の端を移動し、そのプロパティ値に従って移動します。</p><p>たとえば、<code>Ball</code> を手前に 4 ピクセル移動させるには、 <code>Canvas</code> の先頭を 500 ミリ秒 (0.5 秒) ごとに表示するには、<code>Speed</code> プロパティを 4 [ピクセル] に設定し、<code>Interval</code> プロパティを 4 [ピクセル] に設定します。 500 [ミリ秒]、<code>Heading</code> プロパティを 90 [度]、<code>Enabled</code> プロパティを <code>True</code> に設定します。</p><p> <code>Ball</code> と <code>ImageSprite</code> の違いは、後者は画像ファイルから外観を取得できるのに対し、<code>Ball</code> の外観は画像ファイルから取得できることです。 <code>PaintColor</code> プロパティと <code>Radius</code> プロパティを変更することによってのみ変更されます。</p>
# Description: 
BackgroundImageinBase64PropertyDescriptions=背景画像をBase64形式で設定します。これにはAPIレベル >= 8が必要です。APIレベルが8未満のデバイスの場合、これを設定すると背景が空になってしまいます。
# Description: 
BackgroundImageinBase64Properties=Base64の背景画像
# Description: 
BackgroundImageProperties=背景の画像
# Description: 
BackgroundColorProperties=背景の色
# Description: 
BackPressedEvents=バックプレス
# Description: 
BackPressedEventDescriptions=端末のバックボタンが押されました。
# Description: 
AzimuthPropertyDescriptions=デバイスの方位角を返します。意味のある値を返すには、センサーが有効になっている必要があります。
# Description: 
AzimuthProperties=アジマス（方位角）
# Description: 
AverageLuxProperties=ルクス平均
# Description: 
AverageLuxPropertyDescriptions=最近測定された10個の光量の平均値（ルクス単位）。
# Description: 
AvailableProvidersPropertyDescriptions=GPSやネットワークなど、利用可能なサービスプロバイダのリストです。この情報はリストとテキスト形式で提供されます。
# Description: 
AvailableProvidersProperties=利用可能なプロバイダー
# Description: 
AvailableProperties=利用可能
# Description: 
AvailableLanguagesPropertyDescriptions=このデバイスで音声の読み上げを使用できる言語のリストです。これらの略語の意味を確認するには、サポートされている言語のAndroid開発者ドキュメントを確認してください。
# Description: 
AvailableLanguagesProperties=利用可能な言語
# Description: 
AvailableCountriesPropertyDescriptions=テキストの読み上げで使用できる、このデバイスで使用可能な国コードのリストです。これらの略語の意味については、サポート言語のAndroid開発者向けドキュメントをご確認ください。
# Description: 
AvailableCountriesProperties=利用可能な国
# Description: 
AuthorizeMethods=許可（オーソライズ）
# Description: 
AuthorizeMethodDescriptions=OAuthプロトコルを使用して、Webブラウザ経由でTwitterにログインするようにユーザーをリダイレクトします。
# Description: 
AskForPermissionMethods=許可を求める（許可申請）
# Description: 
AskForPermissionMethodDescriptions=危険なパーミッションへのアクセス許可をユーザーに求めます。
# Description: 
AppendValueToListMethods=値をリストに追加
# Description: 
AppendValueToListMethodDescriptions=リストの末尾に値をアトミックに追加します。2つのデバイスが同時にこの関数を使用した場合、両方が追加され、データが失われることはありません。
# Description: 
AppendValueMethods=値の追加（付加価値）
# Description: 
AppendValueMethodDescriptions=リストの末尾に値をアトミックに追加します。2つのデバイスが同時にこの関数を使用した場合、両方が追加され、データが失われることはありません。
# Description: 
AppendToFileMethods=ファイルへの追加
# Description: 
AppendToFileMethodDescriptions=ファイルストレージの末尾にテキストを追加し、ファイルが存在しない場合はファイルを作成します。ファイルが書き込まれる場所については、セーブファイルのヘルプを参照してください。
# Description: 
AppearancePropertyCategory=アピアランス（容姿）
# Description: 
AppNamePropertyDescriptions=アプリ名が空白の場合、プロジェクトがビルドされたときにプロジェクトの名前が設定されます。
# Description: 
AppNameProperties=アプリ名
# Description: 
ApiKeyProperties=APIキー
# Description: 
AnimationPropertyDescriptions=これは、画像に少数のモーションタイプを付けることができる限定的なアニメーションの形式です。可能なモーションは、右へゆっくりスクロール、右にスクロール、素早く右にスクロール、左へゆっくりスクロール、左にスクロール、素早く左にスクロール、ストップです
# Description: 
AnimationProperties=アニメーション
# Description: 
AnglePropertyDescriptions=デバイスのタイルの方向を示す角度を返します。つまり、デバイスの表面を転がるボールが感じる力の方向を示します。
# Description: 
AngleProperties=角度
# Description: 
AnchorVerticalPropertyDescriptions=垂直アライメントプロパティは、マーカーのアンカーをその高さに対してどこに配置するかを制御します。選択肢は以下の通りです： 1 = 上端揃え、2 = 垂直中央揃え、3 = 下端揃えです。
# Description: 
AnchorVerticalProperties=垂直アンカー
# Description: 
AnchorHorizontalPropertyDescriptions=水平アライメントプロパティは、マーカーのアンカーをその幅に対してどの位置に配置するかを制御します。選択肢は以下の通りです： 1 = 左揃え、3 = 水平方向中央揃え、2 = 右揃えです。
# Description: 
AnchorHorizontalProperties=水平アンカー
# Description: 
AltitudePropertyDescriptions=直近で利用可能な高度値（メートル単位）。利用可能な値がない場合は0が返されます。
# Description: 
AltitudeProperties=高度（標高）
# Description: 
AlternateTextPropertyDescriptions=画像がどのように見えるかを説明する説明文。
# Description: 
AlternateTextProperties=別テキスト
# Description: 
AllowCookiesProperties=クッキーを許可する
# Description: 
AllowCookiesPropertyDescriptions=レスポンスのクッキーを保存し、以降のリクエストで使用するかどうか。クッキーはAndroidバージョン2.3以上でのみサポートされています。
# Description: 
AlignVerticalProperties=垂直（縦）
# Description: 
AlignHorizontalProperties=水平に整列する
# Description: 
AirPressurePropertyDescriptions=センサーが利用可能で有効な場合、hPa（millibar）単位の気圧。
# Description: 
AirPressureProperties=気圧
# Description: 
AirPressureChangedEvents=気圧変化
# Description: 
AirPressureChangedEventDescriptions=気圧の変化が検出されたときに呼び出されます（単位はhPa）。
# Description: 
AfterTimeSetEvents=タイムセット後（時間設定後）
# Description: 
AfterTimeSetEventDescriptions=このイベントは、ユーザーがポップアップダイアログで時間を設定したときに実行されます。
# Description: 
AfterTextInputEvents=テキスト入力後
# Description: 
AfterTextInputEventDescriptions=ユーザーがShowTextDialogに応答した後に発生するイベント。
# Description: 
AfterSpeakingEvents=発言後
# Description: 
AfterSpeakingEventDescriptions=メッセージが発言された後に発生するイベント。メッセージを話すことに成功した場合はtrueが返され、失敗した場合はfalseが返されます。
# Description: 
AfterSoundRecordedEvents=録音後
# Description: 
AfterSoundRecordedEventDescriptions=新しく作成されたサウンドの場所を提供します。
# Description: 
AfterSelectingEvents=選択後
# Description: 
AfterSelectingEventDescriptions=ユーザーがドロップダウンリストから項目を選択した後に呼び出されるイベント。
# Description: 
AfterScanEvents=スキャン後
# Description: 
AfterScanEventDescriptions=スキャナが（テキスト）結果を読み取り、その結果を提供することを示します
# Description: 
AfterRecordingEvents=レコーディング後
# Description: 
AfterRecordingEventDescriptions=カメラでビデオが録画されたことを示し、保存されたビデオへの経路を提供します。
# Description: 
AfterPictureEvents=写真の後
# Description: 
AfterPictureEventDescriptions=撮影後に呼び出されます。テキスト引数 `image` は、携帯電話で画像を探すために使用する経路です。
# Description: 
AfterPickingEvents=ピッキング後
# Description: 
AfterGettingTextEvents=テキスト取得後
# Description: 
AfterGettingTextEventDescriptions=スピーチレコナイザー（音声認識）が音声を認識した後に発生するシンプルなイベントです。もし
# Description: 
AfterFileSavedEvents=ファイル保存後
# Description: 
AfterFileSavedEventDescriptions=ファイルの内容が書き込まれたことを示すイベント。
# Description: 
AfterDateSetEvents=アフターデートセット（日付設定後）
# Description: 
AfterDateSetEventDescriptions=ユーザーがダイアログで日付を選択した後に実行されるイベント
# Description: 
AfterChoosingEvents=選択後
# Description: 
AfterChoosingEventDescriptions=ユーザーがShowChooseDialog（選択ダイアログを表示する）を選択した後のイベント。
# Description: 
AfterActivityEvents=アフターアクティビティ（アクティビティ後）
# Description: 
AfterActivityEventDescriptions=このActivityStarter（アクティビティスターター）が戻った後に発生するイベント。
# Description: 
AddressesAndNamesPropertyDescriptions=ペアリングされたBluetoothデバイスのアドレスと名前
# Description: 
AddressesAndNamesProperties=住所と名前
# Description: 
AddYearsMethods=年の追加（加算年数）
# Description: 
AddYearsMethodDescriptions=指定された瞬間から数年後の時間を返します。
# Description: 
AddWeeksMethods=週の追加（追加週間）
# Description: 
AddWeeksMethodDescriptions=戻り値 指定された瞬間から何週間か後の時間における瞬間。
# Description: 
AddSecondsMethods=秒の追加（加算秒数）
# Description: 
AddSecondsMethodDescriptions=指定した瞬間の何秒後かを返します。
# Description: 
AddMonthsMethods=（暦の）月の追加
# Description: 
AddMonthsMethodDescriptions=指定した瞬間の数か月後の時間を返します。
# Description: 
AddMinutesMethods=分の追加（加算分数）
# Description: 
AddMinutesMethodDescriptions=指定した瞬間の数分後の時刻を返します。
# Description: 
AddHoursMethods=時間の追加（加算時間）
# Description: 
AddHoursMethodDescriptions=指定した瞬間の何時間後かを返します。
# Description: 
AddDurationMethods=期間の追加（加算期間）
# Description: 
AddDurationMethodDescriptions=引数で指定した時刻の、ある時間後の瞬間を返します
# Description: 
AddDaysMethods=addDays関数
# Description: 
AddDaysMethodDescriptions=指定した瞬間から数日後の時間を返します。
# Description: 
ActivityStarter__ResultPropertyDescriptions=アクティビティの結果を返します。
# Description: 
ActivityStarterHelpStringComponentPallette=<code>StartActivity</code>メソッドを使用してアクティビティを起動できるコンポーネントです。<p><ul> <li> 別の App Inventor for Android アプリケーションを起動します。ソースコードをダウンロードし、ファイルエクスプローラーやunzipユーティリティを使って「youngandroidproject/project.properties」というファイルを見つけてください。例えば、<code>main=com.gmail.Bitdiddle.Ben.HelloPurr.Screen1</code>のようになります。（最初のコンポーネントはBen.Bitdiddleによって作成されたことを示します。）
# Description: 
ActivityPackagePropertyDescriptions=開始される特定のコンポーネントのパッケージ部分を返します。
# Description: 
ActivityErrorEventDescriptions=ActivityError（アクティビティエラー）イベントは使用されなくなりました。代わりに Screen ErrorOccurred （画面エラー発生）イベントを使用してください。
# Description: 
ActivityPackageProperties=アクティビティパッケージ
# Description: 
ActivityClassPropertyDescriptions=開始される特定のコンポーネントのクラス部分を返します。
# Description: 
ActivityClassProperties=アクティビティクラス
# Description: 
ActivityCanceledEvents=アクティビティキャンセル
# Description: 
ActivityCanceledEventDescriptions=アクティビティがキャンセルされ、ActivityStarter（アクティビティスターター）が戻った場合に発生するイベントです。
# Description: 
ActionPropertyDescriptions=アクティビティを開始するために使用されるアクションを返します。
# Description: 
ActionProperties=アクション
# Description: 
ActionBarPropertyDescriptions=アクションバーのプロパティ
# Description: 
ActionBarProperties=アクションバー
# Description: 
AccuracyPropertyDescriptions=最新の精度をメートル単位で表します。値がない場合は0が返されます。
# Description: 
AccuracyProperties=精度
# Description: 
AcceptConnectionWithUUIDMethods=UUIDで接続を受け入れる
# Description: 
AcceptConnectionWithUUIDMethodDescriptions=特定のUUIDを持つ着信接続を受け入れる。
# Description: 
AcceptConnectionMethods=接続を受け入れる（アクセプトコネクション）
# Description: 
AcceptConnectionMethodDescriptions=シリアルポートプロファイル（SPP）で着信接続を受け入れる。
# Description: 
AccentColorPropertyDescriptions=ハイライトやその他のユーザーインターフェースのアクセントに使われる色です。
# Description: 
AccentColorProperties=アクセントカラー
# Description: 
AccelerometerSensor__LegacyModePropertyDescriptions=このプロパティが追加される前のリリースでは、AccelerometerSensorコンポーネントは、Androidシステムから受信したセンサー値を直接渡していました。ただし、これらの値は、デフォルトが横向きモードのタブレットを補正しないため、MIT App Inventorのプログラマーが補正する必要があります。しかし、携帯電話のようなポートレートモードのデバイスでは、補正をかけると正しくない結果になってしまいます。ランドスケープモードのタブレットを検出し、補正を行うようになりました。ただし、プロジェクトですでに補正が行われている場合は、正しくない結果が得られます。プロジェクトを更新していただくことが望ましいのですが、このプロパティを "true "に設定するだけで、補償コードを無効にすることもできます。注意：このプロパティは将来のリリースで削除される可能性があるため、プロジェクトを更新することをお勧めします。
# Description: 
AccelerometerSensor__EnabledPropertyDescriptions=trueの場合、センサーはイベントを生成する。そうでなければ、デバイスが加速されたり揺さぶられたりしても、イベントは生成されない。
# Description: 
AccelerometerSensor__AvailablePropertyDescriptions=加速度センサーがデバイス上で利用可能かどうかを返します。
# Description: 
AccelerometerSensorHelpStringComponentPallette=揺れを検知し、SI単位(m/s<sup>2</sup>)を使用して3次元で加速度をおおよそ測定できる非可視コンポーネント。コンポーネント：<ul><li> <strong>xAccel</strong>: 0 携帯電話が平らな面に静止しているときはプラス、携帯電話が右に傾いている（左側が盛り上がっている）ときはマイナス、携帯電話が左に傾いている（右側が盛り上がっている）ときはマイナス。</li> <li> <strong>yAccel</strong>: 0  電話機が平らな面に静止しているときはプラス、底面が持ち上がっているときはプラス、上面が持ち上がっているときはマイナスである。</li> <li> <strong>zAccel</strong>: -9.8と同等 (デバイスがディスプレイを上向きにして地面と平行に静止しているときの地球の重力を毎秒メートルで表し、地面に垂直な場合は0、下向きの場合は+9.8。また、重力に逆らって加速させることによっても、その値に影響を与えることができる。</li></ul>
# Description: 
AbsoluteStrengthProperties=絶対強度
# Description: 
AbsoluteStrengthPropertyDescriptions=フィールドの絶対的な強さを示す。
# Description: 
TextToSpeech__PitchPropertyDescriptions=TextToSpeech（テキストの読み上げ）のピッチを設定します。値は 0 から 2 の間で、値が低いほど合成音声のトーンが低くなり、値が大きいほど合成音声のトーンが高くなります。
# Description: 
TextToSpeech__LanguagePropertyDescriptions=TextToSpeech（テキストの読み上げ）の言語を設定します。これは実際に話されている言語ではなく、単語の発音方法を変更します。たとえば、言語を に設定し、誰かがフランス語なまりで英語を話しているような音声で英語のテキストを話します。
# Description: 
TextToSpeechHelpStringComponentPallette=TextToSpeech（テキスト読み上げ）コンポーネントは、指定されたテキストを読み上げます。音声のピッチと速度を設定できます。 <p>言語コードを指定して言語を設定することもできます。これにより、実際に話される言語ではなく、単語の発音が変更されます。たとえば、言語をフランス語に設定して英語のテキストを話すと、フランス語のアクセントで英語 (en) を話しているように聞こえます。</p> <p>国コードを指定して国を指定することもできます。これは発音に影響を与える可能性があります。たとえば、イギリス英語 (GBR) はアメリカ英語 (USA) とは異なって聞こえます。すべての国コードがすべての言語に影響するわけではありません。</p> <p>利用可能な言語と国は特定のデバイスによって異なり、AvailableLanguages プロパティと AvailableCountries（利用できる国）プロパティで一覧表示できます。</p>
# Description: 
TextSizePropertyDescriptions=リストビューアイテムのテキストサイズ。
# Description: 
TextProperties=テキスト
# Description: 
TextInputCanceledEventDescriptions=ユーザーがテキストダイアログに反応した後で発生するイベント。
# Description: 
TextColorDetailPropertyDescriptions=リストビュー文字列アイテムの詳細テキストのテキストの色。
# Description: 
TextBox__WidthPropertyDescriptions=テキストボックスの水平幅をピクセル単位で指定します。
# Description: 
TextBox__WidthPercentPropertyDescriptions=テキストボックスの水平幅を画面の幅のパーセンテージとして指定します。
# Description: 
TextBox__VisiblePropertyDescriptions=テキストボックスを画面上に表示するかどうかを指定します。値はテキストボックスが表示されている場合は true、非表示の場合は false です。
# Description: 
TextBox__TextPropertyDescriptions=テキストボックスの内容を返します。
# Description: 
TextBox__TextColorPropertyDescriptions=テキストの色です。デザイナーまたはブロック エディターで名前によって色を選択できます。デフォルトの文字色は黒です。
# Description: 
TextBox__TextAlignmentPropertyDescriptions=テキストを左揃え、中央揃え、または右揃えにするかどうか。デフォルトでは、テキストは左揃えで表示されます。
# Description: 
TextBox__RequestFocusMethodDescriptions=テキストボックスをアクティブに設定します。
# Description: 
TextBox__NumbersOnlyPropertyDescriptions=true の場合、このテキスト ボックスはキーボード入力として数字のみを受け入れます。数値には、小数点と、オプションで先頭にマイナス記号を含めることができます。これはキーボード入力にのみ適用されます。 NumbersOnly（数字のみ） が true の場合でも、[set Text to（テキストを設定）] を使用して任意のテキストを入力できます。
# Description: 
TextBox__LostFocusEventDescriptions=ユーザーが別のテキスト ボックスに触れた場合など、テキストボックスが入力用に選択されなくなったときに発生するイベントです。
# Description: 
TextBox__HintPropertyDescriptions=ユーザーが入力すべき内容についてのヒントを提供するために、テキストボックス内に薄く表示されるテキストです。これは、テキストプロパティが空の場合にのみ表示されます。
# Description: 
TextBox__HideKeyboardMethodDescriptions=キーボードを隠します。これが必要なのは複数行のテキストボックスだけです。1行テキストボックスは、ユーザーがDoneキーを押すとキーボードを閉じます。
# Description: 
TextBox__HeightPropertyDescriptions=テキストボックスの垂直の高さをピクセル単位で指定します。
# Description: 
TextBox__HeightPercentPropertyDescriptions=テキストボックスの垂直の高さを、画面の高さのパーセンテージとして指定します。
# Description: 
TextBox__GotFocusEventDescriptions=ユーザーが テキストボックスに触れた場合など、テキストボックスが入力用に選択されたときに発生するイベントです。
# Description: 
TextBox__FontTypefacePropertyDescriptions=テキストのフォントです。この値はデザイナーで変更できます。
# Description: 
TextBox__FontSizePropertyDescriptions=テキストのフォント サイズです。デフォルトでは 14.0 ポイントです。
# Description: 
TextBox__FontItalicPropertyDescriptions=テキストをイタリック体で表示するかどうか。デフォルトでは表示されません。
# Description: 
TextBox__FontBoldPropertyDescriptions=テキストのフォントを太字にするかどうか。デフォルトでは太字はありません。
# Description: 
TextBox__EnabledPropertyDescriptions=ユーザーが テキストボックス にテキストを入力できるかどうか。デフォルトでは、これは true です。
# Description: 
TextBox__BackgroundColorPropertyDescriptions=入力ボックスの背景色です。デザイナーまたはブロック エディターで名前によって色を選択できます。デフォルトの背景色は ''default'' (シェーディングされた 3D 外観) です。
# Description: 
TextBoxHelpStringComponentPallette=<p>ユーザーがテキストを入力するためのボックスです。初期またはユーザーが入力したテキスト値は、<code>Text</code> プロパティにあります。空白の場合、ボックス内に薄いテキストとして表示される <code>Hint</code> プロパティは、ユーザーに入力内容に関するガイダンスを提供します。</p><p><code>MultiLine</code> > プロパティは、テキストに複数の行を含めることができるかどうかを決定します。単一行のテキスト ボックスの場合、ユーザーが [完了] キーを押すとキーボードが自動的に閉じます。複数行のテキスト ボックスのキーボードを閉じるには、アプリで HideKeyboard メソッドを使用するか、ユーザーによる Back キーの押下に依存する必要があります。</p><p><code> NumbersOnly</code> プロパティは、キーボードが数値入力を受け入れるように制限します。 </p><p>その他のプロパティは、テキスト ボックスの外観 (<code>TextAlignment</code>、<code>BackgroundColor</code> など) とテキスト ボックスを使用できるかどうか (<code>) に影響します。有効</code>)。</p><p>テキスト ボックスは通常、<code>Button</code> コンポーネントとともに使用され、テキストの入力が完了したらユーザーがボタンをクリックします。</p><p >ユーザーが入力したテキストを表示したくない場合は、代わりに <code>PasswordTextBox</code> を使用してください。</p>
# Description: 
TemperaturePropertyDescriptions=センサーが利用可能で有効な場合の温度 (摂氏)
# Description: 
TemperatureProperties=温度
# Description: 
TemperatureChangedEvents=温度変化
# Description: 
TemperatureChangedEventDescriptions=温度（摂氏）の変化が検出されたときに呼び出されます。
# Description: 
TapThresholdPropertyDescriptions=右、左、上、下のピクセル数を設定します。(タッチではなく) ドラッグとみなされるには、一連のドラッグが開始点から移動する必要があります。
# Description: 
TakePictureMethods=写真を撮る
# Description: 
TagWrittenEventDescriptions=タグが NFC センサーの範囲に入り、書き込まれたことを示します。
# Description: 
TagReadEventDescriptions=新しいタグが検出されたことを示します。現在のところ、これはマニフェストで指定されたプレーンテキストのタグのみです。
# Description: Text for screen animation choice 'Zoom '
zoomScreenAnimation=ズーム
# Description: 
zoomParams=ズーム
# Description: 
TextingHelpStringComponentPallette=<p><code>SendMessage（メッセージの送信）</code> メソッドが呼び出されたときに、<code>Message</code> プロパティで指定されたテキスト メッセージを <code>PhoneNumber（携帯番号）< で指定された電話番号に送信するコンポーネント。 /code> プロパティ。</p> <p><code>ReceivingEnabled（受信有効）</code> プロパティが 1 に設定されている場合、メッセージは<b>受信されません</b>。 <code>受信可能</code> が 2 に設定されている場合、メッセージはアプリケーションの実行中にのみ受信されます。最後に、<code>受信可能</code> が 3 に設定されている場合、アプリケーションが実行されているときはメッセージが受信され、 アプリケーションが実行されていない<b>ときは</b>メッセージはキューに入れられ、ユーザーに通知が表示されます。 </p> <p>メッセージが到着すると、<code>MessageReceived（メッセージ受信）</code> イベントが発生し、送信番号とメッセージが提供されます。</p> <p> このコンポーネントを含むアプリは、次のような場合でもメッセージを受信します。それはバックグラウンドにあり（つまり、画面に表示されていないとき）、さらに、アプリが実行されていない場合でも、電話にインストールされている限り、アプリは実行されます。アプリがフォアグラウンドにないときに携帯電話がテキスト メッセージを受信すると、携帯電話の通知バーに通知が表示されます。通知を選択するとアプリが起動します。アプリ開発者としては、電話機でテキスト メッセージを無視できるように、ユーザーが ReceivingEnabled（受信可能） を制御できるようにしたいと思うでしょう。</p> <p>GoogleVoiceEnabled（グーグル有効）プロパティが true の場合、メッセージを送信できます。 Google Voiceを使用したWi-Fi。このオプションを使用するには、ユーザーが Google Voice アカウントを持っており、モバイル Voice アプリが電話にインストールされている必要があります。 Google Voice オプションは、Android 2.0 (Eclair) 以降をサポートする携帯電話でのみ機能します。</p> <p>電話番号 (例: 650-555-1212) を指定するには、<code>PhoneNumber（携帯番号）</code> を設定します。プロパティを、指定された数字を含むテキスト文字列に変換します (例: 6505551212)。ダッシュ、ドット、括弧を含めることができますが (例: (650)-555-1212)、無視されます。スペースは含めることはできません。</p> <p>アプリで電話番号を指定するもう 1 つの方法は、<code>PhoneNumberPicker（携帯番号ピッカー）</code> コンポーネントを組み込むことです。これにより、ユーザーは保存されている電話番号から電話番号を選択できるようになります。電話の連絡先にあります。</p>
# Description: 
TimePicker__EnabledPropertyDescriptions=設定されている場合、ユーザーはタイムピッカーをタップしてアクションを実行できます。
# Description: 
TimePicker__BackgroundColorPropertyDescriptions=ボタンの背景色を返します
# Description: 
TimePickerHelpStringComponentPallette=<p>クリックすると、ユーザーが時間を選択できるポップアップ ダイアログが起動するボタンです。</p>
# Description: 
TimeIntervalPropertyDescriptions=センサーが位置情報の更新を送信するために使用する最小時間間隔をミリ秒単位で決定します。ただし、位置の更新は、電話機の位置が実際に変化した場合にのみ受信され、指定された時間間隔の使用は保証されません。たとえば、時間間隔として 1000 が使用されている場合、位置の更新は 1000 ミリ秒より早く実行されることはありませんが、その後はいつでも実行される可能性があります。
# Description: 
ThumbPositionPropertyDescriptions=スライダーのつまみの位置を設定します。この値が最大値より大きい場合、最大値と同じ値に設定されます。この値が 最大値より小さい場合は、最小値と同じ値に設定されます。
# Description: 
ThumbEnabledPropertyDescriptions=スライダーのthumb（サム）を表示するかどうかを設定します。
# Description: 
ThumbColorInactivePropertyDescriptions=スイッチがオフ/チェックされていない場合の「スイッチ」のthumb（サム） (前後に切り替えるボタン) の色を返します
# Description: 
ThumbColorActivePropertyDescriptions=スイッチがオン/チェックされている場合の「スイッチ」のthumb（サム） (前後に切り替えるボタン) の色を返します
# Description: 
Thermometer__EnabledPropertyDescriptions=有効にすると、デバイスは変更をリッスンします。
# Description: 
Thermometer__AvailablePropertyDescriptions=デバイスに温度計コンポーネントをサポートするハードウェアがあるかどうかを指定します。
# Description: 
ThermometerHelpStringComponentPallette=周囲（外部）温度を測定できるセンサー部品です。ほとんどの Android デバイスにはこのセンサーがありません。
# Description: 
ThemePropertyDescriptions=アプリケーションが使用するテーマを設定します。
# Description: 
ThemeProperties=テーマ
# Description: 
Texting__SendMessageMethodDescriptions=メッセージと電話番号が事前に入力された状態で、電話のデフォルトのテキスト メッセージング アプリを起動します。
# Description: 
Texting__PhoneNumberPropertyDescriptions=SendMessag（メッセージの送信） 関数が呼び出されたときにテキスト メッセージを送信する電話番号を設定します。
# Description: 
GetBatteryCurrentMethodDescriptions=バッテリー電流を取得します。
# Description: 
GetBackgroundPixelColorMethods=背景ピクセルの色を取得する
# Description: 
GetBackgroundPixelColorMethodDescriptions=指定した点の色を取得します。これには背景や描画された点、線、円が含まれますが、スプライトは含まれません。
# Description: 
GenerateLightPropertyDescriptions=光センサーが光を発生させるかどうか。
# Description: 
GenerateLightProperties=光の生成
# Description: 
GenerateColorPropertyDescriptions=センサーによって生成されるべき色。なし、赤、緑、青のみが有効な値です。ディテクトカラー （色検出）プロパティがTrueに設定されている場合、センサーは色を生成しません。
# Description: 
GenerateColorProperties=色の生成
# Description: 
GameIdPropertyDescriptions=このアプリケーションのゲーム名に関して。同じゲームIDで1つ以上のゲームインスタンスを持つことができます。
# Description: 
GameIdProperties=ゲームID
# Description: 
GameClient__WebServiceErrorEventDescriptions=ウェブサーバーとの通信中にエラーが発生したことを示します。
# Description: 
GameClient__UserEmailAddressPropertyDescriptions=このゲームクライアントのプレイヤーIDとして使用されるメールアドレス。現在、ユーザーがゲームに参加するには、手動でこれを設定する必要があります。しかし、このプロパティは将来変更され、自動的に設定されるようになり、ユーザーは変更できなくなります。
# Description: 
GameClient__SendMessageMethodDescriptions=受信者リストのすべての受信者にキー付きメッセージを送信します。メッセージはコンテンツリストで構成されます。
# Description: 
GameClientHelpStringComponentPallette=アプリケーションがオンライン・ゲーム・サーバーと通信する方法を提供します
# Description: Error given when sending fails
GallerySendingError=ギャラリーへのプロジェクト送信エラー
# Description: Error given if login fails for some reason
GalleryLoginError=ギャラリーへのログインエラー
# Description: 
GPSLostEvents=GPS紛失
# Description: 
GPSLostEventDescriptions=このイベントは廃止されました。
# Description: 
GPSAvailableEvents=GPS利用可能
# Description: 
GPSAvailableEventDescriptions=このイベントは廃止されました。
# Description: 
FusiontablesControl__ApiKeyPropertyDescriptions=アプリ開発者のAPIキーのセッター。
# Description: 
FusiontablesControlHelpStringComponentPallette=ｖ説明：\nコンテキスト: FusiontablesControlHelpStringComponentPalletteSource\n<p>Google Fusion Tables と通信する非表示コンポーネント。 Fusion Tables を使用すると、データ テーブルを保存、共有、クエリ、視覚化できます。このコンポーネントを使用すると、これらのテーブルのクエリ、作成、変更が可能になります。</p> <p><font color=red><b>注:</b>&nbsp;Google は、2019 年 12 月 3 日に Fusion Tables サービスを終了しました。コンポーネントは機能しなくなりました。</font></p> <p>このコンポーネントは、<a href="https://developers.google.com/fusiontables/docs/v2/getting_started" target="_blank">Fusion を使用します。テーブル API V2.0</a>。 <p>Fusion Tables を使用するアプリケーションは、Google のサーバーに対して認証する必要があります。これを行うには 2 つの方法があります。最初の方法では、開発者が取得した API キーを使用します (下記を参照)。このアプローチでは、エンドユーザーも Fusion Table にアクセスするためにログインする必要があります。 2 番目の方法は、サービス アカウントを使用することです。この方法では、認証情報と、<a href="https://code.google.com/apis/console/" target="_blank">Google API コンソール<から取得する特別な「サービス アカウント メール アドレス」を作成します。 /a>。次に、Fusion Table Control にサービス アカウントの電子メール アドレスの名前を伝え、秘密キーをアセットとしてアプリケーションにアップロードし、このファイルを指すように キーファイル プロパティを設定します。最後に、デザイナーで「UseServiceAuthentication」チェックボックスをオンにします。サービス アカウントを使用する場合、エンドユーザーは Fusion Tables を使用するためにログインする必要はありません。サービス アカウントがすべてのアクセスを認証します。</p> <p>API キーを取得するには、次の手順に従ってください。</p> <ol> <li><a href="https://code.google.com/apis/console/" に移動します。
# Description: 
FusionTablesStandardErrorMessage=Fusion Tables（フュージョン）クエリでのエラー
# Description: 
FusionTablesDeprecated=このイベントは、<code>リクエストフレンドタイムライン</code> を通じてリクエストされたメッセージが取得されたときに発生します。 <code>timeline</code> パラメータと <code>Timeline</code> プロパティにはリストのリストが含まれます。各サブリストにはフォームのステータス更新 (ユーザー名メッセージ) が含まれます</a>
# Description: 
FunctionCompletedEvents=機能完了
# Description: 
FunctionCompletedEventDescriptions=関数呼び出しが完了したことを示します。
# Description: 
FullScreenPropertyDescriptions=VideoPlayer （ビデオプレイヤー）の動画が現在フルスクリーンモードで表示されているかどうかを返します。
# Description: 
FullScreenProperties=フルスクリーン
# Description: 
FriendTimelinePropertyDescriptions=このプロパティには、フォローされているユーザーの最新メッセージ 20 件が含まれます。最初はリストは空です。これを設定するには、プログラムは次の手順を実行する必要があります。 <ol> <li> <code>Authorize</code> メソッドを呼び出します。</li> <li> <code>IsAuthorized</code> イベントを待ちます。</li> <li> <code>Follow</code> メソッドを 1 つ以上呼び出してフォローするユーザーを指定します。</li> <li> <code>RequestFriendTimeline（リクエストフレンドタイムライン）</code> メソッドを呼び出します。</li> <li> <code>フレンドタイムラインの受信</code> イベントを待ちます。</li> </ol>このプロパティの値はメッセージのリストに設定されます (その後、<code>フレンドタイムラインのリクエスト< が呼び出されるまでその値が維持されます)。 /コード>。
# Description: 
FriendTimelineReceivedEvents=フレンド タイムライン の受信
# Description: 
FriendTimelineReceivedEventDescriptions=このイベントは、<code>RequestFriendTimeline</code> を通じてリクエストされたメッセージが取得されたときに発生します。 <code>timeline</code> パラメータと <code>Timeline</code> プロパティにはリストのリストが含まれます。各サブリストにはフォームのステータス更新 (ユーザー名メッセージ) が含まれます
# Description: 
FriendTimelineProperties=フレンドタイムライン
# Description: 
FormatTimeMethods=フォーマット時刻
# Description: 
FormatTimeMethodDescriptions=瞬間の時刻を表すテキスト
# Description: 
FormatDateTimeMethods=フォーマット 日付 時間
# Description: 
FormatDateTimeMethodDescriptions=指定したパターンの、ある瞬間の日付と時刻を表すテキストを返します
# Description: 
FormatDateMethods=日付フォーマット
# Description: 
FormatDateMethodDescriptions=指定されたパターンの瞬間の日付を表すテキスト
# Description: 
ForgetLoginMethods=ログイン忘れ
# Description: 
ForgetLoginMethodDescriptions=エンドユーザーのログイン認証情報を忘れます。サービス認証には影響しません
# Description: 
FontTypefaceProperties=フォント書体
# Description: 
FontTypefaceDetailPropertyDescriptions=ラベルのテキストのフォントフェイスをデフォルト、セリフ、サンセリフ、等幅で返します。
# Description: 
FontTypefaceDetailProperties=フォント書体の詳細
# Description: 
FontSizeProperties=フォントサイズ
# Description: 
FontSizeDetailPropertyDescriptions=リストビューの文字列の文字サイズ アイテム.
# Description: 
FontSizeDetailProperties=フォントサイズの詳細
# Description: 
FontItalicProperties=斜体フォント
# Description: 
FontBoldProperties=太字フォント
# Description: 
FollowersReceivedEvents=フォロワー数
# Description: 
FollowersReceivedEventDescriptions=このイベントは、<code>RequestFollowers</code> を通じてリクエストされたログイン ユーザーのフォロワーがすべて取得されたときに発生します。フォロワーのリストは、<code>followers</code> パラメーターまたは <code>Followers</code> プロパティで見つけることができます。
# Description: 
FollowersPropertyDescriptions=このプロパティには、ログインしているユーザーのフォロワーのリストが含まれます。最初はリストは空です。これを設定するには、プログラムは次の手順を実行する必要があります。 <ol> <li> <code>Authorize</code> メソッドを呼び出します。</li> <li> <code>IsAuthorized</code> イベントを待ちます。</li> <li> <code>RequestFollowers</code> メソッドを呼び出します。</li> <li> <code>FollowersReceived</code> イベントを待ちます。</li></ol>このプロパティの値はその後、フォロワーのリストに設定されます (その後 <code>RequestFollowers</code> が呼び出されるまでその値が維持されます)。
# Description: 
FollowersProperties=フォロワー
# Description: 
FollowMethods=フォロー
# Description: 
FollowMethodDescriptions=ユーザーのフォローを開始します。
# Description: 
FollowLinksPropertyDescriptions=WebViewer （ウェブ閲覧者）でリンクがタップされたときに、リンクをたどるかを決定します。リンクをたどる場合、GoBack（戻る）とGoForward（前進）を使用してブラウザの履歴を移動できます。
# Description: 
FollowLinksProperties=リンクをフォローする
# Description: 
FlungEvents=フラング（投げ飛ばす）
# Description: 
FirstRemovedEvents=最初に取り除かれたもの
# Description: 
FirebaseURLPropertyDescriptions=この Firebase（ファイヤーベースDB） の URL を取得します。
# Description: 
FirebaseURLProperties=ファイヤーベースURL
# Description: 
FirebaseTokenPropertyDescriptions=デフォルトの Firebase（ファイヤーベース） のtoken（トークン）を指定します。
# Description: 
FirebaseTokenProperties=ファイヤーベースToken（トークン）
# Description: 
FirebaseErrorEvents=ファイヤーベースエラー
# Description: 
FirebaseErrorEventDescriptions=Firebase （ファイヤーベース）との通信でエラーが発生したことを示します。
# Description: 
FirebaseDB__StoreValueMethodDescriptions=Firebase（ファイヤーベース） に、指定されたタグの下に指定された値を格納するよう依頼します。
# Description: 
FirebaseDB__GotValueEventDescriptions=GetValue（取得値） 要求が成功したことを示します。
# Description: 
FirebaseDB__GetValueMethodDescriptions=GetValue（取得値） は Firebase（ファイヤーベース） に、指定されたタグの下に格納されている値を取得するよう依頼します。タグの下に値が格納されていない場合は、GotValue （得た値）に valueIfTagNotThere（タグがない場合の値） を渡します。
# Description: 
FirebaseDB__FirstRemovedEventDescriptions="RemoveFirst（最初に削除 ） "関数によってトリガーされるイベントです。引数 "value（値） "は、リストの最初にあり、現在削除されているオブジェクトです。
# Description: 
FirebaseDB__DataChangedEventDescriptions=Firebase（ファイヤーベース）のデータが変更されたことを示します。更新されたタグと値でイベントを起動します。
# Description: 
FirebaseDB__ClearTagMethodDescriptions=Firebase（ファイヤーベース）からタグを削除する
# Description: 
FirebaseDBHelpStringComponentPallette=Firebase（ファイヤーベース） と通信して情報を保存・取得する、目に見えないコンポーネントです。
# Description: 
FillScreenMethods=塗りつぶし画面
# Description: 
FillScreenMethodDescriptions=スクリーンを色で塗りつぶす。
# Description: 
FillOpacityPropertyDescriptions=マップフィーチャーの内部の不透明度。
# Description: 
FillOpacityProperties=塗りつぶしの不透明度
# Description: 
FillColorProperties=塗りつぶし色
# Description: 
File__LegacyModePropertyDescriptions=アプリが外部ストレージのディレクトリのルートからファイルにアクセスできるようにします（レガシーモード）。
# Description: 
File__GotTextEventDescriptions=ファイルの内容が読み込まれたことを示すイベントです。
# Description: 
File__DeleteMethodDescriptions=ストレージからファイルを削除します。ファイル名の前に / を付けると、SD カード内の特定のファイルを削除します。例えば、/myFile.txt は /sdcard/myFile.txt というファイルを削除します。ファイルが/で始まらない場合、プログラムのプライベートストレージにあるファイルが削除されます。アセットファイルは削除できないため、//で始まるファイルはエラーとなります。
# Description: 
FileHelpStringComponentPallette=ファイルを保存・取得するための非可視コンポーネントです。このコンポーネントを使用して、デバイスにファイルを書き込んだり、読み込んだりします。デフォルトの動作では、アプリに関連付けられたプライベートデータディレクトリにファイルを書き込みます。コンパニオンは、デバッグ用のパブリックディレクトリにファイルを書き込む特殊なケースです。ファイル コンポーネントがパスとスコープを使用してファイルへのアクセスを管理する方法の詳細については、[詳細情報] リンクを使用してください。
# Description: 
FeaturesProperties=フィーチャー
# Description: 
FeaturesFromGeoJSONPropertyDescriptions=与えられた文字列からフィーチャーのコレクションをロードします。文字列が有効な GeoJSON でない場合、ErrorLoadingFeatureCollection （エラーローディングフィーチャーコレクション）エラーが url = <string> で実行されます。
# Description: 
FeaturesFromGeoJSONProperties=フィーチャーfrom GeoJSON
# Description: 
FeatureStopDragEvents=フィーチャーストップドラッグ
# Description: 
FeatureStopDragEventDescriptions=ユーザーがマップフィーチャのドラッグを停止しました。
# Description: 
FeatureFromDescriptionMethods=説明からのフィーチャー
# Description: 
FeatureStartDragEvents=フィーチャースタートドラッグ
# Description: 
FeatureStartDragEventDescriptions=ユーザーはマップフィーチャーをドラッグし始めました。
# Description: 
FeatureLongClickEvents=フィーチャーロングドラッグ
# Description: 
FeatureLongClickEventDescriptions=ユーザーがマップ機能を長押ししました。
# Description: 
FeatureFromDescriptionMethodDescriptions=フィーチャ記述を App Inventor マップ フィーチャに変換します。ポイントは次のように変換されます
# Description: 
FeatureDragEvents=フィーチャードラッグ
# Description: 
FeatureDragEventDescriptions=ユーザーが、マップフィーチャーをドラッグしました。
# Description: 
FeatureCollection__WidthPropertyDescriptions=FeatureCollection（フィーチャーコレクション） の横幅をピクセル単位で指定します。
# Description: 
FeatureCollection__WidthPercentPropertyDescriptions=FeatureCollection（フィーチャーコレクション）の横幅をスクリーンの横幅に対するパーセンテージで指定します。
# Description: 
FeatureCollection__VisiblePropertyDescriptions=FeatureCollection（フィーチャーコレクション） を画面に表示するかどうかを指定します。FeatureCollectionが表示されている場合はtrue、非表示の場合はfalseとなります。
# Description: 
FeatureCollection__FeaturesPropertyDescriptions=このフィーチャーコレクションに配置されているフィーチャのリストです。このリストには、説明からのフィーチャー説明からのフィーチャーの呼び出しによって作成されたフィーチャーも含まれます
# Description: 
FeatureCollection__SourcePropertyDescriptions=feature collection（フィーチャコレクション）の入力に使用されたソース URL を指定します。フィーチャコレクションがURLからロードされなかった場合、これは空文字列になります。
# Description: 
FeatureCollection__HeightPropertyDescriptions=FeatureCollection （フィーチャーコレクション）の垂直方向の高さをピクセル単位で指定します。
# Description: 
FeatureCollection__HeightPercentPropertyDescriptions=FeatureCollection（フィーチャーコレクション） の垂直方向の高さを、スクリーンの高さに対するパーセンテージで指定します。
# Description: 
FeatureCollectionHelpStringComponentPallette=FeatureCollection （フィーチャーコレクション）には、1 つ以上のマップフィーチャがグループとして含まれます。コレクション内のフィーチャで発生したイベントは、コレクションオブジェクトの対応するイベントもトリガします。FeatureCollection は、マップにコンテンツを追加する手段として、外部リソースからロードできます。
# Description: 
FeatureClickEvents=フューチャークリック
# Description: 
FeatureClickEventDescriptions=ユーザーが地図フィーチャーをクリックしました。
# Description: 
ExtrasPropertyDescriptions=アクティビティに追加データとして渡されるキーと値のペアのリストを指定します。
# Description: 
ExtrasProperties=エクストラ
# Description: 
ExtraValuePropertyDescriptions=アクティビティに渡される追加値を返します： 新しいコードでは、代わりにExtras（エクストラ）プロパティを使用してください。
# Description: 
ExtraValueProperties=エクストラバリュー（値）
# Description: 
ExtraKeyPropertyDescriptions=アクティビティに渡される追加キーを返します： 新しいコードでは、Extras（エクストラ）プロパティを代わりに使用してください。
# Description: 
ExtraKeyProperties=エクストラキー
# Description: 
ExtendMovesOutsideCanvasPropertyDescriptions=移動がキャンバスの境界を超えることができるかどうかを決定します。デフォルトは false です。このプロパティは後方互換性のために提供されています。
# Description: 
ExtendMovesOutsideCanvasProperties=キャンバスの外に動きを拡張する
# Description: 
ExistsMethods=存在する
# Description: 
ExistsMethodDescriptions=与えられたスコープにパスが存在するかどうかをテストします。
# Description: 
Ev3UltrasonicSensor__WithinRangeEventEnabledPropertyDescriptions=距離がBottomOfRange（最小）とTopOfRange（最大）の間にあるときにWithinRange（範囲内）イベントを発生させるかどうか。
# Description: 
DatePicker__ImagePropertyDescriptions=ボタンに表示する画像。
# Description: 
DatePicker__FontTypefacePropertyDescriptions=DatePicker（日付を選択する部品） テキストのポイントサイズ。
# Description: 
DatePicker__FontSizePropertyDescriptions=DatePicker（日付を選択する部品） テキストのポイントサイズ。
# Description: 
DatePicker__FontItalicPropertyDescriptions=設定された場合、DatePicker （日付を選択する部品）テキストはイタリック体で表示されます。
# Description: 
DatePicker__FontBoldPropertyDescriptions=設定された場合、DatePicker（日付を選択する部品）テキストは太字で表示されます。
# Description: 
DatePicker__BackgroundColorPropertyDescriptions=ボタンの背景色を返します
# Description: 
DatePickerHelpStringComponentPallette=<p>ボタンをクリックすると、ポップアップダイアログが表示され、ユーザーが日付を選択することができます。</p>
# Description: 
DataUriPropertyDescriptions=アクティビティを開始するために使用されるデータURIを返します。
# Description: 
DataUriProperties=データUrl
# Description: 
DataTypePropertyDescriptions=アクティビティに渡すMIMEタイプを返します。
# Description: 
DataTypeProperties=データタイプ
# Description: 
DataChangedEvents=データ変更
# Description: The label used to indicate cycling navigation.
CyclingNavMethod=サイクリング
# Description: 
CurrentUrlPropertyDescriptions=現在表示されているページのURLです。リンクをたどって新しいページにアクセスした場合、これはホームURLとは異なる可能性があります。
# Description: 
CurrentUrlProperties=現在のUrl
# Description: 
CurrentPageTitlePropertyDescriptions=現在表示されているページのタイトル
# Description: 
CurrentPageTitleProperties=現在のページタイトル
# Description: 
CurrentAddressPropertyDescriptions=現住所のテキスト表現、または「No address available（住所不明）」を提供します。
# Description: 
CurrentAddressProperties=現在の住所
# Description: 
CreateMarkerMethods=マーカーを作成
# Description: 
CreateMarkerMethodDescriptions=指定した緯度と経度に、デフォルトのプロパティを持つ新しいマーカーを作成します。
# Description: 
CreateElementMethods=要素の作成
# Description: 
CreateElementMethodDescriptions=ListView（リスト表示）エントリーを作成する。MainText（メインテキスト）は必須です。DetailTextとImageName（画像名）はオプションです。
# Description: 
CountryPropertyDescriptions=音声生成に使用する国コードです。これは発音に影響します。例えば、イギリス英語（GBR）とアメリカ英語（USA）では発音が異なります。すべての国コードがすべての言語に影響するわけではありません。
# Description: 
CountryProperties=国
# Description: 
CopyFileMethods=コピーファイル
# Description: 
CopyFileMethodDescriptions=最初のファイルの内容を2番目のファイルにコピーします。
# Description: 
ContactUriPropertyDescriptions=デバイス上のコンタクトの位置を指定するURIです。
# Description: 
ContactUriProperties=Uriに問い合わせ
# Description: 
ContactPicker__WidthPropertyDescriptions=ContactPickerの横幅をピクセル単位で指定します。
# Description: 
ContactPicker__WidthPercentPropertyDescriptions=ContactPickerの横幅を画面の横幅に対する割合で指定します。
# Description: 
ContactPicker__VisiblePropertyDescriptions=ContactPickerを画面に表示するかどうかを指定します。ContactPickerが表示されている場合はtrue、非表示の場合はfalseとなります。
# Description: 
ContactPicker__TouchUpEventDescriptions=ContactPicker がリリースされたことを示します。
# Description: 
ContactPicker__TouchDownEventDescriptions=ContactPicker が押し下げられたことを示します。
# Description: 
ContactPicker__TextPropertyDescriptions=ContactPickerに表示するテキスト。
# Description: 
ContactPicker__TextColorPropertyDescriptions=ボタンテキストの色。
# Description: 
ContactPicker__TextAlignmentPropertyDescriptions=左か、中央か、右か。
# Description: 
ContactPicker__ShowFeedbackPropertyDescriptions=画像を背景に持つ ContactPicker に視覚的なフィードバックを表示するかどうかを指定します。
# Description: 
ContactPicker__ShapePropertyDescriptions=`ContactPicker` のスタイルを返します。
# Description: 
ContactPicker__PicturePropertyDescriptions=選択したコンタクトの画像 URI を返します。この URI を使用して、コンタクトの写真やその他のフィールドを取得できます。
# Description: 
ContactPicker__PhoneNumberPropertyDescriptions=選択した連絡先に関連付けられた主電話番号、または連絡先に電話番号が関連付けられていない場合は空文字列を返します。
# Description: 
ContactPicker__OpenMethodDescriptions=ユーザーがクリックしたかのように、ContactPickerを開きます。
# Description: 
ContactPicker__LostFocusEventDescriptions=カーソルがContactPickerから離れ、クリックできなくなったことを示します。
# Description: 
ContactPicker__ImagePropertyDescriptions=ボタンに表示する（される）画像。
# Description: 
ContactPicker__HeightPropertyDescriptions=ContactPickerの垂直方向の高さをピクセル単位で指定します。
# Description: 
ContactPicker__HeightPercentPropertyDescriptions=ContactPickerの垂直方向の高さを、画面の高さに対するパーセンテージで指定します。
# Description: 
ContactPicker__GotFocusEventDescriptions=カーソルがContactPickerの上に移動し、クリックできるようになったことを示します。
# Description: 
ContactPicker__FontTypefacePropertyDescriptions=ContactPicker テキストのフォントファミリー。
# Description: 
ContactPicker__FontSizePropertyDescriptions=ContactPicker テキストのポイントサイズ。
# Description: 
ContactPicker__FontItalicPropertyDescriptions=設定された場合、ContactPickerテキストはイタリック体で表示されます。
# Description: 
ContactPicker__FontBoldPropertyDescriptions=設定すると、ContactPickerのテキストは太字で表示されます。
# Description: 
ContactPicker__EnabledPropertyDescriptions=設定されている場合、ユーザーはContactPickerをタップしてアクションを起こすことができます。
# Description: 
ContactPicker__BeforePickingEventDescriptions=イベント `ContactPicker` がクリックされたとき、またはpicker（ピッカー）が表示されたときに発生するイベントです
# Description: 
ContactPicker__BackgroundColorPropertyDescriptions=ボタンの背景色を返します
# Description: 
ContactPicker__AfterPickingEventDescriptions=`ContactPicker`アクティビティが結果を返し、プロパティが入力された後に発生するイベントです。
# Description: 
ContactPickerHelpStringComponentPallette=ボタンをクリックすると、選択する連絡先のリストが表示されます。ユーザーが選択した後、以下のプロパティが選択したコンタクトに関する情報に設定されます：連絡先の名前 </li> <li> <code>EmailAddress</code>: 連絡先のプライマリ電子メール アドレス </li> <li> <code>ContactUri</code>: 連絡先s デバイス上の URI </li><li> <code>EmailAddressList</code>: 連絡先の電子メール アドレスのリスト </li> <li> <code>PhoneNumber</code>: 連絡先の主電話番号 (以降の Android バージョン)</li> <li> <code>PhoneNumberList</code>: 連絡先の電話番号のリスト (以降の Android バージョン)</li> <li> <code>Picture</code>: 連絡先の画像を含むファイルの名前。<code>Image</code> または < の <code>Picture</code> プロパティ値として使用できます。 code>ImageSprite</code> コンポーネント。</li></ul></p><p>その他のプロパティはボタンの外観に影響します (<code>TextAlignment</code>、<code>BackgroundColor</code>)。 </p><p>ContactPicker コンポーネントは、すべての電話で動作するとは限りません。たとえば、システム 3.0 より前の Android システムでは、電話番号を選択できず、電子メール アドレスのリストには電子メールが 1 つだけ含まれます。
# Description: 
ContactNamePropertyDescriptions=選択した連絡先のフルネーム、または名前がない場合は空文字列を返します。
# Description: 
ContactNameProperties=連絡先名
# Description: 
ConsumerSecretPropertyDescriptions=消費者の秘密(ConsumerSecret)プロパティの取得方法。
# Description: 
ConsumerSecretProperties=消費者の秘密
# Description: 
ConsumerKeyPropertyDescriptions=消費者キー(ConsumerKey)プロパティの取得方法。
# Description: 
ConsumerKeyProperties=消費者キー
# Description: 
ConnectionAcceptedEvents=接続を許可
# Description: 
ConnectionAcceptedEventDescriptions=bluetooth接続が受け入れられたことを示します。
# Description: 
ConnectWithUUIDMethods=UUIDと接続
# Description: 
ConnectWithUUIDMethodDescriptions=指定されたアドレスとUUIDを持つBluetoothデバイスに接続します。接続に成功した場合はtrueを返します。
# Description: 
ConnectMethods=接続
# Description: 
ConnectMethodDescriptions=指定されたアドレスとシリアルポートプロファイル（SPP）を持つBluetoothデバイスに接続します。接続に成功した場合は true を返します。
# Description: 
CompletedEvents=完了
# Description: 
ColumnsPropertyDescriptions=Columnsプロパティゲッターメソッド。
# Description: 
ColumnsProperties=COLUMN 関数
# Description: 
ColumnPropertyDescriptions=カラム（列）プロパティ取得方法。
# Description: 
ColorRightPropertyDescriptions=親指の右側のスライダーの色。
# Description: 
ColorRightProperties=ColorRight（カラーライト）
# Description: 
ColorLeftPropertyDescriptions=親指の左側にあるスライダーの色。
# Description: 
ColorLeftProperties=ColorLeft（カラーレフト）
# Description: 
ColorChangedEvents=色変更
# Description: 
ColorChangedEventEnabledProperties=ColorChangedEventEnabled（カラーチェンジ・イベント有効）
# Description: 
CollidingWithMethods=CollidingWith（衝突する）
# Description: 
CollidedWithEvents=CollidedWith（と一緒に）
# Description: 
CollidedWithEventDescriptions=2つの有効なスプライト(
# Description: 
CloudDB__StoreValueMethodDescriptions=タグに値を格納します。
# Description: 
CloudDB__GotValueEventDescriptions=であることを示す
# Description: 
CloudDB__GetValueMethodDescriptions=タグの値を取得します。値は返されませんが、値が検索されるとGotValueイベントが発生します。
# Description: 
CloudDB__FirstRemovedEventDescriptions=RemoveFirstFromList "関数（value)"によってトリガーされるイベントです。引数 "関数（value） "は、リストの最初にあり、現在削除されているオブジェクトです。
# Description: 
CloudDB__DataChangedEventDescriptions=クラウドDBデータが与えられたタグと値に対して変更されたことを示すイベント。
# Description: 
CloudDB__ClearTagMethodDescriptions=CloudDBからタグを削除します。
# Description: 
CloudDBHelpStringComponentPallette=インターネットに接続されたデータベースサーバー（Redisソフトウェアを使用）にデータを保存できる、目に見えないコンポーネントです。これにより、アプリのユーザー同士でデータを共有することができます。デフォルトでは、データはMITが管理するサーバーに保存されますが、独自のサーバーをセットアップして実行することもできます。RedisServer "プロパティと "RedisPort "プロパティを設定して、独自のサーバーにアクセスしてください。
# Description: 
CloudDBErrorEvents=CloudDBエラー
# Description: 
CloudDBErrorEventDescriptions=CloudDB Redisサーバーとの通信中にエラーが発生したことを示します。
# Description: 
CloudConnectedMethods=Cloud接続
# Description: 
CloudConnectedMethodDescriptions=ネットワーク上にいてCloudDBサーバーに接続できそうであればTrueを返します。
# Description: 
CloseSerialMethods=シリアルを閉じる
# Description: 
CloseSerialMethodDescriptions=シリアル接続を閉じます。クローズするとtrueを返します。
# Description: 
CloseScreenAnimationPropertyDescriptions=現在の画面を閉じて前の画面に戻るときのアニメーションです。有効なオプションはデフォルト、フェード、ズーム、水平にスライド、垂直にスライド、なしです
# Description: 
CloseScreenAnimationProperties=CloseScreenAnimation（クローズスクリーンアニメーション）
# Description: 
CloseScreenAnimationMethods=CloseScreenAnimation（クローズスクリーンアニメーション）
# Description: 
ClockHelpStringComponentPallette=<p>携帯電話の内部時計を使用して、瞬間の時間を提供する非可視コンポーネントです。</p> <p>定期的に設定された間隔でタイマーを起動し、時間の計算、操作、および変換を実行できます。使用可能なパターンは空文字列です、 MM/DD/YYYY HH:mm:ss a, or MMM d, yyyyHH:mm. 空文字列は、FormatDateTimeの場合は "MMM d, yyyy HH:mm:ss a"、FormatDateの場合は "MMM d, yyyy "となるデフォルトの書式を提供します。<a すべての可能なフォーマットを見るには、以下を参照してください。href="https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html" _target="_blank">
# Description: 
ClickablePropertyDescriptions=画像をクリック可能にするかどうかを指定します。
# Description: 
ClickableProperties=クリック可能
# Description: 
ClickEvents=クリック
# Description: 
ClearTagMethods=タグのクリア（消去）
# Description: 
ClearMethods=消去
# Description: 
ClearMethodDescriptions=このキャンバスに描かれたものはすべて消去されますが、背景色や画像は消去されません。
# Description: 
ClearLocationsMethods=位置をクリア（消去）
# Description: 
ClearLocationsMethodDescriptions=保存された場所のアクセス許可を消去します。
# Description: 
ClearCookiesMethods=クッキーのクリア（消去）
# Description: 
ClearCachesMethods=キャッシュのクリア（消去）
# Description: 
ClearCachesMethodDescriptions=WebViewのキャッシュをクリア（消去）します。
# Description: 
ClearAllMethods=すべてクリア（すべて消去）
# Description: 
ClearAllMethodDescriptions=データストア全体をクリア（消去）します。
# Description: 
Circle__VisiblePropertyDescriptions=円を画面に表示するかどうかを指定します。コンポーネントが表示されている場合はtrue、非表示の場合はfalseとなります。
# Description: 
Circle__TypePropertyDescriptions=フィーチャのタイプを返します。円の場合、MapFeature.Circle ("円(Circle)")を返します。
# Description: 
Circle__TitlePropertyDescriptions=ユーザーが円をクリックしたときに表示される情報ウィンドウに表示されるタイトル。
# Description: 
Circle__StrokeWidthPropertyDescriptions=円の輪郭を描くストロークの幅。
# Description: 
Circle__StrokeColorPropertyDescriptions=円の輪郭に使われるペイントの色。
# Description: 
Circle__ShowInfoboxMethodDescriptions=円のinfobox （インフォボックス）を表示します。これはEnableInfobox（有効なインフォボックス）がfalseに設定されていてもinfoboxを表示します。
# Description: 
Circle__SetLocationMethodDescriptions=円の中心を設定します。
# Description: 
Circle__RadiusPropertyDescriptions=円の半径（メートル単位）。
# Description: 
Circle__LongitudePropertyDescriptions=円の中心の経度。
# Description: 
Circle__LongClickEventDescriptions=ユーザーが円を長押ししました。このイベントはDragable（ドラッグ）がfalseの場合のみに発生します。
# Description: 
Circle__LatitudePropertyDescriptions=円の中心の緯度。
# Description: 
Circle__FillColorPropertyDescriptions=円を塗りつぶすのに使われるペンキの色。
# Description: 
Circle__EnableInfoboxPropertyDescriptions=ユーザーが円をタップしたときに infobox（インフォボックス）ウィンドウを表示するかどうかを設定します。
# Description: 
Circle__DraggablePropertyDescriptions=Draggable （ドラッグ）プロパティは、ユーザーがサークルを長押しして新しい場所にドラッグできるかどうかを設定するために使用されます。
# Description: 
Circle__DragEventDescriptions=ユーザーは円をドラッグしました。
# Description: 
Circle__DistanceToPointMethodDescriptions=円と緯度経度点間の距離をメートル単位で計算します。
# Description: 
Circle__DescriptionPropertyDescriptions=ユーザーが円をクリックしたときに、表示される情報（ウィンドウに表示されます）の説明です。
# Description: 
Circle__ClickEventDescriptions=ユーザーは円をクリックしました。
# Description: 
CircleHelpStringComponentPallette=円
# Description: 
ChoosingCanceledEvents=選択キャンセル
# Description: 
ChoosingCanceledEventDescriptions=ユーザーがShowChooseDialogをキャンセルしたときに発生するイベントです。
# Description: 
CheckedPropertyDescriptions=ボックスにチェックが入っていればtrue、そうでなければfalse。
# Description: 
CheckedProperties=チェック済み
# Description: 
CheckBox__WidthPropertyDescriptions=CheckBox（チェックボックス）の横幅を、ピクセル単位で指定します。
# Description: 
CheckBox__WidthPercentPropertyDescriptions=CheckBox（チェックボックス）の横幅を、画面の横幅に対するパーセンテージで指定します。
# Description: 
CheckBox__VisiblePropertyDescriptions=CheckBox（チェックボックス）を画面に表示するかどうかを指定します。値は、CheckBoxが表示されている場合はtrue、非表示の場合はfalseになります。
# Description: 
CheckBox__TextPropertyDescriptions=CheckBox（チェックボックス）が表示するテキストを指定します。
# Description: 
CheckBox__TextColorPropertyDescriptions=CheckBox（チェックボックス）のテキスト色をアルファ-赤-緑-青の整数で指定します。
# Description: 
CheckBox__LostFocusEventDescriptions=CheckBox（チェックボックス）がフォーカスされなくなりました。
# Description: 
CheckBox__HeightPropertyDescriptions=CheckBox（チェックボックス）の垂直方向の高さを、ピクセル単位で指定します。
# Description: 
CheckBox__HeightPercentPropertyDescriptions=CheckBox（チェックボックス）の垂直方向の高さを、スクリーンの高さに対するパーセンテージで指定します。
# Description: 
CheckBox__GotFocusEventDescriptions=CheckBox（チェックボックス）がフォーカスされたコンポーネントになりました。
# Description: 
CheckBox__FontTypefacePropertyDescriptions=CheckBox（チェックボックス）のテキストフォント面を指定します。
# Description: 
CheckBox__FontSizePropertyDescriptions=CheckBox（チェックボックス） のテキストフォントサイズを、スケールに依存しないピクセル単位で指定します。
# Description: 
CheckBox__FontItalicPropertyDescriptions=CheckBox （チェックボックス）のテキストをイタリック体にする場合は true を設定します。
# Description: 
CheckBox__FontBoldPropertyDescriptions=CheckBox（チェックボックス） のテキストを太字にする場合は true を設定します。
# Description: 
CheckBox__EnabledPropertyDescriptions=CheckBox （チェックボックス）がアクティブでクリック可能であれば真(true)。
# Description: 
CheckBox__ChangedEventDescriptions=ユーザーはCheckBox（チェックボックス）をタップして離しました。
# Description: 
CheckBox__BackgroundColorPropertyDescriptions=CheckBox（チェックボックス）の背景色をアルファ-赤-緑-青の整数で指定します。
# Description: 
CheckBoxHelpStringComponentPallette=ユーザーがクリックするとイベントが発生するチェックボックスです。外観に影響するプロパティが多数あり、デザイナーまたはブロックエディタで設定できます。
# Description: 
CheckAuthorizedMethods=CheckAuthorized（認証チェック）
# Description: 
CheckAuthorizedMethodDescriptions=すでにアクセス権があるかどうかをチェックし、もしあればIsAuthorizedイベントハンドラを呼び出します。
# Description: 
CharacterEncodingPropertyDescriptions=テキストの送受信時に使用する文字エンコーディングを設定します。デフォルト値は `"UTF-8" です
# Description: 
ChangedEvents=変更
# Description: 
CentroidMethods=重心
# Description: 
CentroidMethodDescriptions=ポリゴンの重心を（緯度経度）のペアとして返します。
# Description: 
CenterMethods=中心
# Description: 
CenterMethodDescriptions=（緯度経度）形式のリストとして矩形の中心を返します。
# Description: 
CenterFromStringPropertyDescriptions=<p>マップの初期中心座標を設定します。値はカンマで区切られた10進数の緯度経度座標の組で指定します。例えば、<code>42.359144, -71.093612</code>のように指定します。</p><p>ブロックコードでは、パフォーマンス上の理由から、このプロパティで使用するために文字列表現に変換するのではなく、数値の緯度と経度でSetCenterを使用することをおすすめします。</p>
# Description: 
CenterFromStringProperties=文字列からの中心
# Description: 
Canvas__WidthPropertyDescriptions=キャンバスの横幅を、ピクセル単位で指定します。
# Description: 
Canvas__WidthPercentPropertyDescriptions=キャンバスの水平方向の幅を、スクリーンの幅に対するパーセンテージで指定します。
# Description: 
Canvas__VisiblePropertyDescriptions=キャンバスを画面に表示するかどうかを指定します。キャンバスが表示されている場合はtrue、非表示の場合はfalseとなります。
# Description: 
Canvas__TouchedEventDescriptions=ユーザーがキャンバスにタッチし、すぐに指を離したとき：キャンバスの左上からの相対的なタッチの位置（x,y）を提供します。TouchedAnySpriteは、同じタッチがスプライトにもタッチした場合にtrueになり、そうでない場合はfalseになります。
# Description: 
Canvas__TouchUpEventDescriptions=ユーザーがキャンバスへのタッチを止めたとき（TouchDownイベントの後に指を離したとき）：キャンバスの左上からの相対的なタッチの位置（x,y）を提供します
# Description: 
Canvas__TouchDownEventDescriptions=ユーザーがキャンバスに触れ始めたとき（キャンバスに指を置き、そのままにしたとき）：キャンバスの左上からの相対的なタッチの位置（x,y）を提供します
# Description: 
Canvas__TextAlignmentPropertyDescriptions=DrawText()またはDrawAngle()によって描画されたテキストの、そのコマンドで指定された点に対する配置を決定する：テキストの左の点、テキストの中央の点、またはテキストの右の点。
# Description: 
Canvas__SaveMethodDescriptions=このキャンバスの画像をデバイスの外部ストレージに保存します。エラーが発生した場合は、ScreenのErrorOccurredイベントが呼び出されます。
# Description: 
Canvas__PaintColorPropertyDescriptions=線を引く色
# Description: 
Canvas__HeightPropertyDescriptions=キャンバスの縦の高さを、ピクセル単位で指定します。
# Description: 
Canvas__HeightPercentPropertyDescriptions=キャンバスの垂直方向の高さを、スクリーンの高さに対するパーセンテージで指定します。
# Description: 
Canvas__FontSizePropertyDescriptions=キャンバスに描画されるテキストのフォントサイズ。
# Description: 
Canvas__FlungEventDescriptions=キャンバス上でフライングジェスチャ（クイックスワイプ）が行われたとき：キャンバスの左上からのフライングの開始位置（x,y）を提供します。また、フリングの速度 (ピクセル/ミリ秒) と方位 (0-360 度)、フリングのベクトルの x 速度と y 速度成分も提供します。"フライング・スプライト(flungSprite)"の値は、スプライトがジェスチャの開始点の近くにあった場合に真になります。
# Description: 
Canvas__DrawPointMethodDescriptions=与えられた座標の点をキャンバスに描画します。
# Description: 
Canvas__DrawLineMethodDescriptions=キャンバス上の指定された座標の間に線を描画します。
# Description: 
Canvas__DrawCircleMethodDescriptions=キャンバス上の指定された座標を中心に、指定された半径の円（塗りつぶし）を描画します。
# Description: 
Canvas__DraggedEventDescriptions=ある点(prevX, prevY)から別の点(x, y)へドラッグしたとき。startX,startYのペアはユーザーが最初に画面に触れた場所を示し、draggedAnySpriteはスプライトがドラッグされているかどうかを示します。
# Description: 
Canvas__BackgroundImagePropertyDescriptions=キャンバスの背景画像を含むファイル名
# Description: 
Canvas__BackgroundColorPropertyDescriptions=キャンバスの背景色。
# Description: 
CanvasHelpStringComponentPallette=<p>2次元のタッチセンサー式長方形パネルで、描画やスプライトの移動ができます。</p> <p><code>背景カラー</code>、<code>ペイントカラー</code>、<code>背景画像</code>、<code>Width</code>、および <code>Height Canvas の </code> は、デザイナーまたはブロック エディターのいずれかで設定できます。<code>Width</code> と <code>Height</code> はピクセル単位で測定され、正の値である必要があります。</p><p>キャンバス上の任意の位置は、(X, Y) のペアとして指定できます。 ) 値。<ul> <li>X はキャンバスの左端からのピクセル数です。</li><li>Y はキャンバスの上端からのピクセル数です。</li>< /ul>.</p> <p>キャンバスまたは <code>Sprite</code> (<code>画像スプライト</code> または <code>Ball</) がいつどこでタッチされたかを知らせるイベントがあります。 code>) がドラッグされました。点、線、円を描画するメソッドもあります。</p>
# Description: 
CanGoForwardMethods=前に進むことができます
# Description: 
CanGoForwardMethodDescriptions=WebViewer が履歴リストを進むことができる場合に true を返します。
# Description: 
CanGoBackMethods=戻ることができます
# Description: 
CanGoBackMethodDescriptions=WebViewer が履歴リストに戻れる場合に true を返します。
# Description: 
CameraHelpStringComponentPallette=デバイスのカメラを使って写真を撮影するコンポーネントです。写真撮影後、AfterPictureイベントの引数として、写真を含む携帯電話上のファイル名を使用できます。このファイル名は、例えばImageコンポーネントのPictureプロパティを設定するために使用することができます。
# Description: 
CamcorderHelpStringComponentPallette=ビデオが録画されると、AfterRecording イベントの引数として、クリップを含む携帯電話上のファイル名が使用可能になります。ファイル名は、例えばVideoPlayerコンポーネントのsourceプロパティを設定するために使用できます。
# Description: 
CalibrationFailedEvents=キャリブレーション失敗
# Description: 
CalibrationFailedEventDescriptions=このイベントは廃止されました。
# Description: 
CalibrateStrideLengthPropertyDescriptions=このプロパティは廃止されました。
# Description: 
CalibrateStrideLengthProperties=ストライドの長さを調整
# Description: 
BytesAvailableToReceiveMethods=受信可能なバイト数
# Description: 
BytesAvailableToReceiveMethodDescriptions=ブロックせずに受信できるバイト数の推定値を返します
# Description: 
Button__WidthPropertyDescriptions=ボタンの横幅を、ピクセル単位で指定します。
# Description: 
Button__WidthPercentPropertyDescriptions=ボタンの横幅を、スクリーンの横幅に対するパーセンテージで指定します。
# Description: 
Button__VisiblePropertyDescriptions=ボタンを画面に表示するかどうかを指定します。ボタンが表示されている場合はtrue、非表示の場合はfalseとなります。
# Description: 
Button__TouchUpEventDescriptions=ボタンが離されたことを示します。
# Description: 
Button__TouchDownEventDescriptions=ボタンが押されたことを示します。
# Description: 
Button__TextPropertyDescriptions=ボタンに表示するテキスト。
# Description: 
Button__TextColorPropertyDescriptions=ボタンテキスト（ボタンの文字）の色。
# Description: 
Button__TextAlignmentPropertyDescriptions=左か、中央か、右か。
# Description: 
Button__ShowFeedbackPropertyDescriptions=背景として画像を持つボタンに対して、ビジュアルフィードバックを表示するかどうかを指定します。
# Description: 
Button__ShapePropertyDescriptions=`ボタン`のスタイルを返します。
# Description: 
Button__LostFocusEventDescriptions=カーソルがボタンから離れ、クリックできなくなったことを示します。
# Description: 
Button__LongClickEventDescriptions=ユーザーはボタンを押したままでした（押し続けました）。
# Description: 
Button__ImagePropertyDescriptions=ボタンに表示する画像。
# Description: 
Button__HeightPropertyDescriptions=ボタンの垂直方向の高さを、ピクセル単位で指定します。
# Description: 
Button__HeightPercentPropertyDescriptions=ボタンの垂直方向の高さを、スクリーンの高さに対するパーセンテージで指定します。
# Description: 
Button__GotFocusEventDescriptions=カーソルがボタンの上に移動し、クリックできるようになったことを示します。
# Description: 
Button__FontTypefacePropertyDescriptions=ボタンテキストのフォントファミリー。
# Description: 
Button__FontSizePropertyDescriptions=ボタンテキストのポイントサイズ。
# Description: 
Button__FontItalicPropertyDescriptions=設定した場合、ボタンテキストはイタリック体で表示されます。
# Description: 
Ev3UltrasonicSensor__WithinRangeEventDescriptions=検出された距離が範囲内に入ったときに呼び出されます。
# Description: 
Ev3UltrasonicSensor__BelowRangeEventEnabledPropertyDescriptions=距離がBottomOfRange（最下位）以下になったときにBelowRange（範囲以下）イベントを発生させるかどうか。
# Description: 
Ev3UltrasonicSensor__BelowRangeEventDescriptions=検出された距離が範囲を下回ったときに呼び出されます。
# Description: 
Ev3UltrasonicSensor__AboveRangeEventEnabledPropertyDescriptions=距離がTopOfRange（最大）を超えたときにAboveRange（上記範囲）イベントを発生させるかどうか。
# Description: 
Ev3UltrasonicSensor__AboveRangeEventDescriptions=検出された距離が範囲を超えたときに呼び出されます。
# Description: 
Ev3UltrasonicSensorHelpStringComponentPallette=LEGO MINDSTORMS EV3ロボットの超音波センサーに高レベルのインターフェースを提供するコンポーネント。
# Description: 
Ev3UI__DrawPointMethodDescriptions=スクリーン上に点を描く。
# Description: 
Ev3UI__DrawLineMethodDescriptions=スクリーンに線を引く。
# Description: 
Ev3UI__DrawCircleMethodDescriptions=スクリーンに円を描く。
# Description: 
Ev3UIHelpStringComponentPallette=LEGO MINDSTORMS EV3ロボットに高レベルのインターフェースを提供するコンポーネントで、EV3の画面にグラフを描画する機能を持ちます。
# Description: 
Ev3TouchSensor__ReleasedEventDescriptions=タッチセンサーが押されたときに呼び出されます。
# Description: 
Ev3TouchSensor__PressedEventEnabledPropertyDescriptions=タッチセンサーが押されたときにPressed（押された）イベントを発生させるかどうかを指定します。
# Description: 
Ev3TouchSensor__PressedEventDescriptions=タッチセンサーが押されたときに呼び出されます。
# Description: 
Ev3TouchSensorHelpStringComponentPallette=LEGO MINDSTORMS EV3ロボットのタッチセンサーに高レベルのインターフェースを提供するコンポーネント。
# Description: 
Ev3SoundHelpStringComponentPallette=LEGO MINDSTORMS EV3ロボットのサウンド機能への高レベルインターフェースを提供するコンポーネント。
# Description: 
Ev3Motors__WheelDiameterPropertyDescriptions=モーターに取り付ける車輪の直径を指定します。
# Description: 
Ev3Motors__StopMethodDescriptions=ロボットのモーターを止める。
# Description: 
Ev3Motors__StopBeforeDisconnectPropertyDescriptions=切り離す前にモーターを停止させるかどうか。
# Description: 
Ev3MotorsHelpStringComponentPallette=LEGO MINDSTORMS EV3ロボットにハイレベルとローレベルの両方のインターフェイスを提供するコンポーネントで、モーターを制御できる機能を備えています。
# Description: 
Ev3GyroSensorHelpStringComponentPallette=LEGO MINDSTORMS EV3ロボットのジャイロセンサーに高レベルのインターフェースを提供するコンポーネント。
# Description: 
Ev3Commands__KeepAliveMethodDescriptions=EV3ブリックを一定時間シャットダウンしないでください。
# Description: 
Ev3Commands__GetFirmwareVersionMethodDescriptions=EV3のファームウェアバージョンを取得します。
# Description: 
Ev3CommandsHelpStringComponentPallette=LEGO MINDSTORMS EV3ロボットに低レベルのインターフェースを提供するコンポーネントで、EV3ロボットにシステムコマンドやダイレクトコマンドを送信する機能を持ちます。
# Description: 
Ev3ColorSensor__WithinRangeEventEnabledPropertyDescriptions=光量がBottomOfRange（最小）とTopOfRange（最大）の間にあるときにWithinRange（範囲内）イベントを発生させるかどうか。
# Description: 
Ev3ColorSensor__WithinRangeEventDescriptions=光量が範囲内になりました。
# Description: 
Ev3ColorSensor__GetLightLevelMethodDescriptions=光量をパーセントで返し、光量が読み取れない場合は-1を返します。
# Description: 
Ev3ColorSensor__ColorChangedEventEnabledPropertyDescriptions=Modeプロパティが "color（色） "に設定され、検出された色が変化したときにColorChanged（色変更）イベントを発生させるかどうか。
# Description: 
Ev3ColorSensor__ColorChangedEventDescriptions=検出された色が変更されたときに呼び出されます。ColorChanged（色変更）イベントは、Modeプロパティが "color（色） "に設定され、ColorChangedEventEnabled（色変更イベント有効）プロパティがTrueに設定されている場合に発生します。
# Description: 
Ev3ColorSensor__BelowRangeEventEnabledPropertyDescriptions=光量がBottomOfRange（上記範囲）以下になったときにBelowRange（範囲以下）イベントを発生させるかどうか。
# Description: 
Ev3ColorSensor__BelowRangeEventDescriptions=光量が範囲を下回りました。
# Description: 
Ev3ColorSensor__AboveRangeEventEnabledPropertyDescriptions=光量がTopOfRange（最大）を超えたときにAboveRange（上記範囲）イベントを発生させるかどうか。
# Description: 
Ev3ColorSensor__AboveRangeEventDescriptions=光量が範囲を超えました。
# Description: 
Ev3ColorSensorHelpStringComponentPallette=LEGO MINDSTORMS EV3ロボットのカラーセンサーに高レベルのインターフェースを提供するコンポーネントです。
# Description: 
ErrorOccurredEvents=エラー発生
# Description: 
EndLongitudePropertyDescriptions=終了地点の経度。
# Description: 
EndLongitudeProperties=終点経度
# Description: 
EndLocationPropertyDescriptions=終了地点を設定する。
# Description: 
EndLocationProperties=終了位置
# Description: 
EndLatitudePropertyDescriptions=終了地点の緯度。
# Description: 
EndLatitudeProperties=終点緯度
# Description: 
EnabledProperties=有効
# Description: 
EnableZoomPropertyDescriptions=ユーザーがタッチジェスチャを使用してマップをズームできるかどうかを設定します。この値は、ユーザーが <a href="#Map.ShowZoom">ShowZoom</a> によって提供されるズーム コントロールを使用してズームできるかどうかには影響しません。
# Description: 
EnableZoomProperties=ズームを有効にする
# Description: 
EnableSpeedRegulationPropertyDescriptions=モータの回転を一定速度に保つかを指定します。
# Description: 
EnableSpeedRegulationProperties=速度規制を有効にする
# Description: 
EnableRotationPropertyDescriptions=ユーザーの向きに応じて地図を回転できるようにします。
# Description: 
EnableRotationProperties=回転を有効にする
# Description: 
EnablePanPropertyDescriptions=マップの2本指パンニング機能を有効にする
# Description: 
EnablePanProperties=パンの有効化
# Description: 
EnableInfoboxProperties=有効化インフォボックス
# Description: 
EmailPicker__WidthPropertyDescriptions=Eメールピッカーの横幅をピクセル単位で指定します。
# Description: 
EmailPicker__WidthPercentPropertyDescriptions=Eメールピッカーの横幅を画面の横幅に対するパーセンテージで指定します。
# Description: 
EmailPicker__VisiblePropertyDescriptions=Eメールピッカーを画面に表示するかどうかを指定します。値は、Eメールピッカーが表示されている場合はtrue、非表示の場合はfalseになります。
# Description: 
EmailPicker__TextPropertyDescriptions=テキストボックスの内容を返します。
# Description: 
EmailPicker__TextColorPropertyDescriptions=テキストの色についてです。デザイナーまたはブロックエディターで色を選択できます。デフォルトのテキスト色は黒です。
# Description: 
EmailPicker__TextAlignmentPropertyDescriptions=テキストを左寄せにするか、中央寄せにするか、右寄せにするかに関してです。デフォルトでは、テキストは左寄せになります。
# Description: 
EmailPicker__RequestFocusMethodDescriptions=Eメールピッカーをアクティブに設定します。
# Description: 
EmailPicker__LostFocusEventDescriptions=ユーザーが別のテキストボックスをタッチした場合など、Eメールピッカーが入力のために選択されなくなったときに発生するイベントです。
# Description: 
EmailPicker__HintPropertyDescriptions=ユーザーが何を入力すべきかのヒントを提供するために、Eメールピッカーにかすかに表示されるべきテキストです。これは、テキストプロパティが空の場合にのみ表示されます。
# Description: 
EmailPicker__HeightPropertyDescriptions=Eメールピッカーの垂直方向の高さをピクセル単位で指定します。
# Description: 
EmailPicker__HeightPercentPropertyDescriptions=Eメールピッカーの垂直方向の高さを、画面の高さに対するパーセンテージで指定します。
# Description: 
EmailPicker__GotFocusEventDescriptions=ユーザーが `Eメールピッカー` に触れるなどして入力が選択されたときに発生するイベントです。
# Description: 
EmailPicker__FontTypefacePropertyDescriptions=テキストのフォントに関してです。この値はデザイナーで変更できます。
# Description: 
EmailPicker__FontSizePropertyDescriptions=テキストのフォントサイズに関してです。デフォルトでは14.0ポイントです。
# Description: 
EmailPicker__FontItalicPropertyDescriptions=テキストをイタリック体で表示するかどうかに関してです。デフォルトでは表示されません。
# Description: 
EmailPicker__FontBoldPropertyDescriptions=テキストのフォントを太字にするかどうかに関してです。デフォルトでは太字ではありません。
# Description: 
EmailPicker__EnabledPropertyDescriptions=ユーザーがEメールピッカーにテキストを入力できるかどうかに関してです。デフォルトでは、これはtrueです。
# Description: 
EmailPicker__BackgroundColorPropertyDescriptions=入力ボックスの背景色についてです。デザイナーまたはブロックエディタで色を選択できます。デフォルトの背景色は''default''（陰影のある立体的な色）です。
# Description: 
EmailPickerHelpStringComponentPallette=Eメールピッカーはテキスト ボックスの一種です。ユーザーが連絡先の名前または電子メール アドレスの入力を開始すると、電話機には入力を完了する選択肢のドロップダウン メニューが表示されます。連絡先の数が多い場合、ドロップダウンが表示されるまでに数秒かかることがあり、一致の計算中に中間結果が表示されることがあります。 <p>テキスト ボックスの最初の内容とユーザー入力後の内容<は、<code>Text</code> プロパティにあります。 <code>Text</code> プロパティが最初は空の場合、<code>Hint</code> プロパティの内容がユーザーへのヒントとしてテキスト ボックスに薄く表示されます。</p> <p>他のプロパティは、テキスト ボックスの外観 (<code>TextAlignment</code>、<code>BackgroundColor</code> など) とテキスト ボックスを使用できるかどうか (<code>Enabled</code>) に影響します。 p><p>このようなテキスト ボックスは通常、<code>Button</code> コンポーネントとともに使用され、テキストの入力が完了したらユーザーがボタンをクリックします。
# Description: 
EmailAddressPropertyDescriptions=選択した連絡先の主メールアドレス、またはメールアドレスが利用できない場合は空の文字列を返します。
# Description: 
EmailAddressProperties=Eメールアドレス
# Description: 
EmailAddressListPropertyDescriptions=選択した連絡先に関連するメールアドレスのリストを返します。
# Description: 
EmailAddressListProperties=Eメールアドレスリスト
# Description: 
ElementsProperties=要素
# Description: 
ElementsFromStringProperties=文字列から要素
# Description: 
ElapsedTimePropertyDescriptions=歩数計を開始してからの経過時間（ミリ秒）。
# Description: 
ElapsedTimeProperties=経過時間
# Description: 
EdgeReachedEvents=到達したエッジ
# Description: 
EastLongitudePropertyDescriptions=長方形の東端を、本初子午線から東に10進法で示します。
# Description: 
EastLongitudeProperties=東経経度
# Description: 
DurationToWeeksMethods=継続時間（週数）
# Description: 
DurationToWeeksMethodDescriptions=期間を週数に変更します。
# Description: 
DurationToSecondsMethods=継続時間（秒）
# Description: 
DurationToSecondsMethodDescriptions=継続時間を秒数に変換します。
# Description: 
DurationToMinutesMethods=所要時間（分）
# Description: 
DurationToMinutesMethodDescriptions=継続時間を分単位に変換します。
# Description: 
DurationToHoursMethods=所要時間（時間）
# Description: 
DurationToHoursMethodDescriptions=継続時間を時間数に変換します。
# Description: 
DurationToDaysMethods=所要時間（日数）
# Description: 
DurationToDaysMethodDescriptions=期間を日数に変換します。
# Description: 
DurationMethods=持続時間
# Description: 
DurationMethodDescriptions=インスタンス間の経過ミリ秒である持続期間を返します。
# Description: The label used to indicate driving navigation.
DrivingNavMethod=ドライビング
# Description: 
DriveMotorsPropertyDescriptions=駆動に使用されるモーターポート：左車輪のモーターポート、右車輪のモーターポートの順。
# Description: 
DriveMotorsProperties=駆動モーター
# Description: 
DrawTextMethods=テキストを描く
# Description: 
DrawTextMethodDescriptions=フォントサイズとテキストの配置プロパティの値を使用して、指定された座標に相対的に指定されたテキストを描画します。
# Description: 
DrawTextAtAngleMethods=テキストを斜めに描く
# Description: 
DrawTextAtAngleMethodDescriptions=フォントサイズとテキストの配置プロパティの値を使用して、指定された座標から指定された角度で指定されたテキストを描画します。
# Description: 
DrawShapeMethods=図形を描く
# Description: 
DrawShapeMethodDescriptions=pointList （ポイントリスト）は、座標を表す 2 つの番号を持つサブリストを含むリストでなければなりません。例えば ((x1 y1) (x2 y2) (x3 y3)) fill が true の場合、図形は塗りつぶされます。
# Description: 
DrawRectMethods=長方形を描く
# Description: 
DrawRectMethodDescriptions=スクリーンに長方形を描く。
# Description: 
DrawPointMethods=ポイント（点）を描く
# Description: 
DrawLineMethods=線を描く
# Description: 
DrawIconMethods=アイコンを描く
# Description: 
DrawIconMethodDescriptions=画面上に内蔵アイコンを描画します。
# Description: 
DrawArcMethods=円弧を描く
# Description: 
DrawCircleMethods=円を描く
# Description: 
DrawArcMethodDescriptions=キャンバス上に円弧を描画します。指定した楕円（左、上、右、下で指定）から円弧を描画します。開始角度は、右に向かうときは0、時計回りに回転するときは大きくなります。useCenter（中心を使用） が true の場合、円弧の代わりにセクターが描画されます。fillがtrueの場合、輪郭だけでなく、塗りつぶされた円弧（またはセクター）が描画されます。
# Description: 
DraggedEvents=ドラッグされた
# Description: 
DraggableProperties=ドラッグ可能
# Description: 
DragEvents=ドラッグ
# Description: 
DownloadFileMethods=ダウンロードファイル
# Description: 
DownloadFileMethodDescriptions=ロボットにファイルをダウンロードします。
# Description: 
DoubleTapAtPointEvents=ポイントでダブルタップ
# Description: 
DoubleTapAtPointEventDescriptions=ユーザがマップ上のポイントをダブルタップしました。ズーム・ジェスチャーが有効で、マップのズーム・レベルが最大でない場合、このイベントに続いて ZoomChanged（ズーム変更） イベントが発生します。
# Description: 
DoScanMethods=スキャンを実行する
# Description: 
DoScanMethodDescriptions=カメラを使ってバーコードのスキャンを開始します。スキャンが完了すると、AfterScan（アフタースキャン）イベントが発生します。
# Description: 
DoQueryMethods=クエリを実行する
# Description: 
DoQueryMethodDescriptions=非推奨。このブロックは2012年末をもって非推奨となりました。SendQueryを使用してください。
# Description: 
DistanceToPointMethods=ポイント（点）までの距離
# Description: 
DistanceToFeatureMethods=フィーチャーまでの距離
# Description: 
DistanceToFeatureMethodDescriptions=2つの地図フィーチャ間の距離をメートル単位で計算します。
# Description: 
DistanceProperties=距離
# Description: 
DistanceIntervalPropertyDescriptions=センサーが位置情報の更新を送信するための最小距離間隔をメートル単位で指定します。例えば、これを 5 に設定した場合、センサーは 5 メートルを通過した後にのみ LocationChanged （位置変更）イベントを発生します。しかし、センサーは正確に距離間隔で更新を受信することを保証しません。例えば、イベントを発生させるのに5メートル以上かかるかもしれないなど。
# Description: 
DistanceIntervalProperties=距離間隔
# Description: 
DisplayDropdownMethods=ドロップダウンの表示
# Description: 
DisplayDropdownMethodDescriptions=ユーザーがスピナーをクリックしたときと同じ動作をします。
# Description: 
DismissProgressDialogMethods=ProgressDialog（プログレスダイアログ）の解除
# Description: 
DismissProgressDialogMethodDescriptions=以前に表示されたProgressDialog（プログレスダイアログ）ボックスを解除します
# Description: 
DisconnectOnErrorPropertyDescriptions=エラーが発生した場合、BluetoothClientを自動的に切断します。
# Description: 
DisconnectOnErrorProperties=接続エラー
# Description: 
DisconnectMethods=未接続
# Description: 
DisconnectMethodDescriptions=接続されているBluetooth機器との接続を解除します。
# Description: 
DirectMessagesReceivedEvents=ダイレクトメッセージの受信
# Description: 
DirectMessagesReceivedEventDescriptions=このイベントは、<code>RequestDirectMessages</code> を通じてリクエストされた最近のメッセージが取得されたときに発生します。メッセージのリストは、<code>messages</code> パラメーターまたは <code>Messages</code> プロパティで見つけることができます。
# Description: 
DirectMessagesPropertyDescriptions=このプロパティには、ログインしているユーザーについて言及した最新のメッセージのリストが含まれています。最初はリストは空です。これを設定するには、プログラムは次の手順を実行する必要があります。 <ol> <li> <code>Authorize</code> メソッドを呼び出します。</li> <li> <code>Authorized</code> イベントを待ちます。</li> <li> <code>RequestDirectMessages</code> メソッドを呼び出します。</li> <li> <code>DirectMessagesReceived</code> イベントを待ちます。</li></ol>このプロパティの値は、取得されたダイレクト メッセージのリストに設定されます (その後、<code>RequestDirectMessages</code> が呼び出されるまでその値が維持されます)。
# Description: 
DirectMessagesProperties=ダイレクトメッセージ
# Description: 
DirectMessageMethods=ダイレクトメッセージ
# Description: 
DirectMessageMethodDescriptions=これにより、指定されたユーザーにプライベート メッセージが送信されます。メッセージが 160 文字を超える場合は切り詰められます。 <p><u>要件</u>: これは、ユーザーが Twitter に正常にログインしたことを示します <code>IsAuthorized</code> イベントが発生した後にのみ呼び出す必要があります。</p>
# Description: 
DeveloperBucketPropertyDescriptions=Firebase（ファイヤーベース）の開発者固有のパスを指定します。
# Description: 
DeveloperBucketProperties=開発者バケット
# Description: 
DetectColorPropertyDescriptions=センサーが色と光のどちらを検出するか。Trueはセンサーが色を検出することを示し、Falseはセンサーが光を検出することを示します。DetectColorプロパティがTrueに設定されている場合、範囲以下(BelowRange)、範囲内(WithinRange)、範囲以上(AboveRange)イベントは発生せず、センサーは色を生成しません。色検出プロパティがFalseに設定されている場合、色変更イベントは発生しません。
# Description: 
DetectColorProperties=色の検出
# Description: 
DescriptionProperties=説明
# Description: 
DelimiterBytePropertyDescriptions=ReceiveText（受信テキスト）、ReceiveSignedBytes（受信サイン付きバイト数）、ReceiveUnsignedBytes（受信符号なしバイト数）を呼び出す際に、numberOfBytesパラメータに負の数を渡す場合に使用する区切りバイトを設定します。これらの関数は、ここで指定した値になるまでバイトの読み込みを続けます。デフォルトの区切り文字は0（nullバイト）です。
# Description: 
DelimiterByteProperties=Delimiterバイト
# Description: 
DeleteMethods=消去
# Description: 
DeleteFileMethods=デフォルトファイル
# Description: 
DeleteFileMethodDescriptions=ロボット上のファイルを削除します。
# Description: 
DefaultURLPropertyDescriptions=デフォルトURLのプロパティ
# Description: 
DefaultURLProperties=デフォルトURL
# Description: 
DefaultScopePropertyDescriptions=ファイルコンポーネントを使用してアクセスされるファイルのデフォルトのスコープ（範囲）を指定します。Appスコープは、ほとんどのアプリで使えるはずです。レガシーモードは、アプリのファイルアクセスに関するAndroidの新しい制約より前のアプリに使用できます。
# Description: 
DefaultScopeProperties=デフォルトスコープ（デフォルト範囲）
# Description: 
DefaultRedisServerProperties=デフォルトのRedisサーバー
# Description: 
DefaultRedisServerPropertyDescriptions=使用するデフォルトのRedisサーバー。
# Description: 
DefaultFileScopePropertyDescriptions=コンポーネントがファイルにアクセスするときに使用されるデフォルトのスコープを指定します。 <a href="/reference/components/storage.html#File" target="_blank">File</a> コンポーネントには、ファイル スコープを制御するための独自のプロパティがあることに注意してください。
# Description: 
DefaultFileScopeProperties=デフォルトファイルス範囲
# Description: 
DeAuthorizeMethods=認可取り消し
# Description: 
DeAuthorizeMethodDescriptions=実行中のアプリのインスタンスからTwitterの認証を削除します
# Description: 
DayPropertyDescriptions=DatePicker （日付を選択する部品）を使用して最後に選択された月の日。
# Description: 
DayProperties=日
# Description: 
DayOfMonthMethods=月日
# Description: 
DayOfMonthMethodDescriptions=月日（1-31）をインスタントから返します。
# Description: 
DatePicker__WidthPropertyDescriptions=DatePicker（日付を選択する部品）の横幅をピクセル単位で指定します。
# Description: 
DatePicker__WidthPercentPropertyDescriptions=DatePicker（日付を選択する部品）日付を選択する部品の水平方向の幅を、画面の幅に対するパーセンテージで指定します。
# Description: 
DatePicker__VisiblePropertyDescriptions=DatePicker（日付を選択する部品）を画面に表示するかどうかを指定します。DatePicker（日付を選択する部品）が表示されている場合はtrue、非表示の場合はfalseとなります。
# Description: 
DatePicker__TouchUpEventDescriptions=DatePicker （日付を選択する部品）がリリースされたことを示します。
# Description: 
DatePicker__ShowFeedbackPropertyDescriptions=画像を背景に持つ DatePicker（日付を選択する部品） に視覚的なフィードバックを表示するかどうかを指定します。
# Description: 
DatePicker__ShapePropertyDescriptions=`DatePicker（日付を選択する部品）`のスタイルを返します。
# Description: 
DatePicker__LaunchPickerMethodDescriptions=DatePicker（日付を選択する部品）ダイアログを起動します。
# Description: 
DatePicker__HeightPropertyDescriptions=DatePicker（日付を選択する部品） の垂直方向の高さをピクセル単位で指定します。
# Description: 
DatePicker__EnabledPropertyDescriptions=設定されている場合、ユーザはDatePicker（日付を選択する部品）をタップしてアクションを起こすことができます。
# Description: 
DatePicker__HeightPercentPropertyDescriptions=DatePicker（日付を選択する部品）の垂直方向の高さを、画面の高さに対するパーセンテージで指定します。
# Description: 
DatePicker__GotFocusEventDescriptions=カーソルがDatePicker（日付を選択する部品）の上に移動し、クリックできるようになったことを示します。
# Description: 
DatePicker__InstantPropertyDescriptions=DatePicker（日付を選択する部品） を使用して最後に選択された時点の日付。
# Description: 
DatePicker__TouchDownEventDescriptions=DatePicker（日付を選択する部品） が押されたことを示します。
# Description: 
DatePicker__TextPropertyDescriptions=DatePicker（日付を選択する部品）に表示するテキスト。
# Description: 
DatePicker__TextColorPropertyDescriptions=ボタンテキストの色。
# Description: 
DatePicker__TextAlignmentPropertyDescriptions=左か、中央か、右か。
# Description: 
DatePicker__LostFocusEventDescriptions=カーソルがDatePicker（日付を選択する部品）から離れ、クリックできなくなったことを示します。
# Description: 
GetBatteryVoltageMethods=バッテリー電圧
# Description: 
GetBatteryCurrentMethods=バッテリー電流を取得する
# Description: 
GetBatteryLevelMethodDescriptions=ロボットのバッテリーレベルを取得します。電圧をミリボルトで返します。
# Description: 
GetBatteryLevelMethods=バッテリー残量
# Description: 
GetBatteryVoltageMethodDescriptions=バッテリー電圧を取得します。
# Description: 
GetBrickNameMethodDescriptions=ロボットのブリック名を取得します。
# Description: 
GetBrickNameMethods=ブリック名を取得
# Description: 
GetColorCodeMethodDescriptions=無色、黒、青、緑、黄、赤、白、茶に対応する0から7までのカラーコードを返します。
# Description: 
GetColorCodeMethods=カラーコードを取得
# Description: 
GetColorMethodDescriptions=現在検出されている色、または色が読み取れない場合、または DetectColor（ 色検出）プロパティが False に設定されている場合は None を返します。
# Description: 
GetColorMethods=カラーを取得
# Description: 
GetColorNameMethodDescriptions=色名を”色なし”、”黒”、”青”、”緑”、”黄”、”赤”、”白”、”茶”のいずれかで返します。
# Description: 
GetColorNameMethods=カラー名の取得
# Description: 
GetCurrentProgramNameMethodDescriptions=ロボット上で現在実行中のプログラム名を取得します。
# Description: 
GetCurrentProgramNameMethods=現在のプログラム名を取得
# Description: 
GetDetailTextMethodDescriptions=リストビュー要素の詳細テキストを取得します。
# Description: 
GetDetailTextMethods=詳細テキストを取得
# Description: 
GetDistanceMethodDescriptions=現在の距離をセンチメートル単位で 0 から 254 までの値で返します。
# Description: 
GetDistanceMethods=距離をとる
# Description: 
GetDurationMethodDescriptions=動画の継続時間をミリ秒単位で返します。
# Description: 
GetDurationMethods=期間を得る
# Description: 
HygrometerHelpStringComponentPallette=周囲の相対湿度を測定できるセンサー部品です。ほとんどのAndroid端末にはこのセンサーは搭載されていません。
# Description: 
HumidityPropertyDescriptions=センサーが利用可能で有効な場合、相対的な周囲湿度をパーセンテージで示します。
# Description: 
HumidityProperties=湿度
# Description: 
HumidityChangedEvents=湿度変更
# Description: 
HumidityChangedEventDescriptions=周囲の空気湿度（パーセント表示）に変化が検出されたときに呼び出されます。
# Description: 
HtmlTextDecodeMethods=Htmlテキストデコード
# Description: 
HtmlTextDecodeMethodDescriptions=与えられたHTMLテキストをデコードします。HTMLの文字実体 `&`, `<`, `>`, `''`, `"` は &, <, >, '', " に変更されます。xhhhh, &#nnnn のようなエンティティは適切な文字に変更されます。
# Description: 
HourPropertyDescriptions=タイムピッカーで最後に設定した時刻の時間です。時間は24時間形式です。最後に設定された時刻が午後11時53分の場合、このプロパティは23を返します。
# Description: 
HourProperties=１時間
# Description: 
HourMethods=１時間
# Description: 
HourMethodDescriptions=インスタントからその日の時（0-23）を返します。
# Description: 
HorizontalScrollArrangement__WidthPropertyDescriptions=水平スクロール配置の水平方向の幅をピクセル単位で指定します。
# Description: 
HorizontalScrollArrangement__WidthPercentPropertyDescriptions=水平スクロール配置の水平方向の幅を、スクリーン の幅に対するパーセンテージで指定します。
# Description: 
HorizontalScrollArrangement__VisiblePropertyDescriptions=水平スクロール配置を画面に表示するかどうかを指定します。値は、水平スクロール配置が表示されている場合は true、非表示の場合は false になります。
# Description: 
HorizontalScrollArrangement__ImagePropertyDescriptions=`水平スクロール配置`の背景画像のパスを返します。
# Description: 
HorizontalScrollArrangement__HeightPropertyDescriptions=水平スクロール配置の垂直方向の高さをピクセル単位で指定します。
# Description: 
HorizontalScrollArrangement__HeightPercentPropertyDescriptions=水平スクロール配置の垂直方向の高さを、スクリーンの高さに対するパーセンテージで指定します。
# Description: 
HorizontalScrollArrangement__BackgroundColorPropertyDescriptions=水平スクロール配置の背景色を返します
# Description: 
HorizontalScrollArrangement__AlignVerticalPropertyDescriptions=水平スクロール配置の内容がどのように垂直方向に整列されるかを示す数値です。選択肢は 1 = 上端揃え、2 = 垂直中央揃え、3 = 下端揃え。配置の高さが自動の場合、整列は影響しません。
# Description: 
HorizontalScrollArrangement__AlignHorizontalPropertyDescriptions=水平スクロール配置の内容が水平方向にどのように配置されるかを示す数値。選択肢は以下の通り： 1 = 左揃え、2 = 右揃え、3 = 水平中央揃え。配置の幅が自動の場合、整列は影響しません。
# Description: 
HorizontalScrollArrangementHelpStringComponentPallette=p>左から右に表示されるコンポーネントを配置する書式設定要素です。コンポーネントを重ねて表示したい場合は、代わりに <code>縦配置</code> を使用してください。</p><p>このバージョンはスクロール可能です。
# Description: 
HorizontalArrangement__WidthPropertyDescriptions=横配置の水平方向の幅をピクセル単位で指定します。
# Description: 
HorizontalArrangement__WidthPercentPropertyDescriptions=横配置の水平方向の幅を、スクリーンの幅に対するパーセンテージで指定します。
# Description: 
HorizontalArrangement__VisiblePropertyDescriptions=横配置を画面に表示するかどうかを指定します。横配置が表示されている場合はtrue、非表示の場合はfalseとなります。
# Description: 
HorizontalArrangement__ImagePropertyDescriptions=`横配置`の背景画像のパスを返す。
# Description: 
HorizontalArrangement__HeightPropertyDescriptions=横配置の垂直方向の高さをピクセル単位で指定します。
# Description: 
HorizontalArrangement__HeightPercentPropertyDescriptions=横配置の垂直方向の高さを、スクリーンの高さに対するパーセンテージで指定します。
# Description: 
HorizontalArrangement__AlignHorizontalPropertyDescriptions=横配置の内容が水平方向にどのように配置されるかを示す数値です。選択肢は以下の通り： 1 = 左寄せ、2 = 右寄せ、3 = 中央寄せ。配置の幅が自動の場合、整列は影響しません。
# Description: 
HorizontalArrangement__BackgroundColorPropertyDescriptions=横配置の背景色を返します
# Description: 
HorizontalArrangement__AlignVerticalPropertyDescriptions=横配置の内容をどのように縦に並べるかを示す数値。選択肢は以下の通り： 1 = 上端揃え、2 = 垂直中央揃え、3 = 下端揃え。配置の高さが自動の場合、整列は影響しません。
# Description: 
HorizontalArrangementHelpStringComponentPallette=<p>左から右に表示されるコンポーネントを配置する書式設定要素です。コンポーネントを重ねて表示したい場合は、代わりに <code>VerticalArrangement（縦配置）</code> を使用してください。</p>
# Description: 
HomeUrlPropertyDescriptions=Web閲覧者が最初に開くページのURLです。これを設定すると、ページがロードされます。
# Description: 
HomeUrlProperties=ホームURL
# Description: 
HolePointsPropertyDescriptions=`ポリゴン`のホールの点を指定します。HolePoints`（ホールポイント）` プロパティはリストのリストであり、それぞれのサブリストには `(緯度, 経度)` ポイントが含まれます。
# Description: 
HolePointsProperties=ホールポイント
# Description: 
HolePointsFromStringPropertyDescriptions=与えられたホールごとの座標リストから、多角形のホールを作成します。
# Description: 
HolePointsFromStringProperties=文字列からのホールポイント
# Description: 
HintProperties=ヒント
# Description: 
HighlightDataPointsMethods=ハイライトデータポイント
# Description: 
HighlightDataPointsMethodDescriptions=チャート上の任意のデータ・ポイントを任意の色でハイライトします。このブロックはデータ・ポイントのリストを受け取り、各データ・ポイントはインデックスと値のペアです
# Description: 
HighContrastPropertyDescriptions=チェックを入れると、ハイコントモードになります
# Description: 
HighContrastProperties=高コントラスト
# Description: 
HighByteFirstPropertyDescriptions=true（真）を返す
# Description: 
HighByteFirstProperties=highByteファースト
# Description: 
HideKeyboardMethods=キーボードを非表示
# Description: 
HideInfoboxMethods=インフォボックスを非表示
# Description: 
HideInfoboxMethodDescriptions=インフォボックスが表示されている場合は非表示にします。インフォボックスが表示されていない場合、この関数は何の効果もありません。
# Description: 
HeightProperties=高さ
# Description: 
HeightPercentProperties=高さ のパーセント
# Description: 
HeadingProperties=見出し
# Description: 
HasMarginsPropertyDescriptions=ラベルに余白があるかどうかを報告します。4つの余白（左、右、上、下）はすべて同じです。このプロパティは、ラベルが常にマージン付きで表示されるデザイナーには影響しません。
# Description: 
HasMarginsProperties=余白がある
# Description: 
HasLongitudeLatitudePropertyDescriptions=true（真）を持つ
# Description: 
HasLongitudeLatitudeProperties=経度緯度を持つ
# Description: Error given if project contains extensions
HasExtensionError=拡張機能を持つプロジェクトはギャラリーに公開できません。
# Description: 
HasAltitudePropertyDescriptions=true（真）の場合
# Description: 
HasAltitudeProperties=高度を持つ
# Description: 
HasAccuracyPropertyDescriptions=true（真）の場合
# Description: 
HasAccuracyProperties=精度
# Description: 
HTMLFormatPropertyDescriptions=もしtrueなら、このラベルはHTMLテキストを表示し、そうでなければプレーンテキストを表示します。注意：すべてのHTMLがサポートされているわけではありません。
# Description: 
HTMLFormatProperties=HTMLフォーマット
# Description: 
HTMLContentPropertyDescriptions=ラベルの内容を HTML で返します。これは HTMLフォーマット プロパティが true の場合のみ有効です。
# Description: 
HTMLContentProperties=HTMLコンテンツ
# Description: 
GyroscopeSensor__EnabledPropertyDescriptions=Enabled （利用可能）プロパティゲッターメソッド。
# Description: 
GyroscopeSensor__AvailablePropertyDescriptions=ジャイロスコープセンサーが利用可能かどうかを示します。
# Description: 
GyroscopeSensorHelpStringComponentPallette=<p>1 秒あたりの度単位で 3 次元の角速度を測定できる非表示コンポーネントです。</p><p>機能するには、コンポーネントの <code>有効</code> プロパティが Trueに設定されている必要があります。 Trデバイスにはジャイロスコープ センサーが必要です。</p>
# Description: 
GyroscopeChangedEvents=ジャイロスコープの変更
# Description: 
GyroscopeChangedEventDescriptions=ジャイロセンサのデータが変化したことを示します。timestamp（タイムスタンプ）パラメータは、イベントが発生したナノ秒単位の時間です。
# Description: 
GridEnabledPropertyDescriptions=チャートのグリッドが有効かどうかを示すブール値を返します。
# Description: 
GridEnabledProperties=グリッド使用可能
# Description: 
GotValueEvents=値を入手
# Description: 
GotTranslationEvents=翻訳を得られた
# Description: 
GotTextEvents=テキストを取得
# Description: 
GotSheetDataEvents=シートデータを取得
# Description: 
GotSheetDataEventDescriptions=ReadSheet（読み取りシート）ブロックのコールバックイベントです。` sheetData（シートデータ）` は行のリストです。
# Description: 
GotRowDataEvents=Row（行）データを取得
# Description: 
GotRowDataEventDescriptions=Row（行）の読み取りブロックのコールバックイベントです。` rowDataList（rowデータリスト）` はセルの値を列番号の大きい順に並べたリストです。
# Description: 
GotResultEvents=結果を取得
# Description: 
GotResultEventDescriptions=フュージョンテーブルクエリの処理が終了し、結果が返されたことを示します。クエリの結果は通常CSV形式で返され、"list from csv table（csvテーブルからのリスト） "または "list from csv row （csv rowからのリスト）"ブロックを使ってリスト形式に変換することができます。
# Description: 
GotResponseEvents=レスポンスを取得する
# Description: 
GotResponseEventDescriptions=チャットボットが質問に答えたときに発生するイベントです。
# Description: 
GotRangeDataEvents=範囲データの取得
# Description: 
GotRangeDataEventDescriptions=範囲の読み取りブロックのコールバックイベントです。`rangeData（範囲データ）` は要求された寸法の行のリストです。
# Description: 
GotMessageEvents=メッセージを取得
# Description: 
GotMessageEventDescriptions=新しいメッセージを受信したことを示します。
# Description: 
GotFocusEvents=フォーカスを取得
# Description: 
GotFilterResultEventDescriptions=正確なクエリーで読む込む または部分クエリで読み込むブロックのコールバックイベントです。`レスポンス`は行番号のリストとセルデータを含む行のリストです。
# Description: 
GotFileEvents=ファイルの取得
# Description: 
GotFileEventDescriptions=リクエストが終了したことを示すイベントです。
# Description: 
GotFeaturesEvents=Features（フィーチャー）を取得
# Description: 
GotFeaturesEventDescriptions=URLから GeoJSONドキュメントが正常に読み込まれました。ドキュメントで指定された features（フィーチャ）は  featuresにリストとして提供されます。
# Description: 
GotDirectionsEvents=道順を確認
# Description: 
GotDirectionsEventDescriptions=オープンルートサービスが道順を返すときに発生するイベントです。
# Description: 
GotColumnDataEvents=Columnデータの取得
# Description: 
GotColumnDataEventDescriptions=ReadColumn（セルを読む） メソッドを呼び出すと、カラムのデータがテキスト値のリストとして `columnData（カラムデータ）` に格納される。
# Description: 
GotCellDataEvents=セルデータの取得
# Description: 
GotCellDataEventDescriptions=ReadCell （セルを読む）ブロックのコールバックイベントです。`cellData（セルデータ）` はセル内のテキスト値です（基礎となる数式ではありません）。
# Description: 
GotBallotEvents=投票用紙を入手
# Description: 
GotBallotEventDescriptions=Web サービスから投票用紙が取得され、プロパティ <code>BallotQuestion（投票に関する質問）</code> および <code>BallotOptions（投票オプション）</code> が設定されていることを示すイベントです。この前には常に <code>RequestBallot（投票のリクエスト）</code> メソッドの呼び出しが行われます。
# Description: 
GotBallotConfirmationEvents=投票の確認
# Description: 
GotBallotConfirmationEventDescriptions=投票サービスが投票を受け取ったことを確認するイベントです。
# Description: 
GoogleVoiceEnabledPropertyDescriptions=trueの場合、メッセージの送信はGoogleボイスを使用してWifi経由でメッセージの送信を試みます。そのためには、Google ボイスアプリが携帯電話やタブレットにインストールされ、Googleボイスアカウントが設定されている必要があります。Googleボイス対応がfalseの場合、このコンポーネントでメッセージを送受信するには、端末に電話およびテキストサービスがある必要があります。
# Description: 
GoogleVoiceEnabledProperties=Googleボイス対応
# Description: 
GoToUrlMethods=URLに移動
# Description: 
GoToUrlMethodDescriptions=指定されたURLのページをロードします。
# Description: 
GoHomeMethods=ホームへ戻る
# Description: 
GoHomeMethodDescriptions=ホームURLのページをロードします。ホームURLが変更されると自動的に行われます。
# Description: 
GoForwardMethods=前へ進む
# Description: 
GoForwardMethodDescriptions=履歴リストの次のページに進みます。次のページがない場合は何もしません。
# Description: 
GoBackMethods=戻る
# Description: 
GoBackMethodDescriptions=履歴リストで前のページに戻ります。前のページがない場合は何もしません。
# Description: 
GetWifiIpAddressMethods=WifiのIPアドレスを取得
# Description: 
GetWifiIpAddressMethodDescriptions=電話の IP アドレスを文字列で返します
# Description: 
GetVersionNameMethods=バージョンネームを取得
# Description: 
GetVersionNameMethodDescriptions=バージョンネームプロパティを返す
# Description: 
GetValueMethods=値の取得
# Description: 
GetTextMethods=テキストの取得
# Description: 
GetTextMethodDescriptions=ユーザーに発話を求め、発話をテキストに変換する。を合図します
# Description: 
GetTagsMethods=タグの取得
# Description: 
GetTagsMethodDescriptions=データストアにあるすべてのタグのリストを返します。
# Description: 
GetTagListMethods=タグリストの取得
# Description: 
GetTagListMethodDescriptions=このアプリケーションのタグのリストを取得します。完了すると、"TagList（タグリスト） "イベントが既知のタグのリストとともにトリガーされます。
# Description: 
GetTachoCountMethods=タコ(Tacho)カウントを取得する
# Description: 
GetTachoCountMethodDescriptions=現在のタコ(tacho)カウントを取得する。
# Description: 
GetSoundLevelMethods=サウンドレベルの取得
# Description: 
GetSoundLevelMethodDescriptions=現在のサウンド・レベルを 0 から 1023 の間の値で返す、または、サウンド・レベルを読み取れない場合は -1 を返します。
# Description: 
GetSensorValueMethods=センサー値の取得
# Description: 
GetSensorValueMethodDescriptions=現在の角度または回転速度を現在のモードに基づいて返し、センサーから値が読み取れない場合は-1とします。
# Description: 
GetRowsWithConditionsMethods=条件付き行の取得
# Description: 
GetRowsWithConditionsMethodDescriptions=フュージョンテーブルから特定の条件を満たす全ての行を取得します。tableId （テーブルID）フィールドは、必要なフュージョン・テーブルの ID です。columns （コラム）フィールドは、取得するカラムのカンマ区切りリストです。条件フィールドは、テーブルからどの行を取得するかを指定します。例えば、特定のカラムの値が NULL ではない行などです。
# Description: 
GetRowsMethods=行の取得
# Description: 
GetRowsMethodDescriptions=指定された融合テーブルから全ての行を取得します。tableId （テーブルID ）フィールドは、指定された融合テーブルの ID です。columns（コラム）フィールドは、取得するカラムのカンマ区切りリストです。
# Description: 
GetRangeReferenceMethods=範囲リファレンスの取得
# Description: 
GetRangeReferenceMethodDescriptions=範囲の隅の行と列の整数表現を、Google Sheets （Google シート）で使用される A1-Notation に変換します。
# Description: 
GetPixelColorMethods=ピクセルカラーの取得
# Description: 
GetPixelColorMethodDescriptions=指定した点の色を取得します。
# Description: 
GetOutputStateMethods=出力状態を取得する
# Description: 
GetOutputStateMethodDescriptions=ロボットのモーターの出力状態を読み取る。
# Description: 
GetOSVersionMethods=OSバージョンを取得する
# Description: 
GetOSVersionMethodDescriptions=EV3のOSバージョンを入手する。
# Description: 
GetOSBuildMethods=OSビルドを入手する
# Description: 
GetOSBuildMethodDescriptions=EV3でOSビルドを入手する。
# Description: 
GetMillisMethods=Millis単位を入手する
# Description: 
GetMillisMethodDescriptions=1970年からのミリ秒単位で計測された時間を返します。
# Description: 
GetMethods=取得する
# Description: 
GetMethodDescriptions=Url プロパティを使用して HTTP GET リクエストを実行し、レスポンスを取得します。SaveResponse （レスポンスの保存）プロパティが True の場合、応答はファイルに保存され、GotFile イベントがトリガされます。ResponseFileName （レスポンスファイル名）プロパティを使用して、ファイル名を指定できます。SaveResponse プロパティが False の場合、GotText イベントがトリガされます。
# Description: 
GetMessagesMethods=メッセージを取得する
# Description: 
GetMessagesMethodDescriptions=指定されたタイプのメッセージを取得します。
# Description: 
GetMainTextMethods=メインテキストの取得
# Description: 
GetMainTextMethodDescriptions=ListView（一覧リスト）要素のメインテキストを取得します。
# Description: 
GetLightLevelMethods=ライトレベル取得
# Description: 
GetInstanceListsMethods=スタンスリストに入る
# Description: 
GetInstanceListsMethodDescriptions=InstancesJoined（インスタンス結合） リストと InstancesInvited（インスタンス招待） リストを更新します。このプロシージャは、InstanceId（インスタンスID） を設定する前に呼び出すことができます。
# Description: 
GetInstallerMethods=インストーラーを入手する
# Description: 
GetInstallerMethodDescriptions=インストールしたアプリを返す
# Description: 
GetInputValuesMethods=値を取得する
# Description: 
GetInputValuesMethodDescriptions=ロボットの入力センサーの値を読み取る。センサーのタイプはSetInputMode（モード設定）で設定されているものとする。
# Description: 
GetImageNameMethods=画像名の取得
# Description: 
GetImageNameMethodDescriptions=メディアにアップロードされたListView（一覧表示）要素の画像のファイル名を取得します。
# Description: 
GetHardwareVersionMethods=ハードウェアバージョンを取得する
# Description: 
GetHardwareVersionMethodDescriptions=EV3のハードウェア版を取得する。
# Description: 
GetFirmwareVersionMethods=ファームウェアバージョンを取得する
# Description: 
GetFirmwareBuildMethods=安定したウェアビルドを取得する
# Description: 
GetEntriesWithYValueMethods=Y値を持つエントリーの取得
# Description: 
GetEntriesWithYValueMethodDescriptions=指定された y 値に一致する y 値を持つエントリーのリストを返します。単一のエントリーは、エントリーの値のリストとして表されます。
# Description: 
GetEntriesWithXValueMethods=X値を持つエントリーを取得
# Description: 
GetEntriesWithXValueMethodDescriptions=指定された x 値に一致する x 値を持つエントリのリストを返す。単一のエントリは、エントリの値のリストとして表されます。
# Description: 
GetEntriesMethods=エントリーを取得する
# Description: 
GetEntriesMethodDescriptions=TinyDBのすべてのデータ・エントリーをディクショナリ形式で取得します
# Description: 
GetCellReferenceMethods=セルレファレンスの取得
# Description: 
GetCellReferenceMethodDescriptions=行と列の整数表現を、Google Sheets （Google シート）で単一のセルに使用する A1-Notation に変換します。
# Description: 
GameClient__ServiceURLPropertyDescriptions=ゲームサーバーのURLを設定します。
# Description: 
FinishedWriteRowEvents=列の記入の完了
# Description: 
FinishedWriteRowEventDescriptions=WriteRow（列び記入）ブロックのコールバックイベントで、テーブルの値の更新が終了した後に呼び出されます
# Description: 
FinishedWriteRangeEvents=範囲の記入の完了
# Description: 
FinishedWriteRangeEventDescriptions=WriteRange （範囲の記入）ブロックのコールバックイベントです。
# Description: 
FinishedWriteColumnEvents=行の記入の完了
# Description: 
FinishedWriteColumnEventDescriptions=WriteColumn （列の記入）のブロックのコールバック イベント。テーブルの値が更新されると呼び出されます。
# Description: 
FinishedWriteCellEvents=書き込みセルの完了
# Description: 
FinishedWriteCellEventDescriptions=WriteCell （書き込み セル）ブロックのコールバック イベントです。
# Description: 
FinishedRemoveRowEvents=行の消去の完了
# Description: 
FinishedRemoveRowEventDescriptions=RemoveRow（行の削除）ブロックのコールバック イベントです。テーブルの値が更新されると呼び出されます。
# Description: 
FinishedRemoveColumnEvents=列の消去の完了
# Description: 
FinishedRemoveColumnEventDescriptions=テーブルの値が更新されると呼び出される、RemoveColumn（列を削除） ブロックのコールバック イベントです。
# Description: 
FinishedDeleteSheetEvents=シートの消去の完了
# Description: 
FinishedDeleteSheetEventDescriptions=テーブルの値が更新されると呼び出される、DeleteSheet （シートの消去）ブロックのコールバック イベントです。
# Description: 
FinishedClearRangeEvents=クリア範囲の完了
# Description: 
FinishedClearRangeEventDescriptions=ClearRange（クリア範囲） ブロックのコールバック イベント。
# Description: 
FinishedAddSheetEvents=シートの追加の完了
# Description: 
FinishedAddRowEvents=行の追加の完了
# Description: 
FinishedAddColumnEvents=列の追加の完了
# Description: 
FinishedAddSheetEventDescriptions=addSheet （シートの追加）ブロックのコールバック イベントです。テーブルの値が更新されると呼び出されます。
# Description: 
FinishedAddRowEventDescriptions=テーブルの値が更新されると呼び出される、AddRow （行の追加）ブロックのコールバック イベントです。
# Description: 
FinishedAddColumnEventDescriptions=このイベントは、AddColumn （列の追加）メソッドの実行が終了し、スプレッドシートの値が更新されるとトリガーされます。さらに、これは新しい列の列番号を返します。
# Description: 
FilePicker__WidthPropertyDescriptions=FilePicker （ファイルピッカー）の水平幅をピクセル単位で指定します。
# Description: 
FilePicker__WidthPercentPropertyDescriptions=FilePicker（ファイルピッカー） の水平幅を画面の幅のパーセンテージとして指定します。
# Description: 
FilePicker__VisiblePropertyDescriptions=FilePicker（ファイルピッカー） を画面上に表示するかどうかを指定します。 FilePicker が表示されている場合は値が true、非表示の場合は false です。
# Description: 
FilePicker__TouchUpEventDescriptions=FilePicker（ファイルピッカー） がリリースされたことを示します。
# Description: 
FilePicker__TouchDownEventDescriptions=FilePicker（ファイルピッカー） が押されたことを示します。
# Description: 
FilePicker__TextPropertyDescriptions=FilePicker（ファイルピッカー） に表示するテキスト。
# Description: 
FilePicker__TextColorPropertyDescriptions=ボタンのテキストの色。
# Description: 
FilePicker__TextAlignmentPropertyDescriptions=左、中央、または右。
# Description: 
FilePicker__ShowFeedbackPropertyDescriptions=背景として画像を持つ FilePicker （ファイルピッカー）に対して視覚的なフィードバックを表示するかどうかを指定します。
# Description: 
FilePicker__ShapePropertyDescriptions=`FilePicker（ファイルピッカー）` のスタイルを返します。
# Description: 
FilePicker__SelectionPropertyDescriptions=選択したファイルをコンテンツ URI として返します。
# Description: 
FilePicker__OpenMethodDescriptions=ユーザーがFilePicker（ファイルピッカー）をクリックしたかのように、ファイルピッカーを開きます。
# Description: 
FilePicker__LostFocusEventDescriptions=カーソルが FilePicker （ファイルピッカー）から移動したため、クリックできなくなったことを示します。
# Description: 
FilePicker__ImagePropertyDescriptions=ボタンに表示する画像。
# Description: 
FilePicker__HeightPropertyDescriptions=FilePicker（ファイルピッカー） の垂直方向の高さをピクセル単位で指定します。
# Description: 
FilePicker__HeightPercentPropertyDescriptions=FilePicker（ファイルピッカー） の垂直の高さを、画面の高さのパーセンテージとして指定します。
# Description: 
FilePicker__GotFocusEventDescriptions=カーソルが FilePicker（ファイルピッカー） 上に移動したため、クリックできるようになったことを示します。
# Description: 
FilePicker__FontTypefacePropertyDescriptions=FilePicker （ファイルピッカー）テキストのフォント ファミリー。
# Description: 
FilePicker__FontSizePropertyDescriptions=FilePicker（ファイルピッカー） テキストのポイント サイズ。
# Description: 
FilePicker__FontItalicPropertyDescriptions=設定すると、FilePicker（ファイルピッカー） テキストが斜体で表示されます。
# Description: 
FilePicker__FontBoldPropertyDescriptions=設定すると、FilePicker （ファイルピッカー）テキストが太字で表示されます。
# Description: 
FilePicker__EnabledPropertyDescriptions=設定されている場合、ユーザーは FilePicker （ファイルピッカー）をタップしてアクションを実行できます。
# Description: 
FilePicker__BeforePickingEventDescriptions=`FilePicker（ファイルピッカー）`がクリックされたとき、またはピッカーが
# Description: 
FilePicker__BackgroundColorPropertyDescriptions=ボタンの背景色を返します
# Description: 
FilePicker__AfterPickingEventDescriptions=`FilePicker（ファイルピッカー）`アクティビティが結果を返し、プロパティが入力された後に発生するイベントです。
# Description: 
FilePicker__ActionPropertyDescriptions=FilePicker (ファイルピッカー）に必要なアクションを設定します。次のいずれか: - 既存のファイルを選択: 既存のファイルを開きます - ディレクトリを選択: 既存のディレクトリを開きます - 新しいファイルを選択: 保存する新しいファイルを作成します
# Description: 
FilePickerHelpStringComponentPallette=<code>FilePicker</code> コンポーネントはボタンのようなコンポーネントで、ユーザーがクリックすると、システムからファイルを選択するように求められます。ピッカーは、<a href="/reference/components/media.html#FilePicker.Open" target="_blank">Open</a> メソッドを呼び出してプログラムで開くこともできます。 FilePicker を使用するには、Android 4.4 以降または iOS 11 以降が必要です。
# Description: 
ApplicationNamePropertyDescriptions=API呼び出し時に指定するアプリケーションの名前を指定します。
# Description: 
ApplicationNameProperties=アプリケーションネーム
# Description: 
AnomalyDetectionHelpStringComponentPallette=異常検出モデルを含むコンポーネント
# Description: 
AddSheetMethods=シートの追加
# Description: 
AddSheetMethodDescriptions=スプレッドシート内に新しいシートを追加します。
# Description: 
AddRowMethods=行の追加
# Description: 
AddRowMethodDescriptions=値のリストを`data`として指定すると、その値をシートの次の空の行に追加します。さらに、これは新しい行の行番号を返します。
# Description: 
AddEntryMethods=エントリーの追加
# Description: 
AddEntryMethodDescriptions=指定された x および y 値を持つエントリを追加します。値はテキストまたは数値として指定できます。折れ線グラフ、散布図、面グラフ、および棒グラフの場合、両方の値が数値を表す必要があります。棒グラフの場合、x 値は最も近い整数に丸められます。円グラフの場合、x 値はテキスト値です。
# Description: 
AddColumnMethods=列を追加
# Description: 
AddColumnMethodDescriptions=値のリストを`data`として指定すると、その値をシートの次の空の列に追加します。
# Description: 
ActivityStarter__ActionPropertyDescriptions=アクティビティを開始するために使用されるアクションを返します。
# Description: 
GetFirmwareBuildMethodDescriptions=EV3のファームウェアをビルドしてください。
# Description: 
ListPicker__ElementsPropertyDescriptions=表示する選択肢のリストを指定します。
# Description: 
ListPicker__ElementsFromStringPropertyDescriptions=カンマ区切りの文字列から選択肢のリストを設定します。
# Description: 
ListPicker__BeforePickingEventDescriptions=`リストピッカー`がクリックされたとき、またはピッカーが表示されたときに発生するイベントです
# Description: 
ListPicker__BackgroundColorPropertyDescriptions=ボタンの背景色を返します
# Description: 
ListPicker__AfterPickingEventDescriptions=`リストピッカー`アクティビティが結果を返し、プロパティが入力された後に発生するイベントです。
# Description: 
ListPickerHelpStringComponentPallette=<p>クリックすると、ユーザーが選択できるテキストのリストが表示されるボタンです。テキストは、<code>ElementsFromString（列の要素）</code> プロパティを文字列で区切られた連結 (<em>選択肢 1、選択肢 2、選択肢 3</em> など) に設定することで、デザイナーまたはブロック エディターを通じて指定できます。ブロック エディタで <code>Elements</code> プロパティをリストに設定します。</p><p>ShowFilterBar（ファイルバーを見せる） プロパティを true に設定すると、リストが検索可能になります。他のプロパティは、ボタンの外観 (<code>TextAlignment（テキストアライメント）</code>、<code>BackgroundColor（背景色）</code> など) とボタンをクリックできるかどうか (<code>Enabled</code>) に影響します。 p>
# Description: 
ListFilesMethods=リストファイル
# Description: 
ListFilesMethodDescriptions=ロボット上で見つかったマッチするファイル名を含むリストを返します。
# Description: 
ListDirectoryMethods=リストダイレクトリ
# Description: 
ListDirectoryMethodDescriptions=与えられたディレクトリ内のファイルとディレクトリのリストを取得します。
# Description: 
ListDataPropertyDescriptions=リストビューに表示するデータをJsonストリングで返します。デザイナー専用プロパティです。
# Description: 
ListDataProperties=リストデータ
# Description: 
LineWidthPropertyDescriptions=キャンバスに描かれるラインの幅。
# Description: 
LineWidthProperties=ライン幅
# Description: 
LineTypePropertyDescriptions=データ・コンポーネントが、タイプにライン・ベースのチャート（エリア・チャート・タイプとライン・チャート・タイプに適用）が設定されているチャートにアタッチされている場合に、データ・シリーズのライン・タイプを変更します。有効なタイプには、直線、曲線、段差があります。
# Description: 
LineTypeProperties=ラインタイプ
# Description: 
LineString__VisiblePropertyDescriptions=ラインストリングを画面に表示するかどうかを指定します。コンポーネントが表示されている場合はtrue、非表示の場合はfalseとなります。
# Description: 
LineString__TypePropertyDescriptions=マップフィーチャのタイプを返します。ラインストリング の場合は、マップフィーチャです。ラインストリング ("ラインストリング") を返します。
# Description: 
LineString__TitlePropertyDescriptions=ユーザーがラインストリングをクリックしたときに表示される情報ウィンドウに表示されるタイトル。
# Description: 
LineString__StrokeWidthPropertyDescriptions=`ラインストリング`の輪郭に使用するストロークの幅を設定または取得します。
# Description: 
LineString__StrokeColorPropertyDescriptions=ラインストリングの輪郭に使用されるペイントカラー。
# Description: 
LineString__ShowInfoboxMethodDescriptions=ラインストリングのインフォボックスを表示します。これは、有効化Infobox が false に設定されている場合でも、infobox を表示します。
# Description: 
LineString__PointsPropertyDescriptions=緯度と経度のペアとして `ラインストリング` に含まれる点のリスト。
# Description: 
LineString__PointsFromStringPropertyDescriptions=特別にコード化された文字列からラインストリングの点を設定する： [緯度1, 経度1], [緯度2, 経度2], ...]
# Description: 
LineString__LongClickEventDescriptions=ユーザーがラインストリングを長押ししました。このイベントはDragableがfalseの場合のみ発生します。
# Description: 
LineString__EnableInfoboxPropertyDescriptions=ユーザーがラインストリングをタップしたときに、infoboxウィンドウを表示するかどうかを設定します。
# Description: 
LineString__DraggablePropertyDescriptions=Draggable プロパティは、ラインストリングを長押しして新しい場所にドラッグできるかどうかを設定するために使用します。
# Description: 
LineString__DragEventDescriptions=ユーザーがラインストリングをドラッグしました。
# Description: 
LineString__DistanceToPointMethodDescriptions=ラインストリングから緯度経度点までの距離をメートル単位で計算します。
# Description: 
LineString__DescriptionPropertyDescriptions=ユーザーがラインストリングをクリックしたときに表示される情報ウィンドウに表示される説明です。
# Description: 
LineString__ClickEventDescriptions=ユーザーがラインストリングをクリックしました。
# Description: 
LineStringHelpStringComponentPallette=ラインストリングは、マップ上に開いた連続した線を描くためのコンポーネントです。デザイナーでラインストリングに新しい点を追加するには、線分の中点をドラッグして線分から離し、新しい頂点を導入します。頂点を移動するには、頂点をクリックして新しい場所にドラッグします。頂点をクリックすると、2つしか残っていない場合を除き、その頂点が削除されます。
# Description: 
LightSensor__EnabledPropertyDescriptions=もし有効なら、デバイスは変更をリッスンします。
# Description: 
LightSensor__AvailablePropertyDescriptions=デバイスにライト変更コンポーネントをサポートするハードウェアがあるかどうかを指定します。
# Description: 
LightSensorHelpStringComponentPallette=光量を測定できるセンサー部品。
# Description: 
LightChangedEvents=ライト変更
# Description: 
LightChangedEventDescriptions=光量の変化が検出されたときに呼び出されます。
# Description: 
LegendEnabledPropertyDescriptions=チャート上で凡例が有効になっているかどうかを示すブール値を返します。
# Description: 
LegendEnabledProperties=レジェンド有効
# Description: 
LegacyModeProperties=レガシーモード
# Description: 
LeaveInstanceMethods=インスタンスを残す
# Description: 
LeaveInstanceMethodDescriptions=現在のインスタンスから離れる。
# Description: 
LeaderPropertyDescriptions=ゲームのリーダーです。いつでも、各ゲームインスタンスにはリーダーは一人しかいませんが、リーダーは時間とともに変わることがあります。最初は、リーダーはゲームインスタンスの作成者です。アプリケーションライターはリーダーの特別なプロパティを決定します。リーダーの値は、サーバーとの通信が成功するたびに更新されます。
# Description: 
LeaderProperties=リーダー
# Description: 
LaunchPickerMethods=ピッカーを起動する
# Description: 
LatitudeProperties=緯度
# Description: 
LatitudeFromAddressMethods=住所からの緯度
# Description: 
LatitudeFromAddressMethodDescriptions=指定された住所の緯度を求めます
# Description: 
LastMessagePropertyDescriptions=最近受信したタグの内容を返します。
# Description: 
LastMessageProperties=最後のメッセージ
# Description: 
LanguageProperties=言語
# Description: 
LabelsPropertyDescriptions=X軸に設定されたラベルのリストを返します。
# Description: 
LabelsProperties=ラベル
# Description: 
LabelsFromStringPropertyDescriptions=現在のビューがX軸を持つChartである場合に、ChartのX軸に設定するラベルを指定します。ラベルは、カンマで区切られた1つの値文字列として指定されます（各値がカンマで区切られていることを意味します）。参照
# Description: 
LabelsFromStringProperties=文字列からのラベル
# Description: 
Label__WidthPropertyDescriptions=ラベルの横幅をピクセル単位で指定します。
# Description: 
Label__WidthPercentPropertyDescriptions=ラベルの横幅を画面の横幅に対する割合で指定します。
# Description: 
Label__VisiblePropertyDescriptions=ラベルを画面に表示するかどうかを指定します。ラベルが表示されている場合はtrue、非表示の場合はfalseとなります。
# Description: 
Label__TextPropertyDescriptions=ラベルが表示するテキストを返します。
# Description: 
Label__TextColorPropertyDescriptions=ラベルのテキスト色をアルファ-赤-緑-青の整数値で返します。
# Description: 
Label__TextAlignmentPropertyDescriptions=ラベルのテキストの配置を返します：中央、標準（例えば、テキストが左から右に書かれている場合は左寄せ）、反対（例えば、テキストが左から右に書かれている場合は右寄せ）。
# Description: 
Label__HeightPropertyDescriptions=ラベルの縦の高さをピクセル単位で指定します。
# Description: 
Label__HeightPercentPropertyDescriptions=ラベルの垂直方向の高さを、スクリーンの高さに対するパーセンテージで指定します。
# Description: 
Label__FontTypefacePropertyDescriptions=ラベルのテキストのフォントフェイスをデフォルト、セリフ、サンセリフ、等幅で返します。
# Description: 
Label__FontSizePropertyDescriptions=ラベルのテキストのフォントサイズを、sp（スケールに依存しないピクセル）単位で返します。
# Description: 
Label__FontItalicPropertyDescriptions=ラベルのテキストがイタリック体である場合にtrueを返す。イタリック体が要求された場合、フォントがイタリック体をサポートしていなくても、このプロパティはtrueを返します。
# Description: 
Label__FontBoldPropertyDescriptions=ラベルのテキストを太字にする場合にtrueを返します。太字が要求されている場合、フォントが太字をサポートしていなくても、このプロパティはtrueを返します。
# Description: 
Label__BackgroundColorPropertyDescriptions=ラベルの背景色をアルファ-赤-緑-青の整数値で返します。
# Description: 
LabelPropertyDescriptions=データ系列のラベルテキストを返します。
# Description: 
LabelProperties=ラベル
# Description: 
LabelHelpStringComponentPallette=ラベルは、<code>Text</code>プロパティで指定されたテキストを表示します。その他のプロパティは、デザイナーやブロックエディタで設定することができ、テキストの外観や配置を制御します。
# Description: 
KeyFilePropertyDescriptions=プライベートキーファイルのパスを指定します。このキーファイルは、FusionTables API にアクセスするために使用されます。
# Description: 
KeyFileProperties=キーファイル
# Description: 
KeepRunningWhenOnPausePropertyDescriptions=keepRunningWhenOnPause（一時停止中も続ける） の値を返します。
# Description: 
KeepRunningWhenOnPauseProperties=KeepRunningWhenOnPause（一時停止中も続ける）
# Description: 
KeepAliveMethods=ライブを続ける
# Description: 
JsonTextDecodeWithDictionariesMethods=ディクショナリを用いたJsonテキストデコード
# Description: 
JsonTextDecodeWithDictionariesMethodDescriptions=指定された JSON エンコード値をデコードして、対応する App Inventor 値を生成します。JSONリスト[x, y, z]は、リスト(x y z)にデコードされます。a: b}と表記される、名前Aと値Bを持つJSONオブジェクトは、キーaと値bを持つ辞書にデコードされます。
# Description: 
JsonTextDecodeMethods=Jsonテキストデコード
# Description: 
JsonTextDecodeMethodDescriptions=与えられたJSONエンコードされた値をデコードして、対応するAppInventorの値を生成する。JSON リスト `[x, y, z]` はリスト `(x y z)` にデコードされ、キーが A で値が B の JSON オブジェクト（`{A:B}` と表記される）はリスト `((A B))` にデコードされる。結果としてリストのリストではなく辞書オブジェクトを返したい場合は、JsonTextDecodeWithDictionariesメソッドを使用してください。
# Description: 
JsonObjectEncodeMethods=Jsonオブジェクトのエンコード
# Description: 
JsonObjectEncodeMethodDescriptions=組み込み型（boolean、number、text、list、dictionaryなど）の値をJavaScript Object Notation表現で返します。値が JSON として表現できない場合、スクリーン の ErrorOccurred （エラー発生）イベントが実行され、Web コンポーネントは空の文字列を返します。
# Description: 
JoinedInstancesPropertyDescriptions=このプレイヤーが参加しているゲーム・インスタンスのセットです。現在の値が返されるようにするには、まずGetInstanceLists（インスタンスリストを取得）を呼び出します。
# Description: 
JoinedInstancesProperties=参加（結合）インスタンス
# Description: 
ItemTextColorPropertyDescriptions=リストピッカー項目のテキスト色。
# Description: 
ItemTextColorProperties=アイテムテキスト色
# Description: 
ItemBackgroundColorPropertyDescriptions=リストピッカーアイテムの背景色。
# Description: 
ItemBackgroundColorProperties=アイテム背景色
# Description: 
IsPressedMethods=押された
# Description: 
IsPressedMethodDescriptions=タッチセンサーが押された場合にtrueを返します。
# Description: 
IsPlayingPropertyDescriptions=メディアがプレイしているかどうかを報じます
# Description: 
IsPlayingProperties=プレイ中
# Description: 
IsOpenPropertyDescriptions=シリアル接続が開いている場合にtrueを返します。
# Description: 
IsOpenProperties=オープン
# Description: 
IsInitializedPropertyDescriptions=シリアルが初期化された場合にtrueを返します。
# Description: 
IsInitializedProperties=初期化されている
# Description: 
IsDirectoryMethods=ディクショナリ
# Description: 
IsDirectoryMethodDescriptions=与えられたスコープで指定されたパスがディレクトリであるかどうかをテストします。
# Description: 
IsDevicePairedMethods=デバイスペア
# Description: 
IsDevicePairedMethodDescriptions=指定されたアドレスのBluetoothデバイスがペアリングされているかどうかをチェックします。
# Description: 
IsConnectedPropertyDescriptions=APIレベル14(LEVEL_ICE_CREAM_SANDWICH)以上のデバイスでは、このプロパティは正確に返されます。しかし、APIレベルが14より低い古いデバイスでは、現在の接続状態を返さないかもしれません(例えば、接続が切断されているかもしれないが、ソケットの読み書きを試みるまでわからないかもしれません)。
# Description: 
IsConnectedProperties=接続されている
# Description: 
IsAuthorizedEvents=公認
# Description: 
IsAuthorizedEventDescriptions=このイベントは、承認が成功した場合にプログラムが <code>Authorize（オーソライズ）</code> を呼び出した後に発生します。有効なアクセス トークンをすでに持っている場合は、<code>CheckAuthorized（チェックオーソライズ）</code> の呼び出し後にも呼び出されます。このイベントが発生した後、このコンポーネントの他のメソッドを呼び出すことができます。
# Description: 
IsAcceptingPropertyDescriptions=このBluetoothサーバーコンポーネントが着信接続を受け付けている場合にtrueを返します。
# Description: 
IsAcceptingProperties=受け入れる
# Description: 
InvitedInstancesPropertyDescriptions=このプレイヤーが招待されているが、まだ参加していないゲーム インスタンスのセットです。現在の値が返されるようにするには、まずGetInstanceLists（スタンスリストに入る）を呼び出します。
# Description: 
InvitedInstancesProperties=招待されたインスタンス
# Description: 
InvitedEvents=招待された
# Description: 
InvitedEventDescriptions=ユーザーがこのゲームインスタンスに招待されたことを示します。
# Description: 
InviteMethods=招待
# Description: 
InviteMethodDescriptions=このゲームインスタンスにプレイヤーを招待します。
# Description: 
InvertMaskPropertyDescriptions=編集に使用するマスクのアルファチャンネルを反転させるかどうかを指定します。
# Description: 
InvertMaskProperties=反転マスク
# Description: 
InvalidPointEvents=無効ポイント
# Description: 
InvalidPointEventDescriptions=マップ操作中に無効な座標が指定されました。メッセージパラメータに問題の詳細が表示されます。
# Description: 
IntervalProperties=インターバル
# Description: 
InstantProperties=インスタント
# Description: 
InstantMethods=インスタント
# Description: 
InstantInTimeParams=時間のインスタントID
# Description: 
InstanceIdPropertyDescriptions=ゲームのインスタンスIDです。ゲームIDとインスタンスIDを合わせて、ゲームを一意に識別します。
# Description: 
InstanceIdProperties=インスタンスID
# Description: 
InstanceIdChangedEvents=インスタンスIDを変更
# Description: 
InstanceIdChangedEventDescriptions=新しいインスタンスを作る、 または インスタンスをセットする を呼び出した結果、InstanceId（インスタンスID） プロパティが変更されたことを示します。
# Description: 
InstallationIdMethods=インスタレーションID
# Description: 
InstallationIdMethodDescriptions=ACRAインストールIDを返却する
# Description: 
InsertRowMethods=行の挿入
# Description: 
InsertRowMethodDescriptions=指定されたフュージョン・テーブルに行を挿入します。テーブルフィールドは、フュージョン・テーブルの ID です。columnsフィールドは、値を挿入するカラムのカンマ区切りリストです。values （ファイル）フィールドは、各カラムに挿入する値を指定します。
# Description: 
InitializeSerialMethods=シリアルの初期化
# Description: 
InitializeSerialMethodDescriptions=シリアルコネクションを初期化します。
# Description: 
InitializeEvents=初期化
# Description: 
InitializeEventDescriptions=Initialize（初期化）イベントはスクリーンの起動時に実行され、1画面につき1回のみ実行されます。
# Description: 
InfoEvents=Info
# Description: 
InfoEventDescriptions=プレーヤーが知っておくべきことが起こったことを示します。
# Description: 
IncomingCallAnsweredEvents=着信応答
# Description: 
IncomingCallAnsweredEventDescriptions=着信電話に応答したことを示すイベントです。\nphoneNumber（携帯番号）は着信の電話番号です。
# Description: 
ImportFromWebMethods=Webからのインポート
# Description: 
ImportFromWebMethodDescriptions=指定されたウェブコンポーネントからデータをインポートします。空の列にはデフォルト値 (Entry 1, 2, 3, ...) が入力されます。データのインポートを成功させるには、データをロードしてから、このブロックをそのWebコンポーネントで使用する必要があります。Web コンポーネントで getValue （値を取得）イベントを使用する必要はありません。
# Description: 
ImportFromTinyDBMethods=TinyDBからのインポート
# Description: 
ImportFromTinyDBMethodDescriptions=指定されたタグ値で識別される値を取り込んで、指定されたTinyDBコンポーネントからデータをインポートします。期待されるTinyDBの値は、以下の説明と同じ方法でフォーマットされたリストです
# Description: 
ImportFromSpreadsheetMethods=スプレッドシートからのインポート
# Description: 
ImportFromSpreadsheetMethodDescriptions=指定された x 列を x 値として取得し、指定された y 列を y 値として取得することにより、指定されたスプレッドシート コンポーネントからデータをインポートします。この関数を呼び出す前に、スプレッドシート コンポーネントの ReadSheet（シートを読む） メソッドを呼び出してデータをロードする必要があります。 Spreadsheet コンポーネントで GotSheet ８シートを取得）イベントを使用する必要はありません。空の列にはデフォルト値 (エントリ 1、2、3、... の場合は 1、2、3、...) が入力されます。
# Description: 
ImportFromListMethods=リストからのインポート
# Description: 
ImportFromListMethodDescriptions=指定されたリスト パラメーターからデータ シリーズにデータをインポートします。リストには、リストでもある要素が含まれることが期待されます。各リスト要素には 2 つの値が想定されており、最初の値は x 値、2 番目の値は y 値です。無効なリストのエントリは単純にスキップされます。既存のデータは消去されません。
# Description: 
ImportFromDataFileMethods=データファイルからのインポート
# Description: 
ImportFromDataFileMethodDescriptions=指定された x 列を x 値として取得し、指定された y 列を y 値として取得することにより、指定されたデータファイルコンポーネントからデータをインポートします。 データファイル のソース ファイルは CSV または JSON ファイルであることが想定されます。いずれかの列パラメータに対して空のテストを渡すと、エントリのインデックスであるデフォルト値が使用されます。最初のエントリのデフォルト値は 1、2 番目のエントリのデフォルト値は 2 などとなります。
# Description: 
ImportFromCloudDBMethods=クラウドDBからのインポート
# Description: 
ImportFromCloudDBMethodDescriptions=指定されたタグ値によって識別される値を取ることによって、指定されたクラウドDBコンポーネントからデータをインポートします。期待されるクラウドDBの値は、で説明したのと同じ方法でフォーマットされたリストです
# Description: 
Image__WidthPropertyDescriptions=画像の横幅をピクセル単位で指定します。
# Description: 
Image__WidthPercentPropertyDescriptions=画像の横幅を画面幅に対する割合で指定します。
# Description: 
Image__VisiblePropertyDescriptions=イメージの表示／非表示を指定します。表示されている場合はtrue、非表示の場合はfalseとなります。
# Description: 
Image__PicturePropertyDescriptions=画像のパスを返します。
# Description: 
Image__HeightPropertyDescriptions=イメージの垂直方向の高さをピクセル単位で指定します。
# Description: 
Image__HeightPercentPropertyDescriptions=イメージの垂直方向の高さを、スクリーンの高さに対するパーセンテージで指定します。
# Description: 
Image__ClickEventDescriptions=画像がクリックされたときに発生するイベントです。
# Description: 
ImageWidthPropertyDescriptions=リストビューの画像の幅。
# Description: 
ImageWidthProperties=画像の幅
# Description: 
ImageSprite__ZPropertyDescriptions=`ImageSprite（画像スプライト）`を他の画像とどのようにレイヤー化するか（関連付けるか）
# Description: 
ImageSprite__YPropertyDescriptions=ImageSprite（画像スプライト）の上端の垂直座標で、ImageSpriteが下に移動するにつれて大きくなります。
# Description: 
ImageSprite__XPropertyDescriptions=ImageSprite（画像スプライト）の左端の水平座標で、ImageSpriteが右に移動するにつれて大きくなります。
# Description: 
ImageSprite__WidthPropertyDescriptions=ImageSprite（画像スプライト）の幅をピクセル単位で指定します。
# Description: 
ImageSprite__VisiblePropertyDescriptions=ImageSprite（画像スプライト）が表示されているかどうか。
# Description: 
ImageSprite__TouchedEventDescriptions=ユーザが有効化されたImageSprite（画像スプライト）にタッチし、すぐに指を離したときに呼び出されるイベントハンドラです。xとyの座標はキャンバスの左上からの相対座標です。
# Description: 
ImageSprite__TouchUpEventDescriptions=ユーザーが有効化されたImageSprite（画像スプライト）へのタッチを止めたとき（TouchDownイベントの後に指を離したとき）に呼び出されるイベントハンドラです。これは、キャンバスの左上を基準とした、タッチのx座標とy座標を提供します。
# Description: 
ImageSprite__TouchDownEventDescriptions=ユーザが有効化されたImageSprite（画像スプライト）をタッチし始める（指をImageSpriteの上に置き、そのまま放置する）と呼び出されるイベントハンドラです。これは、キャンバスの左上を基準としたタッチのx座標とy座標を提供します。
# Description: 
ImageSprite__SpeedPropertyDescriptions=もし有効であれば、ImageSprite（画像スプライト）が間隔ごとに移動すべきピクセル数です。
# Description: 
ImageSprite__PointTowardsMethodDescriptions=ImageSprite（画像スプライト）を指定したターゲット・スプライト（BallまたはImageSprite）の方向に向けます。新しい方位は、2つのスプライトの中心点を結ぶ線と平行になります。
# Description: 
ImageSprite__PointInDirectionMethodDescriptions=座標(x, y)に向かってImageSprite（画像スプライト）の方位を設定します。
# Description: 
ImageSprite__PicturePropertyDescriptions=ImageSprite（画像スプライト）の外観を決める画像。
# Description: 
ImageSprite__MoveToPointMethodDescriptions=ImageSprite（画像スプライト）の原点を[x-座標, y-座標]でフォーマットされたリストで指定された座標の位置に移動します。
# Description: 
ImageSprite__MoveToMethodDescriptions=ImageSprite（画像スプライト）の左上隅が指定したx座標とy座標になるように移動します。
# Description: 
ImageSprite__MoveIntoBoundsMethodDescriptions=ImageSprite（画像スプライト）の一部が枠外にはみ出した場合、枠内に戻します。ImageSpriteの幅が大きすぎてキャンバスに収まらない場合、ImageSpriteの左側をキャンバスの左側に揃えます。ImageSpriteの高さがキャンバスに収まらない場合、ImageSpriteの上辺をキャンバスの上辺に揃えます。
# Description: 
ImageSprite__IntervalPropertyDescriptions=ImageSprite（画像スプライト）の位置を更新する間隔をミリ秒で指定します。例えば、間隔が50で速度が10の場合、50ミリ秒ごとにスプライトはヘディング方向に10ピクセル移動します。
# Description: 
ImageSprite__HeightPropertyDescriptions=ImageSprite（画像スプライト）の高さをピクセル単位で指定します。
# Description: 
ImageSprite__HeadingPropertyDescriptions=ImageSprite（画像スプライト）の方位を、正のX軸からの角度で返します。0度は画面の右方向、90度は画面の上方向です。
# Description: 
ImageSprite__FlungEventDescriptions=有効な ImageSprite（画像スプライト） 上でフリング ジェスチャ (クイック スワイプ) が行われたときに呼び出されるイベント ハンドラーです。これにより、フリングの開始点の x 座標と y 座標 (キャンバスの左上を基準)、速度 (ミリ秒あたりのピクセル数)、方位 (-180 ～ 180 度)、および x および y 速度成分が提供されます。フリングのベクトルです。
# Description: 
ImageSprite__EnabledPropertyDescriptions=ImageSprite（画像スプライト） が移動し、衝突、ドラッグ、タッチ、投げ飛ばしなどの操作が可能かどうかを制御します。
# Description: 
ImageSprite__EdgeReachedEventDescriptions=ImageSprite（画像スプライト）が画面の端に到達したときに呼び出されるイベント ハンドラーです。そのエッジで Bounce （バウンス）を呼び出すと、ImageSprite （画像スプライト）は到達したエッジから跳ね返ったように見えます。ここでのエッジは、北 (1)、北東 (2)、東 (3)、南東 (4)、南 (-1)、南西 (-2)、西 (-3) の 8 つの方向のいずれかを示す整数として表されます。 、北西 (-4)。
# Description: 
ImageSprite__DraggedEventDescriptions=ImageSprite （画像スプライト）がドラッグされたときに呼び出されるイベント ハンドラーです。すべての呼び出しにおいて、開始座標は画面に最初に触れた場所であり、「現在の」座標は現在の線分の終点を表します。特定のドラッグ内の最初の呼び出しでは、「前の」座標は開始座標と同じです。その後、それらは前の呼び出しからの「現在の」座標になります。 MoveTo が明示的に呼び出されない限り、ImageSprite は Dragged イベントに応答して実際にはどこにも移動しないことに注意してください。スムーズな動きを実現するには、各座標を初期値と現在の値と前の値の差の合計に設定する必要があります。
# Description: 
ImageSprite__CollidingWithMethodDescriptions=このImageSprite（画像スプライト）と渡されたスプライト（BallまたはImageSprite）の間に衝突が登録されているかどうかを示します。
# Description: 
ImageSprite__BounceMethodDescriptions=ImageSprite （画像スプライト）を壁から跳ね返らせるようにします。通常のバウンスの場合、edge 引数は EdgeReached（エッジ到達） によって返される引数である必要があります。
# Description: 
ImageSpriteHelpStringComponentPallette=<p><code>キャンバス</code> 上に配置できる「スプライト」。タッチやドラッグに反応したり、他のスプライト (<code>Ball</code> や他の < code>画像スプライト(ImageSprite)</code>s) と Canvas の端を移動し、そのプロパティ値に従って移動します。その外観は、その <code>Picture</code> プロパティで指定された画像になります (<code>Visible</code> プロパティが <code>False</code> でない場合)。</p> <p>To <code>画像スプライト</code> が 1000 ミリ秒 (1 秒) ごとに左に 10 ピクセル移動するようにします。たとえば、<code>Speed</code> プロパティを 10 [ピクセル] に設定すると、<code> Interval</code> プロパティを 1000 [ミリ秒]、<code>Heading</code> プロパティを 180 [度]、<code>Enabled</code> プロパティを <code>True</code> に設定します。 <code>Rotates</code> プロパティが <code>True</code> であるスプライトは、スプライトの <code>Heading</code> が変更されると画像を回転します。現在、回転されたスプライトとの衝突をチェックすると、スプライトの回転されていない位置がチェックされるため、回転された背が高くて幅が狭いスプライトや幅が低くて短いスプライトの場合、衝突チェックが不正確になります。スプライトのプロパティはどれも、プログラムの制御でいつでも変更できます。</p>
# Description: 
ImageProperties=画像
# Description: 
ImagePicker__WidthPropertyDescriptions=ImagePicker（画像ピッカー）の横幅をピクセル単位で指定します。
# Description: 
ImagePicker__WidthPercentPropertyDescriptions=ImagePicker（画像ピッカー）の横幅を、スクリーンの横幅に対するパーセンテージで指定します。
# Description: 
ImagePicker__VisiblePropertyDescriptions=ImagePicker（画像ピッカー）を画面に表示するかどうかを指定します。ImagePicker（画像ピッカー）が表示されている場合はtrue、非表示の場合はfalseとなります。
# Description: 
ImagePicker__TouchUpEventDescriptions=ImagePicker（画像ピッカー）がリリースされたことを示します。
# Description: 
ImagePicker__TouchDownEventDescriptions=ImagePicker（画像ピッカー）が押されたことを示します。
# Description: 
ImagePicker__TextPropertyDescriptions=ImagePicker（画像ピッカー）に表示するテキスト。
# Description: 
ImagePicker__TextColorPropertyDescriptions=ボタンテキストの色。
# Description: 
ImagePicker__TextAlignmentPropertyDescriptions=左か、中央か、右か。
# Description: 
ImagePicker__ShowFeedbackPropertyDescriptions=画像を背景とする ImagePicker（画像ピッカー） に視覚的なフィードバックを表示するかどうかを指定します。
# Description: 
ImagePicker__ShapePropertyDescriptions=`ImagePicker（画像ピッカー）`のスタイルを返します。
# Description: 
ImagePicker__SelectionPropertyDescriptions=選択された画像を含むファイルへのパスする。
# Description: 
ImagePicker__OpenMethodDescriptions=ユーザーがクリックしたかのように、ImagePicker（画像ピッカー）を開きます。
# Description: 
ImagePicker__LostFocusEventDescriptions=カーソルがイメージピッカーから離れ、クリックできなくなったことを示します。
# Description: 
ImagePicker__ImagePropertyDescriptions=ボタンに表示する画像。
# Description: 
ImagePicker__HeightPropertyDescriptions=ImagePicker（画像ピッカー）の垂直方向の高さをピクセル単位で指定します。
# Description: 
ImagePicker__HeightPercentPropertyDescriptions=ImagePicker（画像ピッカー）の垂直方向の高さを、スクリーンの高さに対するパーセンテージで指定します。
# Description: 
ImagePicker__GotFocusEventDescriptions=カーソルがImagePicker （画像ピッカー）の上に移動し、クリックできるようになったことを示します。
# Description: 
ImagePicker__FontTypefacePropertyDescriptions=ImagePicker （画像ピッカー）テキストのフォントファミリー。
# Description: 
ImagePicker__FontSizePropertyDescriptions=ImagePicker（画像ピッカー） テキストのポイントサイズ。
# Description: 
ImagePicker__FontItalicPropertyDescriptions=設定された場合、ImagePicker（画像ピッカー） テキストはイタリック体で表示されます。
# Description: 
ImagePicker__FontBoldPropertyDescriptions=設定すると、ImagePicker （画像ピッカー）のテキストは太字で表示されます。
# Description: 
ImagePicker__EnabledPropertyDescriptions=設定されている場合、ユーザーはImagePicker（画像ピッカー）をタップしてアクションを起こすことができます。
# Description: 
ImagePicker__BeforePickingEventDescriptions=`ImagePicker（画像ピッカー）`がクリックされたとき、またはピッカーが表示されたときに発生するイベントです
# Description: 
ImagePicker__BackgroundColorPropertyDescriptions=ボタンの背景色を返します
# Description: 
ImagePicker__AfterPickingEventDescriptions=`ImagePicker（画像ピッカ）`アクティビティが結果を返し、プロパティが入力された後に発生するイベントです。
# Description: 
ImagePickerHelpStringComponentPallette=特殊な用途のボタンです。ユーザーが画像ピッカーをタップすると、デバイスの画像ギャラリーが表示され、画像を選択できます。画像が選択されると保存され、<code>Selected</code> プロパティは画像が保存されるファイルの名前になります。ストレージがいっぱいにならないように、最大 10 枚の画像が保存されます。さらに画像を選択すると、古い画像から新しい画像の順に前の画像が削除されます。
# Description: 
ImageHelpStringComponentPallette=画像を表示するコンポーネントです。表示する画像やその他の外観は、デザイナーまたはブロックエディターで指定できます。
# Description: 
ImageHeightPropertyDescriptions=リストビューストリングアイテム画像の高さ。
# Description: 
ImageHeightProperties=画像高さ
# Description: 
ImageEditedEvents=画像編集
# Description: 
ImageEditedEventDescriptions=ImageCreated（画像作成）イベントは、ImageBotが画像の編集に成功したときに実行されます。
# Description: 
ImageCreatedEvents=画像作成
# Description: 
ImageCreatedEventDescriptions=ImageCreated （画像作成）イベントは、ImageBot が画像の作成に成功したときに実行されます。
# Description: 
ImageBot__TokenPropertyDescriptions=使用する MIT アクセストークンです。MIT App Inventorはこの値を自動的に入力します。変更する必要はありません。
# Description: 
ImageBot__ErrorOccurredEventDescriptions=ErrorOccurred（エラー発生）イベントは、APIキーの提供忘れやサーバーの過負荷など、処理中にエラーが発生した場合に実行されます。
# Description: 
ImageBot__ApiKeyPropertyDescriptions=ImageBotとの認証に使用するApiKeyを指定します。
# Description: 
ImageBotHelpStringComponentPallette=ImageBotは、DALL-E 2を使って画像を作成・編集する非可視コンポーネントです。このコンポーネントには、ブロックのApiKeyプロパティを設定することで、独自のOpenAI APIキーを提供する必要があります。
# Description: 
ImageAssetPropertyDescriptions=`マーカー`に表示する画像を指定します。空の文字列 "" を指定すると、デフォルトのマーカーアイコンが使用される。
# Description: 
ImageAssetProperties=画像アセット
# Description: 
IgnoreSslErrorsPropertyDescriptions=SSLエラーを無視するかどうかを決定します。エラーを無視するにはtrueを設定します。ウェブサイトからの自己署名証明書を受け入れる場合に使用します。
# Description: 
IgnoreSslErrorsProperties=SSLエラーを無視する
# Description: 
IconPropertyDescriptions=アプリの表示アイコンに使用する画像は、1024x1024ピクセルまでの正方形のpngまたはjpeg画像でなければなりません。これより大きな画像を使用すると、アプリのコンパイルやインストールに失敗することがあります。ビルドサーバーは、Androidデバイス用の標準サイズの画像を生成します。
# Description: 
IconProperties=アイコン
# Description: 
Hygrometer__EnabledPropertyDescriptions=もし有効なら、デバイスは変更をリッスンします。
# Description: 
Hygrometer__AvailablePropertyDescriptions=デバイスが湿度計コンポーネントをサポートするハードウェアを持っているかどうかを指定します。
# Description: 
ListViewLayoutProperties=リストビューレイアウト
# Description: 
ListViewHelpStringComponentPallette=</p> <p>これは、テキストとイメージ要素のリストを表示する可視コンポーネントです。</p> <p>文字列の単純なリストは、文字列からの要素プロパティを使用して設定することができます。複数の文字列および/または画像を含む要素のより複雑なリストは、リストデータおよびリストビューレイアウトプロパティを使用して作成できます。</p>
# Description: 
ListPicker__WidthPropertyDescriptions=リストピッカーの横幅をピクセル単位で指定します。
# Description: 
ListPicker__WidthPercentPropertyDescriptions=リストピッカーの横幅を、画面の横幅に対する割合で指定します。
# Description: 
ListPicker__VisiblePropertyDescriptions=リストピッカーを画面に表示するかどうかを指定します。リストピッカーが表示されている場合はtrue、非表示の場合はfalseとなります。
# Description: 
ListPicker__TouchUpEventDescriptions=リストピッカーがリリースされたことを示します。
# Description: 
ListPicker__TouchDownEventDescriptions=リストピッカーが押されたことを示します。
# Description: 
ListPicker__TitlePropertyDescriptions=選択肢のリストの一番上に表示されるオプションのタイトル。
# Description: 
ListPicker__TextPropertyDescriptions=リストピッカーに表示するテキスト。
# Description: 
ListPicker__TextColorPropertyDescriptions=ボタンテキストの色。
# Description: 
ListPicker__TextAlignmentPropertyDescriptions=左か、中央か、右か。
# Description: 
ListPicker__ShowFilterBarPropertyDescriptions=検索フィルタバーをリストピッカーに表示するかどうかを示すショーフィルターバーの現在の状態を返します
# Description: 
ListPicker__ShowFeedbackPropertyDescriptions=画像を背景に持つ リストピッカーに視覚的なフィードバックを表示するかどうかを指定します。
# Description: 
ListPicker__ShapePropertyDescriptions=`リストピッカー` のスタイルを返します。
# Description: 
ListPicker__SelectionPropertyDescriptions=選択された項目です。プログラマが直接変更すると、セレクションインデックスプロパティも、指定された値を持つ リストピッカー の最初の項目に変更されます。値が表示されない場合は、セレクションインデックスは 0 に設定されます。
# Description: 
ListPicker__SelectionIndexPropertyDescriptions=現在選択されている項目のインデックスで、1から始まります。項目が選択されていない場合、値は0になります。この値を1未満またはリストピッカーの項目数以上に設定しようとすると、セレクションインデックスは0に設定され、セレクションは空のテキストに設定されます。
# Description: 
ListPicker__OpenMethodDescriptions=ユーザーがクリックしたかのように、リストピッカーを開きます。
# Description: 
ListPicker__LostFocusEventDescriptions=カーソルがリストピッカーから離れ、クリックできなくなったことを示します。
# Description: 
ListPicker__ImagePropertyDescriptions=ボタンに表示する画像。
# Description: 
ListPicker__HeightPropertyDescriptions=リストピッカーの垂直方向の高さをピクセル単位で指定します。
# Description: 
ListPicker__HeightPercentPropertyDescriptions=リストピッカーの垂直方向の高さを、スクリーンの高さに対するパーセンテージで指定します。
# Description: 
ListPicker__GotFocusEventDescriptions=カーソルがリストピッカーの上に移動し、クリックできるようになったことを示します。
# Description: 
ListPicker__FontTypefacePropertyDescriptions=リストピッカーテキストのフォントファミリー。
# Description: 
ListPicker__FontSizePropertyDescriptions=リストピッカーテキストのポイントサイズ。
# Description: 
ListPicker__FontItalicPropertyDescriptions=設定された場合、リストピッカーテキストはイタリック体で表示されます。
# Description: 
ListPicker__FontBoldPropertyDescriptions=設定された場合、リストピッカーテキストは太字で表示されます。
# Description: 
ListPicker__EnabledPropertyDescriptions=設定されている場合、ユーザーはリストピッカーをタップしてアクションを起こすことができます。
# Description: 
Translator__ApiKeyPropertyDescriptions=使用する API キーです。 MIT App Inventor によってこの値が自動的に入力されます。変更する必要はありません。
# Description: 
TranslatorHelpStringComponentPallette=このコンポーネントを使用して、単語や文章を異なる言語間で翻訳します。 このコンポーネントは、MIT のサーバーに翻訳を要求するため、インターネット アクセスが必要です (さらに、MIT は商用翻訳サービスに翻訳を要求します)。 2 つの文字言語コードを使用して、ソースとターゲットの形式でソース言語とターゲット言語を指定します。 したがって、「en-es」は英語からスペイン語に翻訳され、「es-ru」はスペイン語からロシア語に翻訳されます。 ソース言語を省略した場合、サービスはソース言語の検出を試みます。 したがって、「es」だけを指定すると、ソース言語が検出され、スペイン語に翻訳されます。 <i>注</i>: 翻訳はバックグラウンドで非同期的に行われます。 翻訳が完了すると、<b>GotTranslation（翻訳を取得）(String, String)</b> イベントがトリガーされます。
# Description: 
TrackColorInactivePropertyDescriptions=オフ時のトグルトラックの色
# Description: 
TrackColorActivePropertyDescriptions=`スイッチ`のトラックカラーを返します
# Description: 
TopOfRangePropertyDescriptions=BelowRange（範囲以下）、WithinRange（範囲内）、および AboveRange（上記範囲 ）イベントに使用される範囲の上限。
# Description: 
TokenProperties=トークン
# Description: 
ToggleDirectionMethods=トグル方向
# Description: 
ToggleDirectionMethodDescriptions=モーターの方向を切り替えます。
# Description: 
TitleVisiblePropertyDescriptions=タイトル バーは、画面上の上部の灰色のバーです。 このプロパティは、タイトル バーが表示されるかどうかを報告します。
# Description: 
TitleVisibleProperties=タイトル表示可能
# Description: 
TitleProperties=タイトル
# Description: 
TinyWebDB__WebServiceErrorEventDescriptions=Web サービスとの通信でエラーが発生したことを示します。
# Description: 
TinyWebDBHelpStringComponentPallette=Web サービスと通信して情報を保存および取得する非表示コンポーネント。
# Description: 
TinyWebDB__StoreValueMethodDescriptions=指定された値を指定されたタグの下に保存するように Web サービスに要求します
# Description: 
TinyWebDB__ServiceURLPropertyDescriptions=Web サービス データベースの URL。
# Description: 
TinyWebDB__GotValueEventDescriptions=GetValue（取得値） 要求が成功したことを示します。
# Description: 
TinyWebDB__GetValueMethodDescriptions=Web サービスにリクエストを送信して、指定されたタグの下に格納されている値を取得します。 Web サービスは、タグの下に値が格納されていない場合に何を返すかを決定する必要があります。 このコンポーネントは返されたものをすべて受け入れます。
# Description: 
TinyDB__StoreValueMethodDescriptions=指定されたタグの下に保存されている値を取得します。 そのようなタグがない場合は、valueIfTagNotThere（タグがない場合の値 ）を返します。
# Description: 
TinyDB__GetValueMethodDescriptions=指定されたタグの下に保存されている値を取得します。 そのようなタグがない場合は、valueIfTagNotThere（タグがない場合の値 ）を返します。
# Description: 
TinyDB__ClearTagMethodDescriptions=指定されたタグを持つエントリーをクリアします。
# Description: 
TinyDBHelpStringComponentPallette=TinyDB は、アプリのデータを保存する非表示コンポーネントです。 <p> App Inventor で作成されたアプリは、実行するたびに初期化されます。アプリが変数の値を設定し、ユーザーがアプリを終了した場合、その変数の値は次回アプリを実行するときに記憶されません。 対照的に、TinyDB はアプリの<em>永続</em>データ ストアです。つまり、そこに保存されているデータは、アプリが実行されるたびに利用可能になります。 例としては、ハイスコアを保存し、ゲームがプレイされるたびに取得するゲームが挙げられます。 </<p> <p> データ項目は、 <em>タグ</em> の下に保存される文字列です。 データ項目を保存するには、データ項目を保存するタグを指定します。 その後、特定のタグの下に保存されたデータを取得できます。 </p><p> アプリごとにデータ ストアは 1 つだけです。 複数の TinyDB コンポーネントがある場合でも、それらは同じデータ ストアを使用します。 個別のストアの効果を得るには、異なるキーを使用します。 また、各アプリには独自のデータ ストアがあります。 TinyDB を使用して電話機上の 2 つの異なるアプリ間でデータを受け渡すことはできませんが、TinyDb を使用してマルチスクリーン アプリの異なる画面間でデータを共有することは<em>可能</em>です。 </p> <p>AI Companion を使用してアプリを開発している場合、そのコンパニオンを使用するすべてのアプリは同じ TinyDb を共有します。 アプリがパッケージ化されると、その共有はなくなります。 ただし、開発中は、新しいアプリの作業を開始するたびに TinyDb をクリアするように注意する必要があります。</p>
# Description: 
TimerIntervalPropertyDescriptions=タイマー イベント間の間隔 (ミリ秒)
# Description: 
TimerIntervalProperties=タイマー間隔
# Description: 
TimerEvents=タイマー
# Description: 
TimerEventDescriptions=タイマーイベントは、タイマーがオフになったときに実行されます。
# Description: 
TimerEnabledPropertyDescriptions=true の場合にタイマーを発生させます
# Description: 
TimerEnabledProperties=タイマー有効
# Description: 
TimerAlwaysFiresPropertyDescriptions=true の場合、アプリケーションが画面に表示されていない場合でも起動します
# Description: 
TimerAlwaysFiresProperties=タイマー常時起動
# Description: 
TimeoutPropertyDescriptions=Web要求が応答を待機してからあきらめるミリ秒数です。0 に設定すると、要求が待機する時間に制限はありません。
# Description: 
TimeoutProperties=タイムアウト
# Description: 
TimedOutEvents=タイムアウト
# Description: 
TimedOutEventDescriptions=リクエストが終了したことを示すイベントです。
# Description: 
TimePicker__WidthPropertyDescriptions=FilePicker （ファイルピッカー）の水平幅をピクセル単位で指定します。
# Description: 
TimePicker__WidthPercentPropertyDescriptions=FilePicker（ファイルピッカー） の水平幅を画面の幅のパーセンテージとして指定します。
# Description: 
TimePicker__VisiblePropertyDescriptions=FilePicker（ファイルピッカー） を画面上に表示するかどうかを指定します。 FilePicker が表示されている場合は値が true、非表示の場合は false です。
# Description: 
TimePicker__TouchUpEventDescriptions=FilePicker（ファイルピッカー） がリリースされたことを示します。
# Description: 
TimePicker__TouchDownEventDescriptions=FilePicker（ファイルピッカー） が押されたことを示します。
# Description: 
TimePicker__TextPropertyDescriptions=FilePicker（ファイルピッカー） に表示するテキスト。
# Description: 
TimePicker__TextColorPropertyDescriptions=ボタンテキストの色。
# Description: 
TimePicker__TextAlignmentPropertyDescriptions=左、中央、または右。
# Description: 
TimePicker__ShowFeedbackPropertyDescriptions=背景として画像を持つタイムピッカーに対して視覚的なフィードバックを表示するかどうかを指定します。
# Description: 
TimePicker__ShapePropertyDescriptions=''TimePicker（タイムピッカー）'' のスタイルを返します。
# Description: 
TimePicker__LostFocusEventDescriptions=カーソルがタイムピッカーから離れ、クリックできなくなったことを示します。
# Description: 
TimePicker__LaunchPickerMethodDescriptions=タイプピッカーダイアログを起動します。
# Description: 
TimePicker__InstantPropertyDescriptions=タイムピッカーを使用して最後に設定された時刻のインスタント
# Description: 
TimePicker__ImagePropertyDescriptions=ボタンに表示する画像。
# Description: 
TimePicker__HeightPropertyDescriptions=タイムピッカーの垂直方向の高さをピクセル単位で指定します。
# Description: 
TimePicker__HeightPercentPropertyDescriptions=タイムピッカーの垂直方向の高さを、画面の高さに対する割合で指定します。
# Description: 
TimePicker__GotFocusEventDescriptions=カーソルが タイムピッカー上に移動したため、クリックできるようになったことを示します。
# Description: 
TimePicker__FontTypefacePropertyDescriptions=タイムぴヵーテキストのフォントファミリー。
# Description: 
TimePicker__FontSizePropertyDescriptions=タイムピッカーテキストのポイント サイズ。
# Description: 
TimePicker__FontItalicPropertyDescriptions=設定すると、タイムピッカーのテキストが斜体で表示されます。
# Description: 
TimePicker__FontBoldPropertyDescriptions=設定すると、タイムピッカーのテキストが太字で表示されます。
# Description: 
SpreadsheetUseHeadersProperties=スプレッドシート使用ヘッダー
# Description: 
SpreadsheetIDPropertyDescriptions=編集したいGoogle SheetsファイルのIDです。スプレッドシートIDはGoogle SheetsファイルのURLに記載されています。
# Description: 
SpreadsheetIDProperties=スプレッドシートID
# Description: 
SpreadsheetHelpStringComponentPallette=スプレッドシートは、Google Sheets API を使用してスプレッドシート ドキュメントのデータを保存および受信するための非表示コンポーネントです。 <p>このコンポーネントを利用するには、まず Google 開発者アカウントを持っている必要があります。次に、その Google デベロッパー アカウントで新しいプロジェクトを作成し、そのプロジェクトで Google Sheets API を有効にして、最後に Sheets API のサービス アカウントを作成する必要があります。</p><p>サービス アカウントの作成方法についての説明。スプレッドシート コンポーネントの使用に関するその他の関連情報の入手先については、<a href=''/reference/other/googlesheets-api-setup.html''>こちら</a>をご覧ください。</p>
# Description: 
Spinner__WidthPropertyDescriptions=Spinnerの横幅をピクセル単位で指定します。
# Description: 
Spinner__WidthPercentPropertyDescriptions=Spinner の横幅をスクリーンの横幅に対するパーセンテージで指定します。
# Description: 
Spinner__VisiblePropertyDescriptions=Spinnerを画面に表示するかどうかを指定します。Spinnerが表示されている場合はtrue、非表示の場合はfalseとなります。
# Description: 
Spinner__SelectionPropertyDescriptions=スピナーで現在選択されているアイテムを返します
# Description: 
Spinner__SelectionIndexPropertyDescriptions=現在選択されている項目のインデックスで、1から始まります。
# Description: 
Spinner__HeightPropertyDescriptions=スピナーの垂直方向の高さをピクセル単位で指定します。
# Description: 
Spinner__HeightPercentPropertyDescriptions=スピナーの垂直方向の高さを、スクリーンの高さに対するパーセンテージで指定します。
# Description: 
Spinner__ElementsPropertyDescriptions=選択するテキスト要素のリストを返します。
# Description: 
ShowZoomPropertyDescriptions=ズームコントロールを表示するかどうかを指定します。
# Description: 
ShowZoomProperties=ズームを表示
# Description: 
ShowUserPropertyDescriptions=現在地を示すアイコンの表示・非表示を切り替えます
# Description: 
ShowUserProperties=ユーザーを表示
# Description: 
ShowTextDialogMethods=テキストダイアログを表示
# Description: 
ShowTextDialogMethodDescriptions=ユーザーがテキストを入力できるダイアログ ボックスを表示します。その後、AfterTextInput（テキスト入力後）イベントが発生します。 cancelable（キャンセル可能）が true の場合、追加の [CANCEL] ボタンが表示されます。テキストを入力すると、AfterTextInput（テキスト入力後）イベントが発生します。 AfterTextInput への「応答」パラメータは入力されたテキスト、または CANCEL（キャンセル）ボタンが押された場合は"Cancel（キャンセル）"になります。
# Description: 
ShowStatusBarPropertyDescriptions=ステータスバーは、画面上の一番上のバーです。このプロパティは、ステータスバーが表示されているかどうかを報告します。
# Description: 
ShowStatusBarProperties=ステータスバーを表示
# Description: 
ShowShadowPropertyDescriptions=マーカーの影を表示するかどうかを取得します。
# Description: 
ShowScalePropertyDescriptions=のスケール・オーバーレイを表示または非表示にします
# Description: 
ShowScaleProperties=スケールを表示
# Description: 
ShowProgressDialogMethodDescriptions=オプションのタイトルとメッセージを持つダイアログ・ボックスを表示します（不要な場合は空の文字列を使用してください）。このダイアログ ボックスには、プログラムが動作中であることを示す回転するアーティファクトが含まれます。このダイアログボックスはユーザがキャンセルすることはできませんが、App Inventor プログラムが DismissProgressDialog（進行ダイアログの解除）ブロックを使用して解除する必要があります。
# Description: 
ShowProgressDialogMethods=進行ダイアログを表示
# Description: 
ShowPasswordDialogMethods=パスワードダイアログの表示
# Description: 
ShowPasswordDialogMethodDescriptions=ユーザーがパスワードを入力できるダイアログボックスを表示します（入力はマスクされます）。キャンセル可能がtrueの場合、CANCEL（キャンセル）ボタンが追加されます。パスワードを入力すると、AfterTextInput（テキスト入力後）イベントが発生します。AfterTextInputの "response （レスポンス）"パラメータは入力されたパスワード、またはCANCELボタンが押された場合は "Cancel（キャンセル） "となります。
# Description: 
ShowMessageDialogMethods=メッセージダイアログの表示
# Description: 
ShowMessageDialogMethodDescriptions=アラートダイアログを表示し、アラートを解除するボタンを1つ表示します。
# Description: 
ShowLoadingDialogPropertyDescriptions=ロードダイアログの可視性を設定します。
# Description: 
ShowLoadingDialogProperties=ロードダイアログの表示
# Description: 
ShowListsAsJsonPropertyDescriptions=false の場合、リストは Lisp 表記を使用して文字列に変換されます。つまり、スペースで区切られた記号として (a 1 b2 (c d) など) に変換されます。true の場合、リストは Json または Python のように表示されます。例: ["a", 1 、"b"、2、["c"、"d"]]。このプロパティは画面 1 にのみ表示され、画面 1 の値によってすべての画面の動作が決まります。このプロパティのデフォルトは "true" で、アプリがLisp 構文が必要な場合、Inventor プログラマはこれを明示的に「false」に設定する必要があります。App Inventor の古いバージョンでは、この設定はデフォルトで false に設定されていました。古いプロジェクトは、このデフォルト設定の更新の影響を受けませんでした。
# Description: 
ShowListsAsJsonProperties=Jsonとしてリストを表示
# Description: 
ShowInfoboxMethods=インフォボックスの表示
# Description: 
ShowFilterBarProperties=フィルターバーを表示
# Description: 
ShowFeedbackProperties=フィードバックを表示
# Description: 
ShowCompassPropertyDescriptions=地図上にコンパスを表示します。デバイスがデジタルコンパスを提供している場合、方向変更はコンパスのアイコンを回転させるために使用されます。
# Description: 
ShowCompassProperties=コンパスを表示
# Description: 
ShowChooseDialogMethods=選択ダイアログを表示
# Description: 
ShowChooseDialogMethodDescriptions=2つのボタンを持つダイアログボックスを表示します。cancelable（キャンセル可能）がtrueの場合、さらにCANCEL（キャンセル）ボタンが追加されます。ボタンを押すと、AfterChoosing（選択後）イベントが発生します。AfterChoosingの "choice （チョイス）"パラメータは、押されたボタンのテキストになり、CANCELボタンが押された場合は "Cancel（キャンセル） "になります。
# Description: 
ShowAlertMethods=アラートを表示
# Description: 
ShowAlertMethodDescriptions=一時的な通知を表示します。
# Description: 
SharingHelpStringComponentPallette=共有は、アプリとデバイスにインストールされている他のアプリの間でファイルやメッセージを共有できるようにする非表示のコンポーネントです。このコンポーネントは、提供された情報を処理できるインストール済みアプリのリストを表示し、ユーザーがコンテンツを共有するアプリ (メール アプリ、ソーシャル ネットワーク アプリ、テキスト メッセージ アプリなど) を選択できるようにします。 <br>ファイル パスは、カメラや ImagePicker などの他のコンポーネントから直接取得できますが、ストレージから読み取るように直接指定することもできます。デバイスによってストレージの扱いが異なることに注意してください。そのため、たとえば、フォルダ <code>Appinventor/assets</code> に arrow.gif というファイルがある場合、次のようなことを試してみてください。 ><code>"file:///sdcard/Appinventor/assets/arrow.gif"</code></li> または <li><code>"/storage/Appinventor/assets/arrow.gif"</code ></li></ul>
# Description: 
ShareMessageMethods=共有メッセージ
# Description: 
ShareMessageMethodDescriptions=利用可能なアプリのリストを表示し、ユーザーがリストから1つを選択できるようにすることにより、携帯電話にインストールされている任意の可能なアプリケーションを介してメッセージを共有します。選択したアプリは、メッセージが挿入された状態で開きます。
# Description: 
ShareFileWithMessageMethods=メッセージ付き共有ファイル
# Description: 
ShareFileWithMessageMethodDescriptions=利用可能なアプリのリストを表示し、ユーザーがリストから1つを選択できるようにすることにより、携帯電話にインストールされている任意の可能なアプリケーションを介してファイルとメッセージの両方を共有します。選択したアプリは、ファイルとメッセージが挿入された状態で開きます。
# Description: 
ShareFileMethods=共有ファイル
# Description: 
ShareFileMethodDescriptions=利用可能なアプリのリストを表示し、ユーザーがリストから1つを選択できるようにすることにより、携帯電話にインストールされている任意の可能なアプリケーションを介してファイルを共有します。選択したアプリは、ファイルが挿入された状態で開きます。
# Description: 
ShapeProperties=形状
# Description: 
ShakingEvents=揺れる
# Description: 
ShakingEventDescriptions=デバイスが揺れ始めたか、揺れ続けていることをします。
# Description: 
SetTimeToDisplayMethods=表示する時間の設定
# Description: 
SetTimeToDisplayMethodDescriptions=タイムピッカーポップアップに表示する時間を設定します。デフォルトでは現在時刻が表示されます。
# Description: 
SetTimeToDisplayFromInstantMethods=インスタントからの表示時間の設定
# Description: 
SetTimeToDisplayFromInstantMethodDescriptions=タイムピッカーダイアログに表示するインスタントからの時間を設定します。デフォルトでは現在時刻が表示されます。
# Description: 
SetStatusMethods=ステータス設定
# Description: 
SetReflectedModeMethods=反射モード設定
# Description: 
SetReflectedModeMethodDescriptions=センサーが反射光で光量を読み取るようにします。
# Description: 
SetRateModeMethods=レートモードの設定
# Description: 
SetRateModeMethodDescriptions=センサーの角速度を測定します。
# Description: 
SetRangeMethods=範囲の設定
# Description: 
SetRangeMethodDescriptions=Y軸の範囲の最小値と最大値を設定します。
# Description: 
SetPopupMethods=ポップアップの設定
# Description: 
SetPopupMethodDescriptions=新しいレガシー接続に使用されるポップアップページの内容を設定します
# Description: 
SetOutputStateMethods=出力状態を設定します
# Description: 
SetOutputStateMethodDescriptions=ロボットのモーターの出力状態を設定します。
# Description: 
SetLocationMethods=ロケーション設定
# Description: 
SetLeaderMethods=リーダーを設定
# Description: 
SetLeaderMethodDescriptions=プレイヤーIDにリーダーを設定するようサーバーに指示します。現在のリーダーだけが、新しいリーダーを設定することができます。
# Description: 
SetInstanceMethods=インスタンスの設定
# Description: 
SetInstanceMethodDescriptions=インスタンスIDを設定し、指定されたインスタンスに参加します。
# Description: 
SetInputModeMethods=入力モードの設定
# Description: 
SetInputModeMethodDescriptions=ロボットの入力センサーを設定します。
# Description: 
SetInchUnitMethods=インチ単位の設定
# Description: 
SetInchUnitMethodDescriptions=インチ単位で距離を測ります。
# Description: 
SetDomainMethods=ドメイン設定
# Description: 
SetDomainMethodDescriptions=X軸の領域の最小値と最大値を設定します。
# Description: 
SetDateToDisplayMethods=表示する日付の設定
# Description: 
SetDateToDisplayMethodDescriptions=月フィールドに有効な値は1～12、日フィールドに有効な値は1～31です。
# Description: 
SetDateToDisplayFromInstantMethods=インスタントから表示する日付の設定
# Description: 
SetDateToDisplayFromInstantMethodDescriptions=日付ピッカーが開いたときに表示され、その時点からの日付を設定できます。
# Description: 
SetColorModeMethods=カラーモードを設定
# Description: 
SetColorModeMethodDescriptions=色検出モードに入ります。
# Description: 
SetCmUnitMethods=cm単位を設定
# Description: 
SetCmUnitMethodDescriptions=センチメートル単位で距離を測ります。
# Description: 
SetCenterMethods=中心を設定
# Description: 
SetCenterMethodDescriptions=指定された緯度と経度の中心になるように矩形を移動します。ただし、矩形の幅と高さは、中心から端までの長さを維持するようにします。
# Description: 
SetBrickNameMethods=ブリック名の設定
# Description: 
SetBrickNameMethodDescriptions=ロボットのブリック名を設定します。
# Description: 
SetBackgroundPixelColorMethods=背景のピクセルカラーを設定する
# Description: 
SetBackgroundPixelColorMethodDescriptions=指定した点の色を設定します。DrawPoint（ドローポイント）との違いは、引数に色を指定できる点です。
# Description: 
SetAngleModeMethods=アングルモードの設定
# Description: 
SetAngleModeMethodDescriptions=センサーの向きを測定します。
# Description: 
SetAmbientModeMethods=アンビエントモードの設定
# Description: 
SetAmbientModeMethodDescriptions=センサーが反射光なしで光量を読み取るようにします。
# Description: 
ServiceUrlPropertyDescriptions=ゲームサーバーのURL。
# Description: 
ServiceUrlProperties=サービスUrl
# Description: 
ServiceURLProperties=サービスURL
# Description: 
ServiceAccountEmailPropertyDescriptions=サービス・アカウント認証が使用されている場合のサービス・アカウントの電子メールアドレスです。
# Description: 
ServiceAccountEmailProperties=サービスアカウントEメール
# Description: 
ServerCommandSuccessEvents=サーバーコマンド成功
# Description: 
ServerCommandSuccessEventDescriptions=サーバー・コマンドが正常に返されたことを示します。
# Description: 
ServerCommandMethods=サーバーコマンド
# Description: 
ServerCommandMethodDescriptions=指定されたコマンドをゲームサーバーに送信します。
# Description: 
ServerCommandFailureEvents=サーバーコマンドの失敗
# Description: 
ServerCommandFailureEventDescriptions=サーバーコマンドが失敗したことを示します。
# Description: 
SerialHelpStringComponentPallette=Arduinoなどのデバイスに接続するためのシリアルコンポーネント
# Description: 
SensorValueChangedEvents=SensorValueChanged（センサー値変更）
# Description: 
SensorValueChangedEventEnabledPropertyDescriptions=センサーの値が変更されたときにSensorValueChanged（センサー値変更）イベントを発生させるかどうか。
# Description: 
SensorValueChangedEventEnabledProperties=センサー値変更イベント有効
# Description: 
SensorValueChangedEventDescriptions=その後、センサーの値が変化しました。
# Description: 
SensorPortPropertyDescriptions=センサーが接続されているセンサーポート。
# Description: 
SensorPortProperties=センサーポート
# Description: 
SensitivityPropertyDescriptions=加速度センサーの感度を表す数値です。選択肢は以下の通り： 1 = 弱い、2 = 中程度、3 = 強い。
# Description: 
SensitivityProperties=センシティブティ
# Description: 
SendTextMethods=テキストの送信
# Description: 
SendTextMethodDescriptions=接続したBluetooth機器にテキストを送信します。
# Description: 
SendQueryMethods=クエリの送信
# Description: 
SendQueryMethodDescriptions=Fusion Tables サーバーにクエリを送信します。
# Description: 
SendMessageMethods=メッセージの送信
# Description: 
SendMessageEvents=メッセージの送信
# Description: 
SendMessageDirectMethods=メッセージのダイレクト送信
# Description: 
SendMessageDirectMethodDescriptions=テキストメッセージを送信します。**このブロックを使用すると[危険なパーミッション](https://developer.android.com/guide/topics/permissions/overview#dangerous_permissions)が追加され、アプリがGoogle Playストアに提出された場合、追加の承認が必要になります。**
# Description: 
SendBytesMethods=送信バイト
# Description: 
SendBytesMethodDescriptions=接続されたBluetoothデバイスにバイト値のリストを送信します。
# Description: 
SendBallotMethods=投票の送信
# Description: 
SendBallotMethodDescriptions=記入済みの投票用紙を Web サービスに送信します。これは、プロパティ <code>UserId</code> と <code>UserChoice</code> がアプリケーションによって設定されるまで呼び出さないでください。
# Description: 
Send4ByteNumberMethods=4バイトナンバーを送信
# Description: 
Send4ByteNumberMethodDescriptions=接続されているBluetooth機器に4バイトの番号を送信します。
# Description: 
Send2ByteNumberMethods=2バイトナンバーを送信
# Description: 
Send2ByteNumberMethodDescriptions=接続されているBluetooth機器に2バイトの番号を送信します。
# Description: 
Send1ByteNumberMethods=1バイトナンバーを送信
# Description: 
Send1ByteNumberMethodDescriptions=接続されているBluetooth機器に1バイトの番号を送信します。
# Description: 
SelectionProperties=セレクション
# Description: 
SelectionIndexProperties=選択インデックス
# Description: 
SelectionDetailTextPropertyDescriptions=リストビューで選択されている行のセカンダリテキストを返します。
# Description: 
SelectionDetailTextProperties=選択詳細テキスト
# Description: 
SelectionColorPropertyDescriptions=アイテムが選択されたときの色。
# Description: 
SelectionColorProperties=セレクションカラー
# Description: 
SeekToMethods=シーク(seek)
# Description: 
SeekToMethodDescriptions=要求された時間（ミリ秒単位で指定）に動画をシーク(seek)します。動画が一時停止している場合、表示されているフレームはシークによって更新されません。このため、短い間隔で異なる時刻をシークしても、実際には異なるフレームに移動しないことがあります。
# Description: 
SecurePropertyDescriptions=Bluetooth v2.1以上のデバイスでサポートされているSSP（Simple Secure Pairing）を起動するかどうか。組み込みBluetoothデバイスで動作する場合、このプロパティをFalseに設定する必要がある場合があります。Android 2.0-2.2の場合、このプロパティ設定は無視されます。
# Description: 
SecureProperties=セキュリティ
# Description: 
SecondMethods=秒
# Description: 
SecondMethodDescriptions=インスタント（瞬間）から分(0-59)秒を返します。
# Description: 
SearchTwitterMethods=検索Twitter
# Description: 
SearchTwitterMethodDescriptions=<p><u>Requirements</u>: これは、<code>IsAuthorized</code> イベントが発生し、ユーザーがTwitterへのログインに成功したことを示した後にのみ呼び出す必要があります。</p>
# Description: 
SearchSuccessfulEvents=検索成功
# Description: 
SearchSuccessfulEventDescriptions=このイベントは、<code>SearchSuccessful</code> を通じてリクエストされた検索の結果が取得されたときに発生します。結果のリストは、<code>results</code> パラメーターまたは <code>Results</code> プロパティで確認できます。
# Description: 
SearchResultsPropertyDescriptions=このプロパティは最初は空ですが、プログラムの実行後に検索結果のリストに設定されます: <ol><li><code>SearchTwitter</code> メソッドを呼び出します。</li> <li><code> を待ちます。 >SearchSuccessful</code> イベント。</li></ol>プロパティの値は、<code>SearchSuccessful</code> のパラメータと同じになります。 <code>SearchTwitter</code> を呼び出す前に <code>Authorize</code> メソッドを呼び出す必要はないことに注意してください。
# Description: 
SearchResultsProperties=検索結果
# Description: 
SdkLevelMethods=SDLレベル
# Description: 
SdkLevelMethodDescriptions=現在のAndroid SDKレベルを取得する
# Description: 
ScrollablePropertyDescriptions=チェックを入れると、画面上に垂直スクロールバーが表示され、アプリケーションの高さはデバイスの物理的な高さを超えることができます。チェックを外すと、アプリケーションの高さはデバイスの高さに制限されます。
# Description: 
ScrollableProperties=スクロール可能
# Description: 
Screen__WidthPropertyDescriptions=画面の幅（xサイズ）。
# Description: 
Screen__TitlePropertyDescriptions=タイトルバーに表示されるフォームのキャプション
# Description: 
Screen__HideKeyboardMethodDescriptions=画面上のソフトキーボードを非表示にします。
# Description: 
Screen__HeightPropertyDescriptions=画面の高さ（Yサイズ）。
# Description: 
Screen__ErrorOccurredEventDescriptions=エラーが発生したときに発生するイベントです。この条件が発生するのは一部のエラーだけです。これらのエラーに対しては、システムはデフォルトで通知を表示します。このイベントハンドラを使用して、デフォルトとは異なるエラー動作を指定することができます。
# Description: 
Screen__BackgroundImagePropertyDescriptions=画面の背景画像。
# Description: 
Screen__BackgroundColorPropertyDescriptions=背景カラープロパティのゲッターメソッド。
# Description: 
Screen__AlignVerticalPropertyDescriptions=アレンジメントの内容をどのように縦に並べるかを示す数字です。選択肢は以下の通り： 1 = 上端揃え、2 = 垂直中央揃え、3 = 下端揃え。垂直方向の整列は、画面がスクロール可能な場合には影響しません。
# Description: 
Screen__AlignHorizontalPropertyDescriptions=画面のコンテンツが水平方向にどのように配置されているかを示す数値です。選択肢は以下の通り： 1 = 左寄せ、3 = 中央寄せ、2 = 右寄せ。
# Description: 
ScreenOrientationPropertyDescriptions=テキスト値として指定される、要求された画面の向きです。一般的に使用される値は、風景、ポートレート、センサー、ユーザー、不特定です。設定可能な値の一覧は、ActivityInfo.Screen_OrientationのAndroid開発者向けドキュメントを参照してください。
# Description: 
ScreenOrientationProperties=画面の向き
# Description: 
ScreenOrientationChangedEvents=画面の向きを変更
# Description: 
ScreenOrientationChangedEventDescriptions=画面の向きが変わりました
# Description: 
ScreenHelpStringComponentPallette=プログラム内の他のすべてのコンポーネントを含む最上位コンポーネント
# Description: 
ScopePropertyDescriptions=読み込み元や保存ファイルなどの操作の現在のスコープを示します。
# Description: 
ScopeProperties=スコープ
# Description: 
ScalingPropertyDescriptions=このプロパティは、画像の高さまたは幅に応じて画像を拡大縮小する方法を決定します。比例拡大 (0) は、画像のアスペクト比を維持します。アスペクト比が変わっても、画像の領域に合わせます。
# Description: A property for scaling images
ScalingProperties=スケーリング
# Description: 
ScaleUnitsPropertyDescriptions=縮尺オーバーレイに使用する単位を指定します。1（デフォルト）ではメートル単位（km、m）が表示され、2ではインペリアル単位（mi、ft）が表示されます。
# Description: 
ScaleUnitsProperties=スケール単位
# Description: 
ScalePictureToFitPropertyDescriptions=イメージ（画像）ビューのサイズに合わせて画像のサイズを変更するかどうかを指定します。
# Description: 
ScalePictureToFitProperties=写真に合わせて拡大縮小する
# Description: 
SavedRecordingPropertyDescriptions=録音を保存するファイルへのパスを指定します。このプロパティが空の文字列の場合、記録を開始すると適切な場所にファイルが作成されます。プロパティが空の文字列でない場合は、拡張子 .3gp のファイル名を含む、既存のディレクトリ内のファイルへの完全なパスを指定する必要があります。
# Description: 
SavedRecordingProperties=保存記録
# Description: 
SaveResponsePropertyDescriptions=レスポンスをファイルに保存するかどうか。
# Description: 
SaveResponseProperties=レスポンスを保存
# Description: 
SaveMethods=保存
# Description: 
SaveFileMethods=保存ファイル
# Description: 
SaveFileMethodDescriptions=テキストをファイルに保存します。ファイル名がスラッシュ (/) で始まる場合、ファイルはSDカードに書き込まれます。たとえば、/myFile.txt に書き込むと、ファイルは /sdcard/myFile.txt に書き込まれます。ファイル名がスラッシュで始まらない場合、そのファイルはプログラムのプライベート・データ・ディレクトリに書き込まれます。AI Companion には特別な例外があり、デバッグを容易にするため、これらのファイルは /sdcard/AppInventor/data に書き込まれます。このブロックは、ファイルが既に存在する場合は上書きされることに注意してください。ファイルにコンテンツを追加する場合は、append ブロックを使用します。
# Description: 
SaveAsMethods=名前を付けて保存
# Description: 
SaveAsMethodDescriptions=ファイル名の末尾に.jpg、.jpeg、.pngのいずれかをつけ、ファイルタイプを決定します。
# Description: 
RunJavaScriptMethods=Javaスクリプトの実行
# Description: 
RunJavaScriptMethodDescriptions=現在のページでJavaScriptを実行します。
# Description: 
RowsProperties=列
# Description: 
RowPropertyDescriptions=行プロパティゲッターメソッドです。
# Description: 
RotationPropertyDescriptions=もしあれば、マップの回転を10進数で設定または取得します
# Description: 
RotationProperties=ローテーション
# Description: 
RotationAnglePropertyDescriptions=画像ピクチャが回転して見える角度を度単位で指定します。
# Description: 
RotationAngleProperties=回転角度
# Description: 
RotatesPropertyDescriptions=画像スプライトの向きに合わせて画像を回転させるかどうか。スプライトは中心点を中心に回転します。
# Description: 
RotatesProperties=回転
# Description: 
RotateSyncIndefinitelyMethods=シンクを無期限に回転させる
# Description: 
RotateSyncIndefinitelyMethodDescriptions=モーターを同じ速度で回転させ始めます。
# Description: 
RotateSyncInTachoCountsMethods=回転シンクロ回数
# Description: 
RotateSyncInTachoCountsMethodDescriptions=タコカウント数でモーターを同じ速度で回転させます。
# Description: 
RotateSyncInDurationMethods=回転シンクロ時間
# Description: 
RotateSyncInDurationMethodDescriptions=モーターを同じ速度で一定時間回転させます。
# Description: 
RotateSyncInDistanceMethods=回転シンクロ距離
# Description: 
RotateSyncInDistanceMethodDescriptions=cmの距離を同じ速度でモーターを回転させます。
# Description: 
RotateIndefinitelyMethods=無限に回転
# Description: 
RotateIndefinitelyMethodDescriptions=モーターを回し始めます。
# Description: 
RotateInTachoCountsMethods=回転数
# Description: 
RotateInTachoCountsMethodDescriptions=タコカウント数でモーターを回転させます。
# Description: 
RequestFriendTimelineMethodDescriptions=ユーザーのタイムラインにある最新の20件のメッセージを取得します。
# Description: 
RequestFollowersMethods=フォロワー申請
# Description: 
RequestFollowersMethodDescriptions=あなたをフォローしている人を把握する。
# Description: 
RequestFocusMethods=リクエストフォーカス
# Description: 
RequestDirectionsMethods=道順をリクエスト
# Description: 
RequestDirectionsMethodDescriptions=ルーティングサービスに道案内をリクエストします。
# Description: 
RequestDirectMessagesMethods=ダイレクトメッセージのリクエスト
# Description: 
RequestDirectMessagesMethodDescriptions=ログインしているユーザーに送信された最新の 20 件のダイレクト メッセージを要求します。メッセージが取得されると、システムは <code>DirectMessagesReceived</code> イベントを発生させ、<code>DirectMessages</code> プロパティをメッセージのリストに設定します。<p><u>要件</u> : これは、<code>IsAuthorized</code> イベントが発生し、ユーザーが Twitter に正常にログインしたことを示した後にのみ呼び出す必要があります。</p>
# Description: 
RequestBallotMethods=リクエスト投票
# Description: 
RequestBallotMethodDescriptions=プロパティ <code>ServiceURL</code> で指定された Web サービスに投票のリクエストを送信します。完了すると、<code>GotBallot</code>、<code>NoOpenPoll</code>、または <code>WebServiceError</code> のいずれかのイベントが発生します。
# Description: 
RemoveRowMethods=行の削除
# Description: 
RemoveRowMethodDescriptions=これは行を消去するのではなく、完全に削除します。
# Description: 
RemoveItemAtIndexMethods=インデックスのアイテムを削除
# Description: 
RemoveItemAtIndexMethodDescriptions=リストから指定されたインデックスの項目を削除します
# Description: 
RemoveFirstMethods=最初に削除
# Description: 
RemoveFirstMethodDescriptions=リストの最初の要素を返し、アトミックに削除します。2つのデバイスが同時にこの関数を使用した場合、一方が最初の要素を取得し、もう一方が2番目の要素を取得します。要素が利用可能になると、"FirstRemoved（最初に除去された） "イベントがトリガーされます。
# Description: 
RemoveFirstFromListMethods=リストから最初に削除
# Description: 
RemoveFirstFromListMethodDescriptions=リストの最初の要素を返し、それをアトミックに削除します。2つのデバイスが同時にこの関数を使用した場合、一方が最初の要素を取得し、もう一方が2番目の要素を取得します。要素が利用可能になると、"FirstRemoved（最初の削除）"イベントがトリガーされます。
# Description: 
RemoveEntryMethods=エントリーの削除
# Description: 
RemoveEntryMethodDescriptions=指定された x と y の値を持つエントリが存在する場合に、そのエントリを削除します。参照
# Description: 
RemoveDirectoryMethods=ディレクトリの削除
# Description: 
RemoveDirectoryMethodDescriptions=ファイルシステムからディレクトリを削除します。recursive（リカーシブ）が真の場合、すべてが削除される。recursive が false の場合は、ディレクトリのみが削除され、そのディレクトリが空の場合のみ削除されます。
# Description: 
RemoveDataSourceMethods=データソースの削除
# Description: 
RemoveDataSourceMethodDescriptions=チャートから現在関連付けられているデータソースコンポーネントのリンクを解除します。
# Description: 
RemoveColumnMethods=カラムの削除
# Description: 
RemoveColumnMethodDescriptions=これはカラムをクリアするのではなく、完全に削除します。
# Description: 
ReloadMethods=リロード
# Description: 
ReloadMethodDescriptions=現在のページを再読み込みします。
# Description: 
ReleasedEvents=リリース
# Description: 
ReleasedEventEnabledPropertyDescriptions=タッチセンサーが離されたときにリリースイベントを発生させるかどうか。
# Description: 
ReleasedEventEnabledProperties=リリース済みイベント有効
# Description: 
RegressionHelpStringComponentPallette=回帰モデルを含むコンポーネント
# Description: 
RefreshTimePropertyDescriptions=報告される測定値の変化の間の、ミリ秒単位の要求された最小時間です。Androidはこのリクエストに従うことを保証しません。このプロパティを設定しても、Gingerbread以前のデバイスには影響しません。
# Description: 
RefreshTimeProperties=リフレッシュタイム
# Description: 
RefreshMethods=リフレッシュ
# Description: 
RefreshMethodDescriptions=データの変更を反映するためにリストビューをリロードします。
# Description: 
RedisServerPropertyDescriptions=データの保存に使用するRedisサーバーです。DEFAULT "に設定すると、MITサーバーが使用されます。
# Description: 
RedisServerProperties=Redisサーバー
# Description: 
RedisPortPropertyDescriptions=使用するRedisサーバーポートです。デフォルトは6381です
# Description: 
RedisPortProperties=Redisポート
# Description: 
Rectangle__VisiblePropertyDescriptions=矩形を画面に表示するかどうかを指定します。コンポーネントが表示されている場合はtrue、非表示の場合はfalseとなります。
# Description: 
Rectangle__TypePropertyDescriptions=フィーチャのタイプを返します。長方形の場合、マップフィーチャです。矩形("Rectangle")を返します。
# Description: 
Rectangle__TitlePropertyDescriptions=ユーザーが矩形をクリックしたときに表示される情報ウィンドウに表示されるタイトル。
# Description: 
Rectangle__StrokeWidthPropertyDescriptions=矩形の輪郭を描くストロークの幅。
# Description: 
Rectangle__StrokeColorPropertyDescriptions=矩形の輪郭に使用するペイントカラー。
# Description: 
Rectangle__ShowInfoboxMethodDescriptions=矩形のインフォボックスを表示します。これは、有効化インフォボックスがfalseに設定されている場合でも、infoboxを表示します。
# Description: 
Rectangle__LongClickEventDescriptions=ユーザーが矩形を長押ししました。このイベントはDragable（ドラッグ可能）がfalseの場合のみ発生します。
# Description: 
Rectangle__FillColorPropertyDescriptions=矩形の塗りつぶしに使用するペイントの色。
# Description: 
Rectangle__EnableInfoboxPropertyDescriptions=ユーザーが矩形をタップしたときに、インフォウィンドウを表示するかどうかを設定します。
# Description: 
Rectangle__DraggablePropertyDescriptions=Draggable（ドラッグ可能）プロパティは、ユーザーが矩形を長押しして新しい場所にドラッグできるかどうかを設定するために使用します。
# Description: 
Rectangle__DragEventDescriptions=ユーザーが矩形をドラッグしました。
# Description: 
Rectangle__DistanceToPointMethodDescriptions=長方形と緯度経度点との距離をメートル単位で計算します。
# Description: 
Rectangle__DescriptionPropertyDescriptions=ユーザーが矩形をクリックしたときに表示される情報ウィンドウに表示される説明文です。
# Description: 
Rectangle__ClickEventDescriptions=ユーザーは矩形をクリックしました。
# Description: 
RectangleHelpStringComponentPallette=矩形は、東西南北の境界の緯度と経度が固定された多角形です。矩形の頂点を動かすと、それに応じて適切な辺が更新されます。
# Description: 
RecordVideoMethods=ビデオの録画
# Description: 
RecordVideoMethodDescriptions=ビデオを録画し、その後
# Description: 
ReceivingEnabledPropertyDescriptions=1 (オフ) に設定すると、メッセージは受信されません。 2 (FOREGROUND) または 3 (ALWAYS) に設定すると、コンポーネントは実行中にメッセージに応答します。アプリが実行されていない場合、2 (FOREGROUND) に設定するとメッセージは破棄されます。 3 (常に) に設定されており、アプリが実行されていない場合は、電話に通知が表示されます。通知を選択するとアプリが起動し、MessageReceived イベントが通知されます。アプリが休止状態のときに受信したメッセージはキューに入れられるため、アプリが復帰したときにいくつかの MessageReceived（メッセージ受信）イベントが表示される可能性があります。アプリ開発者として、ユーザーにこのプロパティを制御できるようにして、アプリのインストール時に携帯電話でテキスト メッセージを無視できるようにすることをお勧めします。
# Description: 
ReceivingEnabledProperties=受信有効
# Description: 
ReceiveUnsignedBytesMethods=符号なしバイトの受信
# Description: 
ReceiveUnsignedBytesMethodDescriptions=接続されたBluetoothデバイスから複数の符号なしバイト値を受信します。バイト数が0未満の場合、デリミタ・バイト値を受信するまで読み込みます。
# Description: 
ReceiveUnsigned4ByteNumberMethods=符号なし4バイト番号の受信
# Description: 
ReceiveUnsigned4ByteNumberMethodDescriptions=接続されたBluetoothデバイスから符号なし4バイト番号を受信します。
# Description: 
ReceiveUnsigned2ByteNumberMethods=符号なし 2バイト数を受信
# Description: 
ReceiveUnsigned2ByteNumberMethodDescriptions=接続されたBluetoothデバイスから符号なし2バイト番号を受信します。
# Description: 
ReceiveUnsigned1ByteNumberMethods=符号なし 1バイト数を受信
# Description: 
ReceiveUnsigned1ByteNumberMethodDescriptions=接続されたBluetoothデバイスから符号なし1バイト番号を受信します。
# Description: 
ReceiveTextMethods=テキストを受信
# Description: 
ReceiveTextMethodDescriptions=接続されているBluetoothデバイスからテキストを受信します。バイト数が0より小さい場合、区切りバイト値を受信するまで読み込みます。
# Description: 
ReceiveSignedBytesMethods=符号付きバイトの受信
# Description: 
ReceiveSignedBytesMethodDescriptions=接続されたBluetoothデバイスから複数の符号付きバイト値を受信します。バイト数が0未満の場合、デリミタ・バイト値を受信するまで読み込みます。
# Description: 
ReceiveSigned4ByteNumberMethods=符号付き4バイト数値の受信
# Description: 
ReceiveSigned4ByteNumberMethodDescriptions=接続されたBluetoothデバイスから符号付き4バイト番号を受信する。
# Description: 
ReceiveSigned2ByteNumberMethods=符号付き2バイト数値の受信
# Description: 
ReceiveSigned2ByteNumberMethodDescriptions=接続されたBluetoothデバイスから符号付き2バイト番号を受信します。
# Description: 
ReceiveSigned1ByteNumberMethods=符号付き1バイト数値の受信
# Description: 
ReceiveSigned1ByteNumberMethodDescriptions=接続されたBluetooth機器から符号付き1バイト番号を受信します。
# Description: 
ReadyEvents=準備完了
# Description: 
ReadyEventDescriptions=マップが初期化され、ユーザーとのインタラクションの準備が整いました。
# Description: 
ReadWithPartialFilterMethods=PartialFilter（パーシャルフィルター）で読む
# Description: 
ReadWithPartialFilterMethodDescriptions=指定したカラム番号に指定した値文字列が含まれる行について、 Google Sheet にフィルタをかけます。
# Description: 
ReadWithExactFilterMethods=正確なフィルターで読む
# Description: 
ReadWithExactFilterMethodDescriptions=指定した列番号が指定した値と一致する行を Google シートから探し出します。
# Description: 
ReadSheetMethods=シートを読む
# Description: 
ReadSheetMethodDescriptions=Google Sheetドキュメント全体を読み込み、GotSheetData（シートデータの取得）コールバックイベントをトリガーします。
# Description: 
ReadSerialMethods=シリアルを読む
# Description: 
ReadSerialMethodDescriptions=シリアルからデータを読み込む。
# Description: 
ReadRowMethods=行を読む
# Description: 
ReadRowMethodDescriptions=指定されたシート名のページで、このメソッドは指定されたrowNumber（行番号）の行を読み取り、GotRowData（行データの取得）コールバックイベントをトリガします。
# Description: 
ReadRangeMethods=読み取り範囲
# Description: 
ReadRangeMethodDescriptions=指定されたシート名のページで、指定された範囲のセルを読み取ります。完了すると、getRangeReference（レンジリファレンスを取得）をトリガーします。
# Description: 
ReadPermissionPropertyDescriptions=デザイナー専用のプロパティで、アプリ固有のディレクトリ以外のファイルストレージへの読み取りアクセスを有効にするために使用できます。
# Description: 
ReadPermissionProperties=読み取り許可
# Description: 
ReadOnlyPropertyDescriptions=テキストボックスが読み取り専用かどうか。デフォルトでは false です。
# Description: 
ReadOnlyProperties=読み取り専用
# Description: 
ReadModePropertyDescriptions=読み込みモードの場合はtrue、書き込みモードの場合はfalseを返します。
# Description: 
ReadModeProperties=読み取りモード
# Description: 
ReadFromMethods=読み込み元
# Description: 
ReadFromMethodDescriptions=ストレージ内のファイルからテキストを読み取ります。 SD カード上の特定のファイルから読み取るには、ファイル名の前に / を付けます。たとえば、/myFile.txt はファイル /sdcard/myFile.txt を読み取ります。アプリケーションにパッケージ化されたアセットを読み取るには (コンパニオンでも機能します)、ファイル名は // (2 つのスラッシュ) で始まります。ファイル名がスラッシュで始まらない場合、ファイルはアプリケーションのプライベート ストレージ (パッケージ化されたアプリの場合) から、およびコンパニオンの場合は /sdcard/AppInventor/data から読み取られます。
# Description: 
ReadFileMethods=ファイルを読む
# Description: 
ReadFileMethodDescriptions=データをロードするソースファイルを示します。ファイルのコンテンツの予期される形式は CSV または JSON です。SD カード上の特定のファイルから読み取るには、ファイル名の前に / を付けます。たとえば、/myFile.txt はファイル /sdcard/myFile.txt を読み取ります。アプリケーションにパッケージ化されたアセットを読み取るには (コンパニオンでも機能します)、ファイル名は // (2 つのスラッシュ) で始まります。ファイル名がスラッシュで始まらない場合、ファイルはアプリケーションのプライベート ストレージ (パッケージ化されたアプリの場合) から、およびコンパニオンの場合は /sdcard/AppInventor/data から読み取られます。読み取りの結果は、行、列、および列名に保存されます。コンポーネントのプロパティです。
# Description: 
ReadColumnMethods=カラムを読む
# Description: 
ReadColumnMethodDescriptions=指定されたシート名のページで、指定されたインデックスのカラムを読み取り、GotColumnData（カラムデータ）コールバック・イベントをトリガーします。
# Description: 
ReadCellMethods=セルを読む
# Description: 
ReadCellMethodDescriptions=指定されたシート名のページで、指定されたセルリファレンスのセルを読み取り、GotCellData（セルデータ取得）コールバック・イベントをトリガーします。
# Description: 
RadiusProperties=半径
# Description: 
QueryPropertyDescriptions=Fusion Tables API に送信するクエリーです。 <p>法的なクエリの形式と例については、\n<a href="https://developers.google.com/fusiontables/docs/v2/getting_started" target="_blank">\nFusion Tables API v2.0 リファレンス マニュアルを参照してください。 /a>.</p> <p>クエリの UTF エンコードについて心配する必要はないことに注意してください。ただし、リファレンス マニュアルで説明されている構文に従っていることを確認する必要があります。つまり、列名の大文字化などが重要であり、列名にスペースが含まれる場合は一重引用符を使用する必要があります。</p >
# Description: 
QueryProperties=お問い合わせ
# Description: 
PutTextWithEncodingMethods=テキストをエンコードして置く
# Description: 
PutTextWithEncodingMethodDescriptions=URLプロパティと指定されたテキストを使用して HTTP PUT リクエストを実行します。<br>テキストの文字は、指定されたエンコードを使用してエンコードされます。<br>SaveResponse（レスポンス保存）プロパティが true の場合、応答はファイルと GotFile（ファイル取得）に保存されます。イベントがトリガーされます。 ResponseFileName（レスポンスファイル名）プロパティを使用してファイルの名前を指定できます。<br>SaveResponse（レスポンスを保存）プロパティが false の場合、GotText（テキスト取得）イベントがトリガーされます。
# Description: 
PutTextMethods=テキストを入れる
# Description: 
PutTextMethodDescriptions=URLプロパティと指定されたテキストを使用して HTTP PUT リクエストを実行します。<br>テキストの文字は UTF-8 エンコードを使用してエンコードされます。<br>SaveResponse（レスポンス保存）プロパティが true の場合、応答はファイルに保存され、 GotFile（ファイル取得）イベントがトリガーされます。 responseFileName（レスポンスファイル名）プロパティを使用して、ファイルの名前を指定できます。<br>SaveResponse（レスポンス保存）プロパティが false の場合、GotText（テキスト取得）イベントがトリガーされます。
# Description: 
PutFileMethods=ファイルを入れる
# Description: 
PutFileMethodDescriptions=URLプロパティと指定されたファイルのデータを使用して HTTP PUT リクエストを実行します。<br>SaveResponse（レスポンス保存）プロパティが true の場合、応答はファイルに保存され、GotFile（ファイル取得）イベントがトリガーされます。 ResponseFileName（レスポンスファイル名）プロパティを使用してファイルの名前を指定できます。<br>SaveResponse（レスポンス保存）プロパティが false の場合、GotText（テキスト取得）イベントがトリガーされます。
# Description: 
PublicInstancesPropertyDescriptions=パブリックとマークされたゲームインスタンスのセットです。現在の値が返されるようにするには、まず
# Description: 
PublicInstancesProperties=パブリックインスタンス
# Description: 
ProximitySensor__MaximumRangePropertyDescriptions=デバイスの ProximitySensor（接近センサー） の最大範囲を報告します
# Description: 
ProximitySensor__EnabledPropertyDescriptions=trueの場合、センサーはイベントを生成します。そうでなければ、イベントは生成されません。
# Description: 
ProximitySensor__DistancePropertyDescriptions=オブジェクトからデバイスまでの距離を返します
# Description: 
ProximitySensor__AvailablePropertyDescriptions=デバイスに近接センサーがあるかどうかを報告します。
# Description: 
ProximitySensorHelpStringComponentPallette=<p>デバイスの表示画面に対する物体の距離を cm 単位で測定できる目に見えないコンポーネントです。このセンサーは通常、ハンドセットが人の耳に当てられているかどうかを判断するために使用されます。つまり、オブジェクトがデバイスからどのくらい離れているかを判断できます。多くのデバイスは絶対距離を cm 単位で返しますが、近い値と遠い値のみを返すデバイスもあります。この場合、センサーは通常、遠い状態では最大範囲値を報告し、近い状態ではそれより小さい値を報告します。</p>
# Description: 
ProximityChangedPropertiesProperties=プロキシミティ変更プロパティ
# Description: 
ProximityChangedMethods=プロキシミティが変更
# Description: 
ProximityChangedEvents=プロキシミティが変更
# Description: 
ProximityChangedEventDescriptions=対象物から装置までの距離（cm）が変化したときにトリガーされます。
# Description: 
ProviderPropertyDescriptions=使用するプロバイダー名を設定します。現在サポートされているプロバイダのリストについては、https://appinv.us/chatbot を参照してください。
# Description: 
ProviderProperties=プロバイダー
# Description: 
ProviderNamePropertyDescriptions=位置情報の提供元を示します。プロバイダーがない場合、文字列「NO PROVIDER」が返されます。これは主にデバッグに役立ちます。
# Description: 
ProviderNameProperties=プロバイダー名
# Description: 
ProviderLockedPropertyDescriptions=デバイスがサービスプロバイダを変更することはありません。現在のプロバイダが適切な位置情報を提供できない場合、デバイスがサービス プロバイダを変更することは可能です。`プロバイダーロック`はブール値です。trueに設定します
# Description: 
ProviderLockedProperties=プロバイダーロック
# Description: 
PromptforPermissionPropertyDescriptions=True の場合、ウェブビューのユーザーにジオロケーション API へのアクセス許可を求めるプロンプトを表示します。False の場合、許可されているとみなします。
# Description: 
PromptforPermissionProperties=許可申請
# Description: 
PromptPropertyDescriptions=スピナーウィンドウの現在のタイトルのテキスト
# Description: 
PromptProperties=プロンプト
# Description: 
ProjectIDPropertyDescriptions=このクラウドDBプロジェクトのプロジェクトIDを取得します。
# Description: 
ProjectIDProperties=プロジェクトID
# Description: 
ProjectBucketPropertyDescriptions=このファイヤーベースDB のプロジェクトバケットを設定します。
# Description: 
ProjectBucketProperties=プロジェクトバケット
# Description: 
ProgressBarFor=プログレスバー
# Description: 
PrintSerialMethods=プリントシリアル
# Description: 
PrintSerialMethodDescriptions=与えられたデータをシリアルに書き込み、最後に改行します。
# Description: 
PrimaryColorPropertyDescriptions=これは、アクションバーなどのマテリアル UI要素に使用される原色です。
# Description: 
PrimaryColorProperties=原色
# Description: 
PrimaryColorDarkPropertyDescriptions=これは、マテリアルUIの暗い要素に使用される原色です。
# Description: 
PrimaryColorDarkProperties=原色ダーク
# Description: 
PressedEvents=押された
# Description: 
PressedEventEnabledProperties=押されたイベント有効
# Description: 
PostTextWithEncodingMethods=エンコード付きポストテキスト
# Description: 
PostTextWithEncodingMethodDescriptions=SaveResponse（レスポンスの保存）プロパティが True の場合、応答はファイルに保存され、GotFile（ファイルの取得）イベントがトリガされます。ResponseFileName（レスポンスファイル名）プロパティを使用して、ファイル名を指定できます。SaveResponse（レスポンスの保存）プロパティが False の場合、GotText（テキストの取得）イベントがトリガされます。
# Description: 
PostTextMethods=ポストテキスト
# Description: 
PostTextMethodDescriptions=SaveResponse（レスポンスの保存）プロパティがtrueの場合、応答はファイルに保存され、GotFile（ファイルの取得）イベントがトリガされます。responseFileName（レスポンスファイル名）プロパティを使用して、ファイル名を指定できます。SaveResponse（レスポンスの保存）プロパティがfalseの場合、GotText（テキストの取得）イベントがトリガされます。
# Description: 
PostMediaMethods=ポストメディア
# Description: 
PostMediaMethodDescriptions=指定されたメディアファイルを保存するようWebサービスに依頼します。
# Description: 
PostFileMethods=ポストファイル
# Description: 
PostFileMethodDescriptions=SaveResponse（レスポンスの保存）プロパティが True の場合、応答はファイルに保存され、GotFile（ファイルの取得）イベントがトリガされます。ResponseFileName（レスポンスファイル名）プロパティを使用して、ファイル名を指定できます。SaveResponse（レスポンス保存）プロパティが False の場合、GotText（テキスト取得）イベントがトリガされます。
# Description: 
PositionChangedEvents=位置変更
# Description: 
PositionChangedEventDescriptions=slider thumb（スライダーサム）の位置が変化したことを示します。
# Description: 
Polygon__VisiblePropertyDescriptions=ポリゴンを画面に表示するかどうかを指定します。表示されている場合はtrue、非表示の場合はfalseとなります。
# Description: 
Polygon__TypePropertyDescriptions=フィーチャのタイプを返します。ポリゴンの場合、MapFeature（マップフィーチャ）です。ポリゴン ("Polygon")を返します。
# Description: 
Polygon__TitlePropertyDescriptions=ポリゴンをクリックしたときに表示される情報ウィンドウに表示されるタイトル。
# Description: 
Polygon__StrokeWidthPropertyDescriptions=ポリゴンの輪郭を描くストロークの幅。
# Description: 
Polygon__StrokeColorPropertyDescriptions=ポリゴンの輪郭に使用するペイントカラー。
# Description: 
Polygon__ShowInfoboxMethodDescriptions=ポリゴンのインフォボックスを表示します。有効化インフォボックスが false に設定されている場合でも、インフォボックスを表示します。
# Description: 
Polygon__PointsPropertyDescriptions=`ポリゴン`の描画に使用する点を指定しまう。Point は `[[lat1, long1], [lat2, long2], ...]` のように緯度と経度の値を含むリストとして指定します。
# Description: 
Polygon__PointsFromStringPropertyDescriptions=座標のリストから多角形を作成します。
# Description: 
Polygon__LongClickEventDescriptions=ユーザーがポリゴンを長押ししました。このイベントは Draggable（ドラッグ可能）が false の場合のみ発生します。
# Description: 
Polygon__FillColorPropertyDescriptions=ポリゴンの塗りつぶしに使用するペイントカラー。
# Description: 
Polygon__EnableInfoboxPropertyDescriptions=ユーザーがポリゴンをタップしたときに、インフォボックスウィンドウを表示するかどうかを設定します。
# Description: 
Polygon__DraggablePropertyDescriptions=Draggable（ドラッグ可能）プロパティは、ユーザーがポリゴンを長押しして新しい場所にドラッグできるかどうかを設定するために使用されます。
# Description: 
Polygon__DragEventDescriptions=ユーザーがポリゴンをドラッグしました。
# Description: 
Polygon__DistanceToPointMethodDescriptions=ポリゴンと緯度経度点間の距離をメートル単位で計算します。
# Description: 
Polygon__DescriptionPropertyDescriptions=ポリゴンをクリックしたときに表示される情報ウィンドウに表示される説明。
# Description: 
Polygon__ClickEventDescriptions=ユーザーはポリゴンをクリックしました。
# Description: 
PolygonHelpStringComponentPallette=ポリゴンは地図上の任意の2次元領域を囲みます。多角形は、キャンパス、都市、国などの周囲を描くのに使うことができます。ポリゴンは基本的な三角形から始まります。多角形の中点を辺から離れるようにドラッグすると、新しい頂点を作成できます。頂点をクリックするとその頂点は削除されますが、常に最低3つの頂点が存在する必要があります。
# Description: 
PollingRatePropertyDescriptions=チャートデータコンポーネントのデータソースとしてBluetoothクライアントを使用する場合のポーリングレート（ミリ秒）です。最小値は1です。
# Description: 
PollingRateProperties=投票率
# Description: 
PointsProperties=ポイント
# Description: 
PointsFromStringProperties=文字列からのポイント
# Description: 
PointTowardsMethods=Point Towards
# Description: 
Spinner__ElementsFromStringPropertyDescriptions=カンマ区切りの文字列で渡された要素をスピナーリストに設定します
# Description: 
SpinnerHelpStringComponentPallette=<p>要素のリストを含むポップアップを表示するスピナー コンポーネントです。これらの要素は、<code>ElementsFromString</code> プロパティを文字列で区切られた連結 (<em>選択肢 1、選択肢 2、選択肢 3</em> など) に設定することによって、デザイナーまたはブロック エディターで設定できます。ブロックエディターで <code>Elements</code> プロパティをリストに設定します。スピナーは、最初の項目がすでに選択された状態で作成されます。したがって、これを選択しても After Picking イベントは生成されません。したがって、最初のスピナー項目を「下から選択...」のような非選択項目にすると便利です。 </p>
# Description: 
SpeedProperties=スピード
# Description: 
SpeechRecognizer__StopMethodDescriptions=音声認識装置が自動的に停止できない場合に、音声の聴取を強制的に停止するための関数です。この関数は
# Description: 
SpeechRecognizer__ResultPropertyDescriptions=認識装置が最後に生成したテキストを返します。
# Description: 
SpeechRecognizer__LanguagePropertyDescriptions=音声認識に使用する言語を指定します。空の文字列(デフォルト)は、システムのデフォルト言語を使用します。言語は、[language tag](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)と、enやes-MXなどのオプションの地域サフィックスを使用して指定します。サポートされる言語はデバイスによって異なります。
# Description: 
SpeechRecognizerHelpStringComponentPallette=音声認識を使って音声からテキストに変換するコンポーネント
# Description: 
SpeechRatePropertyDescriptions=TextToSpeech（テキスト読み上げ）のSpeechRate（音声レート）を設定します。値は0から2の間で、値が小さいほどピッチが遅くなり、値が大きいほどピッチが速くなります。
# Description: 
SpeechRateProperties=音声レート
# Description: 
SpeakMethods=話す
# Description: 
SpeakMethodDescriptions=与えられたメッセージを話します。
# Description: 
SouthLatitudePropertyDescriptions=長方形の南端を、赤道から北に10進法で示します。
# Description: 
SouthLatitudeProperties=南緯
# Description: 
SourceProperties=ソース
# Description: 
SourceFilePropertyDescriptions=データを解析するソース・ファイルを設定し、そのファイルを非同期に解析します。結果は
# Description: 
SourceFileProperties=ソースファイル
# Description: 
Sound__VibrateMethodDescriptions=指定したミリ秒数だけ振動させます。
# Description: 
Sound__StopMethodDescriptions=再生中の場合は再生を停止します。
# Description: 
Sound__SourcePropertyDescriptions=サウンドファイルの名前です。特定のフォーマットにのみ対応しています。http://developer.android.com/guide/appendix/media-formats.html を参照してください。
# Description: 
Sound__ResumeMethodDescriptions=一時停止後、サウンドの再生を再開します。
# Description: 
Sound__PauseMethodDescriptions=サウンドを再生中の場合、再生を一時停止します。
# Description: 
Sound__MinimumIntervalPropertyDescriptions=サウンド間の最小間隔（ミリ秒単位）です。サウンドを再生すると、その間隔が経過するまで、以降の Play() 呼び出しは無視されます。
# Description: 
SoundRecorder__StopMethodDescriptions=録音を停止します。
# Description: 
SoundRecorder__StartMethodDescriptions=録音を開始します。
# Description: 
SoundRecorderHelpStringComponentPallette=<p>音声を録音するマルチメディアコンポーネント。</p>
# Description: 
SoundHelpStringComponentPallette=<p>サウンド ファイルを再生し、オプションでブロック エディターで指定されたミリ秒数 (1000 分の 1 秒) 振動するマルチメディア コンポーネントです。再生するサウンド ファイルの名前は、デザイナーまたはブロック エディターで指定できます。</p> <p>サポートされているサウンド ファイル形式については、<a href="http://developer.android.com/" を参照してください。 guide/appendix/media-formats.html" target="_blank">Android でサポートされるメディア フォーマット</a>。</p><p>この <code>Sound</code> コンポーネントは、次のような短いサウンド ファイルに最適です。 <code>Player</code> コンポーネントは、歌などの長いサウンドの場合により効率的です。</p><p>ソースを設定した直後にサウンドを再生しようとすると、エラーが発生する可能性があります。</p>
# Description: 
SoundErrorEventDescriptions=SoundError（サウンドエラー）イベントは使用されなくなりました。代わりに Screen.ErrorOccurred（画面 エラー発生）イベントを使用してください。
# Description: 
Slider__WidthPropertyDescriptions=スライダーの横幅をピクセル単位で指定します。
# Description: 
Slider__WidthPercentPropertyDescriptions=スライダーの横幅をスクリーン幅に対するパーセンテージで指定します。
# Description: 
Slider__VisiblePropertyDescriptions=スライダーを画面に表示するかどうかを指定します。値はスライダーが表示されている場合はtrue、非表示の場合はfalseになります。
# Description: 
Slider__HeightPercentPropertyDescriptions=スライダーの垂直方向の高さをスクリーンの高さに対するパーセンテージで指定します。
# Description: 
SliderHelpStringComponentPallette=スライダーは、ドラッグ可能な Thumbを追加する進行状況バーです。 Thumbをタッチして左右にドラッグして、スライダーの Thumbの位置を設定できます。スライダーの Thumbがドラッグされると、PositionChanged（ポジション変更）イベントがトリガーされ、スライダーのサムの位置が報告されます。報告されたスライダー  Thumbの位置を使用して、テキスト ボックスのフォント サイズやボールの半径など、別のコンポーネント属性を動的に更新できます。
# Description: 
SizingPropertyDescriptions=固定に設定すると、単一の固定サイズの画面に対して画面レイアウトが作成され、自動スケールされます。レスポンシブに設定すると、画面レイアウトはデバイスの実際の解像度を使用します。詳細については、App Inventor のレスポンシブ デザインに関するドキュメントを参照してください。このプロパティはスクリーン1 にのみ表示され、アプリ内のすべての画面のサイズを制御します。
# Description: 
SizingProperties=サイズ
# Description: 
SizePropertyDescriptions=生成される画像のサイズを指定します。256、512、1024のいずれかを指定します。
# Description: 
SizeProperties=サイズ
# Description: 
SimpleStepsPropertyDescriptions=歩数計を始めてからのシンプル歩数。
# Description: 
SimpleStepsProperties=シンプルステップ
# Description: 
SimpleStepEvents=シンプルステップ
# Description: 
SimpleStepEventDescriptions=このイベントは、RAWのステップが検出されたときに実行されます。
# Description: 
PointShapePropertyDescriptions=データコンポーネントが散布図に設定されたグラフにアタッチされている場合、データシリーズのポイント形状を変更します。有効なタイプは、円、四角、三角、十字、クロスです。
# Description: 
PointShapeProperties=ポイント形状
# Description: 
PointInDirectionMethods=ポイントインディレクション
# Description: 
PlayersPropertyDescriptions=このゲームインスタンスの現在のプレイヤーセットです。各プレーヤーは、文字列である電子メールアドレスによって指定されます。プレーヤーのリストは、ゲームサーバーとの通信が成功するたびに更新されます。
# Description: 
PlayersProperties=プレイヤー
# Description: 
Player__VolumePropertyDescriptions=音量を0から100の間の数値に設定します
# Description: 
Player__VibrateMethodDescriptions=指定されたミリ秒の間振動します。
# Description: 
Player__StopMethodDescriptions=メディアの再生を停止し、曲の冒頭に戻ります。
# Description: 
Player__StartMethodDescriptions=メディアを再生します。一時停止していた場合は、再生を再開します。一時停止していた場合は、最初から再生します。
# Description: 
Player__SourcePropertyDescriptions=音源へのパスを返します
# Description: 
Player__PauseMethodDescriptions=メディアを再生中の場合、再生を一時停止します。
# Description: 
Player__CompletedEventDescriptions=メディアが終了に達したことを示します
# Description: 
PlayerLeftEvents=プレイヤー左
# Description: 
PlayerLeftEventDescriptions=プレイヤーがこのゲームインスタンスから退出したことを示します。
# Description: 
PlayerJoinedEvents=プレーヤーの参加
# Description: 
PlayerJoinedEventDescriptions=新しいプレイヤーがこのゲームインスタンスに参加したことを示します。
# Description: 
PlayerHelpStringComponentPallette=オーディオを再生し、電話の振動を制御するマルチメディア コンポーネントです。マルチメディア フィールドの名前は、<code>Source</code> プロパティで指定されます。このプロパティは、デザイナーまたはブロック エディターで設定できます。振動の時間の長さは、ブロック エディターでミリ秒 (1000 分の 1 秒) 単位で指定します。<p>サポートされているオーディオ形式については、<a href="http://developer.android.com/guide/appendix/" を参照してください。 media-formats.html" target="_blank">Android でサポートされるメディア フォーマット</a>。</p><p>このコンポーネントは、曲などの長いサウンド ファイルに最適ですが、<code>サウンド</code > コンポーネントは、効果音などの短いファイルの場合により効率的です。</p>
# Description: 
PlayerErrorEventDescriptions=PlayerError（プレイヤーエラー）イベントは使用されなくなりました。代わりに Screen.ErrorOccurred イベントを使用してください。
# Description: 
PlayToneMethods=プレイトーン
# Description: 
PlayToneMethodDescriptions=ロボットに音色を聞かせます。
# Description: 
PlaySoundFileMethods=プレイサウンドファイル
# Description: 
PlaySoundFileMethodDescriptions=ロボットでサウンドファイルを再生します。
# Description: 
PlayOnlyInForegroundPropertyDescriptions=false（デフォルト・オプション）の場合、プレーヤーは現在の画面が表示されているか否かに関わらず再生を続けます。
# Description: 
PieRadiusPropertyDescriptions=円グラフの半径を0%から100%の間で設定します。100%は完全な円グラフが描画されることを意味し、0%に近い値は空洞の円グラフに対応します。
# Description: 
PieRadiusProperties=パイ半径
# Description: 
PictureProperties=写真
# Description: 
PhoneStatusHelpStringComponentPallette=電話に関する情報を返すコンポーネント。
# Description: 
PhoneNumberProperties=携帯番号
# Description: 
PhoneNumberPicker__WidthPropertyDescriptions=コンタクトピッカーの横幅をピクセル単位で指定します。
# Description: 
PhoneNumberPicker__WidthPercentPropertyDescriptions=コンタクトピッカーの横幅を画面の横幅に対する割合で指定します。
# Description: 
PhoneNumberPicker__VisiblePropertyDescriptions=コンタクトピッカーを画面に表示するかどうかを指定します。コンタクトピッカーが表示されている場合はtrue、非表示の場合はfalseとなります。
# Description: 
PhoneNumberPicker__TouchUpEventDescriptions=コンタクトピッカーがリリースされたことを示します。
# Description: 
PhoneNumberPicker__TouchDownEventDescriptions=コンタクトピッカーが押されたことを示します。
# Description: 
PhoneNumberPicker__TextPropertyDescriptions=コンタクトピッカーに表示するテキスト。
# Description: 
PhoneNumberPicker__TextColorPropertyDescriptions=ボタンテキストの色。
# Description: 
PhoneNumberPicker__TextAlignmentPropertyDescriptions=左か、中央か、右か。
# Description: 
PhoneNumberPicker__ShowFeedbackPropertyDescriptions=画像を背景に持つコンタクトピッカーに視覚的なフィードバックを表示するかどうかを指定します。
# Description: 
PhoneNumberPicker__ShapePropertyDescriptions=`ContactPicker（コンタクトピッカー）` のスタイルを返します。
# Description: 
PhoneNumberPicker__PicturePropertyDescriptions=選択したコンタクトの画像 URI を返します。この URI を使用して、コンタクトの写真やその他のフィールドを取得できます。
# Description: 
PhoneNumberPicker__PhoneNumberPropertyDescriptions=選択した連絡先に関連付けられた主電話番号、または連絡先に電話番号が関連付けられていない場合は空文字列を返します。
# Description: 
PhoneNumberPicker__OpenMethodDescriptions=ユーザーがクリックしたかのように、コンタクトピッカーを開きます。
# Description: 
PhoneNumberPicker__LostFocusEventDescriptions=カーソルがコンタクトピッカーから離れ、クリックできなくなったことを示します。
# Description: 
PhoneNumberPicker__ImagePropertyDescriptions=ボタンに表示する画像。
# Description: 
PhoneNumberPicker__HeightPropertyDescriptions=コンタクトピッカーの垂直方向の高さをピクセル単位で指定します。
# Description: 
PhoneNumberPicker__HeightPercentPropertyDescriptions=コンタクトピッカーの垂直方向の高さを、画面の高さに対するパーセンテージで指定します。
# Description: 
PhoneNumberPicker__GotFocusEventDescriptions=カーソルがコンタクトピッカーの上に移動し、クリックできるようになったことを示します。
# Description: 
PhoneNumberPicker__FontTypefacePropertyDescriptions=コンタクトピッカーテキストのフォントファミリーです。
# Description: 
PhoneNumberPicker__FontSizePropertyDescriptions=コンタクトピッカー テキストのポイントサイズです。
# Description: 
PhoneNumberPicker__FontItalicPropertyDescriptions=設定された場合、コンタクトピッカーテキストはイタリック体で表示されます。
# Description: 
PhoneNumberPicker__FontBoldPropertyDescriptions=設定すると、コンタクトピッカーのテキストは太字で表示されます。
# Description: 
PhoneNumberPicker__EnabledPropertyDescriptions=設定されている場合、ユーザーはContactPicker（コンタクトピッカー）をタップしてアクションを起こすことができます。
# Description: 
PhoneNumberPicker__BeforePickingEventDescriptions=イベント `ContactPicker（コンタクトピッカー）` がクリックされたとき、またはピッカーが表示されたときに発生するイベントです
# Description: 
PhoneNumberPicker__BackgroundColorPropertyDescriptions=ボタンの背景色を返します
# Description: 
PhoneNumberPicker__AfterPickingEventDescriptions=`コンタクトピッカー`アクティビティが結果を返し、プロパティが入力された後に発生するイベントです。
# Description: 
PhoneNumberPickerHelpStringComponentPallette=クリックすると、連絡先の電話番号のリストが表示され、その中から選択できるボタン。ユーザーが選択を行うと、次のプロパティが選択した連絡先に関する情報に設定されます: <ul><li> <code>ContactName</code>: 連絡先の名前 </li> <li> < code>PhoneNumber</code>: 連絡先の電話番号 </li> <li> <code>EmailAddress</code>: 連絡先の電子メール アドレス </li> <li> <code>Picture< /code>: 連絡先の画像を含むファイルの名前。<code>Image</code> または <code>ImageSprite</code> の <code>Picture</code> プロパティ値として使用できます。 code> コンポーネント。</li></ul></p><p>その他のプロパティはボタンの外観に影響します (<code>TextAlignment</code>、<code>BackgroundColor</code> など)。クリックできるかどうか (<code>Enabled</code>)。</p><p>PhoneNumberPicker コンポーネントは、すべての Android デバイスで動作するとは限りません。たとえば、システム 3.0 より前の Android システムでは、返される電話番号と電子メール アドレスのリストは空になります。
# Description: 
PhoneNumberListPropertyDescriptions=選択した連絡先に関連する電話番号のリストを返します。
# Description: 
PhoneNumberListProperties=携帯番号リスト
# Description: 
PhoneCall__PhoneNumberPropertyDescriptions=携帯番号プロパティゲッターメソッド。
# Description: 
PhoneCallStartedEvents=電話着信開始
# Description: 
PhoneCallStartedEventDescriptions=通話が開始されたことを示すイベントです。ステータスが 1 の場合、着信コールが鳴っています。ステータスが 2 の場合、発信通話がダイヤルされます。 携帯番号は着信/発信の電話番号です。
# Description: 
PhoneCallHelpStringComponentPallette=<p><code>PhoneNumber</code> プロパティで指定された番号に電話をかける非表示コンポーネント。デザイナーまたはブロック エディターで設定できます。このコンポーネントには <code>MakePhoneCall</code> メソッドがあり、プログラムで電話をかけることができます。</p><p>多くの場合、このコンポーネントは <code>ContactPicker</code> コンポーネントと一緒に使用されます。ユーザーは電話機に保存されている連絡先から連絡先を選択し、<code>PhoneNumber</code> プロパティを連絡先の電話番号に設定します。</p><p>電話番号を直接指定するには (例: 650) -555-1212)、<code>PhoneNumber</code> プロパティを、指定された数字を含むテキスト (例: "6505551212") に設定します。ダッシュ、ドット、括弧を含めることができますが (例: "(650)-555-1212")、無視されます。スペースを含めることはできません。</p>
# Description: 
PhoneCallEndedEvents=通話終了
# Description: 
PhoneCallEndedEventDescriptions=電話が終了したことを示すイベントです。ステータスが1の場合、着信は見逃されるか拒否されます。ステータスが2の場合、着信は電話を切る前に応答されます。ステータスが3の場合、発信は切られます。携帯番号は終了した通話の電話番号です。
# Description: 
PersistPropertyDescriptions=true の場合、オフラインおよびアプリの終了時に変数の値が保持されます。値は、ネットワークに接続しているときに次回アプリを実行するときに Firebase にアップロードされます。これは、ネットワークに接続していないときにデータを収集するアプリケーションに役立ちます。注: AppendValue（値の追加）と RemoveFirst（最初に削除する）はオフラインでは正しく機能しません。ネットワーク接続が必要です。<br/><br/> <i>注</i>: ファイヤーベースコンポーネントのいずれかの画面で Persist（持続）を設定すると、これにより、すべての画面上のすべてのファイヤーベース コンポーネントが永続化されます。これは、低レベルのファイヤーベースライブラリの制限です。また、persist（持続）を true に設定する場合は、インクリメンタル開発のためにコンパニオンを接続する前に設定する必要があることに注意してください。
# Description: 
PersistProperties=持続する
# Description: The name of the event handler for when the app is granted a dangerous permission by the user.
PermissionGrantedEvents=許可されました
# Description: 
PermissionGrantedEventDescriptions=アプリユーザーが必要なパーミッションを許可したときに処理するイベント。このイベントは、AskForPermission（許可申請）メソッドに応答してパーミッションが付与された場合にのみ実行されます。
# Description: The name of the event handler for when the app is denied a dangerous permission by the user.
PermissionDeniedEvents=パーミッションを拒否
# Description: 
PermissionDeniedEventDescriptions=アプリユーザーが必要なパーミッションを拒否したときに処理するイベントです。
# Description: 
Pedometer__StopMethodDescriptions=歩数のカウントうぃ停止します
# Description: 
Pedometer__StartMethodDescriptions=歩数のカウントを開始します
# Description: 
Pedometer__SaveMethodDescriptions=歩数計の状態を携帯電話に保存します。歩数計を使用するアプリを起動する間の歩数と距離の蓄積を許可します。アプリによって、保存される状態が異なります。
# Description: 
Pedometer__ResumeMethodDescriptions=カウントを再開します。
# Description: 
Pedometer__PauseMethodDescriptions=歩数と距離のカウントを一時停止します。
# Description: 
Pedometer__DistancePropertyDescriptions=おおよその移動距離をメートルで表します。
# Description: 
PedometerHelpStringComponentPallette=歩数計のように動作するコンポーネントです。加速度センサーで動きを感知し、歩いたかどうかを判断しようとします。設定可能な歩幅を使用して、移動距離も推定できます。
# Description: 
PauseMethods=一時停止
# Description: 
PatchTextWithEncodingMethods=エンコード付きパッチテキスト
# Description: 
PatchTextWithEncodingMethodDescriptions=URLプロパティと指定されたテキストを使用して HTTP PATCH リクエストを実行します。<br>テキストの文字は、指定されたエンコードを使用してエンコードされます。<br>SaveResponse（レスポンス保存）プロパティが true の場合、応答はファイルと GotFile（テキストを取得）に保存されます。イベントがトリガーされます。 ResponseFileName（レスポンスファイル名）プロパティを使用してファイルの名前を指定できます。<br>SaveResponse（レスポンスの保存）プロパティが false の場合、GotText イベントがトリガーされます。
# Description: 
PatchTextMethods=パッチテキスト
# Description: 
PatchTextMethodDescriptions=URLプロパティと指定されたテキストを使用して HTTP PATCH リクエストを実行します。<br>テキストの文字は UTF-8 エンコードを使用してエンコードされます。<br>SaveResponse プロパティが true の場合、応答はファイルに保存され、 GotFile （ファイル取得）イベントがトリガーされます。 responseFileName（レスポンスファイル名）プロパティを使用して、ファイルの名前を指定できます。<br>SaveResponse（レスポンスの保存）プロパティが false の場合、GotText（テキストの取得）イベントがトリガーされます。
# Description: 
PatchFileMethods=パッチファイル
# Description: 
PatchFileMethodDescriptions=URL プロパティと指定されたファイルのデータを使用して、HTTP PATCH リクエストを実行します。<br>SaveResponse（レスポンスの保存）プロパティが true の場合、応答はファイルに保存され、GotFile イベントがトリガーされます。 ResponseFileName（レスポンスファイル名）プロパティを使用してファイルの名前を指定できます。<br>SaveResponse（レスポンスの保存）プロパティが false の場合、GotText（テキストの取得）イベントがトリガーされます。
# Description: 
PasswordVisiblePropertyDescriptions=パスワードの可視化。
# Description: 
PasswordVisibleProperties=パスワード表示
# Description: 
PasswordTextBox__WidthPropertyDescriptions=パスワードテキストボックスの横幅をピクセル単位で指定します。
# Description: 
PasswordTextBox__WidthPercentPropertyDescriptions=パスワードテキストボックスの横幅を画面の横幅に対するパーセンテージで指定します。
# Description: 
PasswordTextBox__VisiblePropertyDescriptions=パスワードテキストボックスを画面に表示するかどうかを指定します。値は、パスワードテキストボックスが表示されている場合はtrue、非表示の場合はfalseになります。
# Description: 
PasswordTextBox__TextPropertyDescriptions=テキストボックスの内容を返します。
# Description: 
PasswordTextBox__TextColorPropertyDescriptions=テキストの色です。デザイナーまたはブロックエディターで色を選択できます。デフォルトのテキスト色は黒です。
# Description: 
PasswordTextBox__TextAlignmentPropertyDescriptions=テキストを左寄せにするか、中央寄せにするか、右寄せにするか。デフォルトでは、テキストは左寄せになります。
# Description: 
PasswordTextBox__RequestFocusMethodDescriptions=パスワードテキストボックスをアクティブに設定します。
# Description: 
PasswordTextBox__NumbersOnlyPropertyDescriptions=trueの場合、このパスワードテキストボックスはキーボード入力として数字のみを受け付けます。数字には小数点と、オプションで先頭にマイナス記号を付けることができます。これはキーボード入力のみに適用されます。NumbersOnly（番号のみ）がtrueの場合でも、[set Text to]（[テキストを設定]）を使用すれば、任意のテキストを入力することができます。
# Description: 
PasswordTextBox__LostFocusEventDescriptions=ユーザーが別のテキストボックスをタッチした場合など、パスワードテキストボックスが入力のために選択されなくなったときに発生するイベントです。
# Description: 
PasswordTextBox__HintPropertyDescriptions=パスワードテキストボックスにかすかに表示されるテキストは、ユーザーが何を入力すべきかのヒントを提供します。これは、テキストプロパティが空の場合にのみ表示されます。
# Description: 
PasswordTextBox__HeightPropertyDescriptions=パスワードテキストボックスの垂直方向の高さをピクセル単位で指定します。
# Description: 
PasswordTextBox__HeightPercentPropertyDescriptions=パスワードテキストボックスの垂直方向の高さを、スクリーンの高さに対するパーセンテージで指定します。
# Description: 
PasswordTextBox__GotFocusEventDescriptions=パスワードテキストボックスが入力のために選択されたときに発生するイベントです。
# Description: 
PasswordTextBox__FontTypefacePropertyDescriptions=テキストのフォントです。この値はデザイナーで変更できます。
# Description: 
PasswordTextBox__FontSizePropertyDescriptions=テキストのフォントサイズです。デフォルトでは14.0ポイントです。
# Description: 
PasswordTextBox__FontItalicPropertyDescriptions=テキストをイタリック体で表示するかどうか。デフォルトでは表示されません。
# Description: 
PasswordTextBox__FontBoldPropertyDescriptions=テキストのフォントを太字にするかどうか。デフォルトでは太字ではありません。
# Description: 
PasswordTextBox__EnabledPropertyDescriptions=ユーザーがパスワードテキストボックスにテキストを入力できるかどうか。デフォルトでは、これはtrueです。
# Description: 
PasswordTextBox__BackgroundColorPropertyDescriptions=入力ボックスの背景色です。デザイナーまたはブロックエディタで色を選択できます。デフォルトの背景色は''default''（陰影のある立体的な色）です。
# Description: 
PasswordTextBoxHelpStringComponentPallette=<p>パスワードを入力するボックスです。これは、ユーザーが入力した文字を表示しない点を除けば、通常の <code>テキストボックス</code> コンポーネントと同じです。</p><p>ボックス内のテキストの値は、 <code>テキスト</code> プロパティです。空白の場合、ボックス内に淡いテキストとして表示される <code>Hint</code> プロパティは、ユーザーに何を入力するかのガイダンスを提供します。</p> <p>テキスト ボックスは通常、< とともに使用されます。 code>Button</code> コンポーネント。テキストの入力が完了したらユーザーがボタンをクリックします。</p>
# Description: 
PanToMethods=Pan To
# Description: 
PanToMethodDescriptions=ページの読み込み指定された緯度経度に地図の中心を移動し、ズームレベルを指定されたズームに調整します。
# Description: 
PaintColorProperties=ペイントカラー
# Description: 
PageLoadedEvents=ページの読み込み
# Description: 
PageLoadedEventDescriptions=ページの読み込みが終了すると、このイベントが実行されます。
# Description: Text for the Package non-SDK 26 Warning Dialog Box (HTML)
PackageNotice=このオプションは、Android バージョン 2.1 (Eclair) まで動作するアプリを作成する場合に使用します。<br/>ただし、Google Play ストアでは公開できません。
# Description: Text for the Package SDK 26 Warning Dialog Box (HTML)
Package26Notice=このオプションを使用して、Google Playストアに提出できるアプリケーションを作成します。<br/>これらのアプリケーションは、4.0より古いバージョンのAndroidでは動作しません。
# Description: 
OtherScreenClosedEvents=他画面がクローズ
# Description: 
OtherScreenClosedEventDescriptions=他の画面が閉じられ、制御がこの画面に戻ったときに発生するイベントです。
# Description: 
OtherPlayerStartedEvents=他選手の開始
# Description: 
OtherPlayerStartedEventDescriptions=このイベントは、他のプレーヤーが開始したとき（現在のプレーヤーがプレー中または一時停止中で、停止していないとき）に通知されます。
# Description: 
OriginAtCenterPropertyDescriptions=x 座標と y 座標が Ball の中心を表すか（true）、左端と上端を表すか（false）。
# Description: 
OriginAtCenterProperties=原点センター
# Description: 
OrientationSensor__PitchPropertyDescriptions=デバイスのピッチ角を返します。意味のある値を返すには、センサーを有効にする必要があります。
# Description: 
OrientationSensor__EnabledPropertyDescriptions=オリエンテーションセンサーが有効かどうかを指定します。
# Description: 
OrientationSensor__AvailablePropertyDescriptions=デバイスに方位センサーがあるかどうかを示します。
# Description: 
OrientationSensorHelpStringComponentPallette=<p>デバイスの物理的な向きに関する情報を 3 次元で提供する非表示コンポーネント: <ul> <li> <strong>ロール</strong>: デバイスが水平の場合は 0 度、デバイスが水平になるにつれて 90 度に増加します。デバイスの左側を上に傾けると、デバイスの右側を上に傾けると -90 度まで下がります。 </li> <li> <strong>ピッチ</strong>: デバイスが水平の場合は 0 度、上部が下を向くようにデバイスを傾けると最大 90 度、裏返すと最大 180 度になります。同様に、底部が下を向くようにデバイスを傾けると、ピッチは -90 度に減少し、完全に裏返すとさらに -180 度に減少します。</li> <li> <strong>方位角</strong> >: デバイスの上部が北を向いている場合は 0 度、東を向いている場合は 90 度、南を向いている場合は 180 度、西を向いている場合は 270 度など。</li></ul> これらの測定値デバイス自体は動いていないと仮定します。</p>
# Description: 
OrientationPropertyDescriptions=ボタンのスタイルを返します。
# Description: 
OrientationProperties=オリエンテーション
# Description: 
OrientationChangedEvents=オリエンテーションの変更
# Description: 
OrientationChangedEventDescriptions=向きが変わったときに呼び出されます。
# Description: 
OpenSerialMethods=シリアルを開く
# Description: 
OpenSerialMethodDescriptions=シリアル接続を開きます。開くとtrueを返します。
# Description: 
OpenScreenAnimationPropertyDescriptions=別の画面に切り替わるときのアニメーションです。有効なオプションはデフォルト、フェード、ズーム、水平にスライド、垂直にスライド、なしです
# Description: 
OpenScreenAnimationProperties=スクリーンアニメーションを開く
# Description: 
OpenScreenAnimationMethods=スクリーンアニメーションを開く
# Description: 
OpenMethods=開く
# Description: 
OnSettingsEvents=設定について
# Description: 
OnSettingsEventDescriptions=このイベントは、「設定」メニュー項目が選択されると発生します（コンパニオンアプリでのみ使用可能、ReplForm.javaで定義）。
# Description: 
OnPropertyDescriptions=`スイッチ`がオンになっていればtrueを返します。
# Description: 
OnProperties=の上に
# Description: 
NxtUltrasonicSensor__WithinRangeEventEnabledPropertyDescriptions=距離がBottomOfRange（範囲下）とTopOfRange（範囲上え）の間にあるときにWithinRange（範囲内）イベントを発生させるかどうか。
# Description: 
NxtUltrasonicSensor__WithinRangeEventDescriptions=距離は範囲内に入りました。
# Description: 
NxtUltrasonicSensor__BelowRangeEventEnabledPropertyDescriptions=距離がBottomOfRange（範囲のした）以下になったときにBelowRange（範囲以下）イベントを発生させるかどうか。
# Description: 
NxtUltrasonicSensor__BelowRangeEventDescriptions=距離が範囲を下回りました。
# Description: 
NxtUltrasonicSensor__AboveRangeEventEnabledPropertyDescriptions=距離がTopOfRange（範囲の上）を超えたときにAboveRange（上記範囲）イベントを発生させるかどうか。
# Description: 
NxtUltrasonicSensor__AboveRangeEventDescriptions=距離は範囲を超えました。
# Description: 
NxtUltrasonicSensorHelpStringComponentPallette=LEGO MINDSTORMS NXTロボットの超音波センサーに高レベルのインターフェースを提供するコンポーネントです。
# Description: 
NxtTouchSensor__ReleasedEventDescriptions=タッチセンサーがリリースされました。
# Description: 
NxtTouchSensor__PressedEventEnabledPropertyDescriptions=タッチセンサーが押されたときにPressed（押された）イベントを発生させるかどうか。
# Description: 
NxtTouchSensor__PressedEventDescriptions=タッチセンサーが押されました。
# Description: 
NxtTouchSensorHelpStringComponentPallette=LEGO MINDSTORMS NXTロボットのタッチセンサーに高レベルのインターフェースを提供するコンポーネントです。
# Description: 
NxtSoundSensor__WithinRangeEventEnabledPropertyDescriptions=サウンドレベルがBottomOfRange（範囲の下）とTopOfRange（範囲の上）の間にある時に、WithinRange（範囲内）イベントを発生させるかどうか。
# Description: 
NxtSoundSensor__WithinRangeEventDescriptions=サウンドレベルが範囲内になりました。
# Description: 
NxtSoundSensor__BelowRangeEventEnabledPropertyDescriptions=サウンドレベルがBottomOfRange（範囲の下）以下になったときにBelowRange（範囲以下）イベントを発生させるかどうか。
# Description: 
NxtSoundSensor__BelowRangeEventDescriptions=サウンドレベルが範囲を下回りました。
# Description: 
NxtSoundSensor__AboveRangeEventEnabledPropertyDescriptions=サウンドレベルがTopOfRange（範囲の上）を超えた時にAboveRange（上記範囲）イベントを発生させるかどうか。
# Description: 
NxtSoundSensor__AboveRangeEventDescriptions=サウンドレベルが範囲を超えてしまいました。
# Description: 
NxtSoundSensorHelpStringComponentPallette=LEGO MINDSTORMS NXTロボットのサウンドセンサーにハイレベルインターフェースを提供するコンポーネントです。
# Description: 
NxtLightSensor__WithinRangeEventEnabledPropertyDescriptions=光量がBottomOfRange（範囲の下）とTopOfRangeの間にあるときにWithinRange（範囲内）イベントを発生させるかどうか。
# Description: 
NxtLightSensor__WithinRangeEventDescriptions=光量が範囲内になりました。
# Description: 
NxtLightSensor__GetLightLevelMethodDescriptions=現在のライト・レベルを 0 から 1023 までの値で返すか、ライト・レベルを読み取れない場合は -1 を返します。
# Description: 
NxtLightSensor__BelowRangeEventEnabledPropertyDescriptions=光量がBottomOfRange（範囲下）以下になったときにBelowRangeイベントを発生させるかどうか。
# Description: 
NxtLightSensor__BelowRangeEventDescriptions=光量が範囲を下回りました。
# Description: 
NxtLightSensor__AboveRangeEventEnabledPropertyDescriptions=光量がTopOfRange（範囲の上）を超えたときにAboveRange（上記範囲）イベントを発生させるかどうか。
# Description: 
NxtLightSensor__AboveRangeEventDescriptions=光量が範囲を超えました。
# Description: 
NxtLightSensorHelpStringComponentPallette=LEGO MINDSTORMS NXTロボットの光センサーに高レベルのインターフェースを提供するコンポーネントです。
# Description: 
NxtDrive__WheelDiameterPropertyDescriptions=走行に使用する車輪の直径。
# Description: 
NxtDrive__StopMethodDescriptions=ロボットの駆動モーターを停止させます。
# Description: 
NxtDrive__StopBeforeDisconnectPropertyDescriptions=切り離す前に駆動モーターを停止させるかどうか。
# Description: 
NxtDriveHelpStringComponentPallette=LEGO MINDSTORMS NXTロボットに高レベルのインターフェースを提供するコンポーネントです。
# Description: 
NxtDirectCommands__KeepAliveMethodDescriptions=Keep Alive.現在のスリープ制限時間をミリ秒単位で返します。
# Description: 
NxtDirectCommands__GetFirmwareVersionMethodDescriptions=ロボットのファームウェアとプロトコルのバージョン番号をリストとして取得します。
# Description: 
NxtDirectCommandsHelpStringComponentPallette=LEGO MINDSTORMS NXTロボットへの低レベルインターフェースを提供するコンポーネントで、NXTダイレクトコマンドを送信する機能を備えています。
# Description: 
NxtColorSensor__WithinRangeEventEnabledPropertyDescriptions=DetectColor（色検出）プロパティがFalseに設定され、光量がBottomOfRange（範囲の下）とTopOfRange（範囲のトップ）の間にあるときに、WithinRange（範囲内）イベントを発生させるかどうか。
# Description: 
NxtColorSensor__WithinRangeEventDescriptions=光量が範囲内に入りました。DetectColor（色検出）プロパティがTrueに設定されているか、WithinRangeEventEnabled（範囲内 イベント有効）プロパティがFalseに設定されている場合、WithinRange（範囲内）イベントは発生しません。
# Description: 
NxtColorSensor__GetLightLevelMethodDescriptions=現在の光量を 0 から 1023 までの値で返します。光量を読み取れない場合、または DetectColor（色検出）プロパティが True に設定されている場合は -1となります。
# Description: 
NxtColorSensor__ColorChangedEventEnabledPropertyDescriptions=DetectColor（色検出）プロパティがTrueに設定され、検出された色が変化したときにColorChanged（色変更）イベントを発生させるかどうか。
# Description: 
NxtColorSensor__ColorChangedEventDescriptions=検出された色が変更されました。DetectColor（色検出）プロパティが False に設定されている場合、または ColorChangedEventEnabled（ 色変更イベント有効）プロパティが False に設定されている場合、ColorChanged（色変更）イベントは発生しません。
# Description: 
NxtColorSensor__BelowRangeEventEnabledPropertyDescriptions=DetectColor（色検出）プロパティがFalseに設定され、光量がBottomOfRange（範囲下）以下になったときにBelowRange（範囲以下）イベントを発生させるかどうか。
# Description: 
NxtColorSensor__BelowRangeEventDescriptions=光量が範囲を下回りました。DetectColor（色検出）プロパティがTrueに設定されているか、BelowRangeEventEnabled（範囲外イベント有効）プロパティがFalseに設定されている場合、BelowRange（範囲以下）イベントは発生しません。
# Description: 
NxtColorSensor__AboveRangeEventEnabledPropertyDescriptions=DetectColor（色検出）プロパティがFalseに設定され、光量がTopOfRangeを超えたときにAboveRangeイベントを発生させるかどうか。
# Description: 
NxtColorSensor__AboveRangeEventDescriptions=光量が範囲を超えました。DetectColor（色検出）プロパティがTrueに設定されているか、AboveRangeEventEnabled（範囲外イベント有効）プロパティがFalseに設定されている場合、AboveRange（上記範囲）イベントは発生しません。
# Description: 
NxtColorSensorHelpStringComponentPallette=LEGO MINDSTORMS NXTロボットのカラーセンサーに高レベルのインターフェースを提供するコンポーネントです。
# Description: 
NumbersOnlyProperties=数字のみ
# Description: 
NowMethods=今
# Description: 
NowMethodDescriptions=電話の時計から読み取った現在の時刻を返します。
# Description: 
Notifier__TextColorPropertyDescriptions=アラート（ダイアログではない）のテキスト色を指定します。
# Description: 
Notifier__BackgroundColorPropertyDescriptions=アラートが表示される時間の長さを指定します。
# Description: 
NotifierLengthPropertyDescriptions=アラートが表示される時間の長さを指定します。
# Description: 
NotifierLengthProperties=通知の長さ
# Description: 
NotifierHelpStringComponentPallette=Notifier（通知）コンポーネントは、アラート ダイアログ、メッセージ、一時アラートを表示し、次のメソッドを通じて Android ログ エントリを作成します。 <ul><li> ShowMessageDialog: ユーザーがボタンを押して閉じる必要があるメッセージを表示します。</li><li> > ShowChooseDialog: メッセージ 2 つのボタンを表示して、ユーザーが 2 つの応答 (たとえば、「はい」または「いいえ」) のうちの 1 つを選択できるようにします。その後、AfterChoosing （選択後 ）イベントが発生します。</li><li> ShowTextDialog: ユーザーが応答としてテキストを入力できるようにします。メッセージの後に AfterTextInput（AfterTextInput ）イベントが発生します。 <li> ShowPasswordDialog: ユーザーがメッセージに応じてパスワードを入力できるようにし、その後 AfterTextInput イベントが発生します。 <li> ShowAlert: しばらくすると自然に消える一時的なアラートを表示します。</li><li> ShowProgressDialog: ユーザーが閉じることのできない読み込み中のスピナーを含むアラートを表示します。これを閉じるには、DismissProgressDialog ブロックを使用する必要があります。</li><li> DismissProgressDialog: ShowProgressDialog によって表示される進行状況ダイアログを閉じます。</li><li> LogError: Android ログにエラー メッセージを記録します。 </li><li> LogInfo: 情報メッセージを Android ログに記録します。</li><li> LogWarning: 警告メッセージを Android ログに記録します。</li><li>ダイアログ内のメッセージ (ただし、アラートではありません) は、次の HTML タグを使用して書式設定できます:&lt;b&gt;、&lt;big&gt;、&lt;blockquote&gt;、&lt;br&gt;、&lt;cite&gt;、&lt;dfn&gt;、&lt;div&gt;、&lt; em>、<small>、<strong>、<sub>、<sup>、<tt>。 &lt;u&gt;</li><li>&lt;font color="blue"&gt; など、font タグを使用して色を指定することもできます。利用可能な色の名前には、アクア、ブラック、ブルー、フクシア、グリーン、グレー、ライム、マルーン、ネイビー、オリーブ、パープル、レッド、シルバー、ティール、ホワイト、イエローなどがあります。</li></ul>
# Description: Title for the Warning Dialog Box
NoticeTitle=お知らせです！
# Description: 
NorthLatitudePropertyDescriptions=長方形の北端を、赤道から北に10進法で示します。
# Description: 
NorthLatitudeProperties=北緯
# Description: 
NoOpenPollEvents=一般投票なし
# Description: 
NoOpenPollEventDescriptions=サービスにオープンポールがないことを示すイベントです。
# Description: 
NoLongerCollidingWithEvents=衝突することはありません
# Description: 
NoLongerCollidingWithEventDescriptions=2つのスプライト（ボールと画像スプライト）が衝突しなくなったときに呼び出されるイベントハンドラです。
# Description: 
NoLocationNeededPropertyDescriptions=Android 12以降では、Bluetoothがユーザーの位置の特定に使用されていないことを示します。
# Description: 
NoLocationNeededProperties=場所は不必要
# Description: 
NewLeaderEvents=新しいリーダー
# Description: 
NewLeaderEventDescriptions=この対局が、SetLeader（リーダー設定）によって指定された新しい指導者を持つことを示します
# Description: 
NewInstanceMadeEvents=新しいインスタンスの作成
# Description: 
NewInstanceMadeEventDescriptions=MakeNewInstance（新しいインスタンスの作成）を呼び出した後、新しいインスタンスが正常に作成されたことを示します。
# Description: 
NearFieldHelpStringComponentPallette=<p>NFC 機能を提供する非表示コンポーネントです。現時点では、このコンポーネントはテキスト タグの読み取りと書き込みのみをサポートしています (デバイスでサポートされている場合)。</p><p>テキスト タグの読み取りと書き込みを行うには、コンポーネントに <code>ReadMode</code> プロパティが必要です。それぞれ True または False に設定します。</p><p><strong>注:</strong> このコンポーネントは、App Inventor アプリの スクリーン１でのみ動作します。</p>
# Description: 
Navigation__ServiceURLPropertyDescriptions=いつか自分たちでサービスを運営することになったときのために、将来のために予約しておいたのだ。
# Description: 
Navigation__LanguagePropertyDescriptions=テキストの指示に使用する言語。
# Description: 
Navigation__ApiKeyPropertyDescriptions=Open Route Service（オープンルートサービス）のAPIキーです。
# Description: 
RotateInDurationMethods=回転時間
# Description: 
RotateInDurationMethodDescriptions=一定時間モーターを回転させます。
# Description: 
RotateInDistanceMethods=回転距離
# Description: 
RotateInDistanceMethodDescriptions=モーターを遠くで回転させます。
# Description: 
RollPropertyDescriptions=デバイスのロール角を返します。意味のある値を返すには、センサーを有効にする必要があります。
# Description: 
RollProperties=ロール
# Description: 
ReverseDirectionPropertyDescriptions=モーターの向きを逆にするかどうかを設定します。
# Description: 
ReverseDirectionProperties=逆方向
# Description: 
ResumeMethods=再開する
# Description: 
ResultUriPropertyDescriptions=アクティビティのURIを返します。
# Description: 
ResultUriProperties=結果Uri
# Description: 
ResultTypePropertyDescriptions=アクティビティからMIMEタイプを返します。
# Description: 
ResultTypeProperties=結果タイプ
# Description: 
ResultProperties=結果
# Description: 
ResultNamePropertyDescriptions=アクティビティから結果を取得する際に使用する名前を返します。
# Description: 
ResultNameProperties=結果名
# Description: 
ResponseTextEncodingPropertyDescriptions=ウェブレスポンス用のユーザー指定文字エンコーディング。
# Description: 
ResponseTextEncodingProperties=レスポンステキストエンコーディング
# Description: 
ResponseFileNamePropertyDescriptions=レスポンスを保存するファイル名です。SaveResponse（レスポンスを保存）が true で ResponseFileName（レスポンスファイル名）が空の場合、新しいファイル名が生成されます。
# Description: 
ResponseFileNameProperties=レスポンスファイル名
# Description: 
ResponseContentPropertyDescriptions=ディクショナリとしての最後の応答の内容。
# Description: 
ResponseContentProperties=レスポンスコンテンツ
# Description: 
ResolveActivityMethods=アクティビティを解決する
# Description: 
ResolveActivityMethodDescriptions=このアクティビティスターターに対応するアクティビティ名を返します。対応するアクティビティが見つからない場合は空文字列を返します。
# Description: 
ResetTachoCountMethods=タコカウントをリセット
# Description: 
ResetTachoCountMethodDescriptions=現在のタコカウントをゼロに設定します。
# Description: 
ResetMotorPositionMethods=モーター位置のリセット
# Description: 
ResetMotorPositionMethodDescriptions=モーター位置をリセットします。
# Description: 
ResetMethods=リセット
# Description: 
ResetMethodDescriptions=歩数カウンター、距離測定、走行時間をリセットします。
# Description: 
ResetInputScaledValueMethods=リセット入力スケール値
# Description: 
ResetInputScaledValueMethodDescriptions=ロボットの入力センサーのスケール値をリセットします。
# Description: 
ResetConversationMethods=会話のリセット
# Description: 
ResetConversationMethodDescriptions=現在の会話をリセットすると、チャットボットは今後応答する際に以前の会話を忘れます。
# Description: 
RequestTranslationMethods=翻訳をリクエスト
# Description: 
RequestMentionsMethods=メンションをリクエスト
# Description: 
RequestMentionsMethodDescriptions=ログインしているユーザーの最近の 20 件のメンションを要求します。メンションが取得されると、システムは <code>MentionsReceived</code> イベントを発生させ、<code>Mentions</code> プロパティをメンションのリストに設定します。<p><u>要件</u> : これは、<code>IsAuthorized</code> イベントが発生し、ユーザーが Twitter に正常にログインしたことを示した後にのみ呼び出す必要があります。</p>
# Description: 
RequestHeadersPropertyDescriptions=リクエストヘッダは、2つの要素を持つサブリストのリストで表されます。各サブリストの最初のエレメントはリクエストヘッダーフィールド名 を表します。各サブリストの2番目のエレメントはリクエストヘッダーフィールド値を表し、 単一の値か複数の値を含むリストのいずれかです。
# Description: 
RequestHeadersProperties=リクエストヘッダー
# Description: 
RequestFriendTimelineMethods=フレンドタイムラインのリクエスト
# Description: 
NavigationHelpStringComponentPallette=ナビゲーション
# Description: 
NamespacePropertyDescriptions=データを格納するためのネームスペース。
# Description: 
NamespaceProperties=ネームスペース
# Description: 
MultiLinePropertyDescriptions=trueの場合、このテキストボックスは複数行の入力を受け付け、リターンキーを使って入力する。1行のテキストボックスの場合、returnキーの代わりにDoneキーがあり、Doneキーを押すとキーボードが非表示になります。アプリはHideKeyboard（キーボードを非表示）メソッドを呼び出して、複数行テキストボックスのキーボードを非表示にする必要があります。
# Description: 
MultiLineProperties=マルチライン
# Description: 
MovingPropertyDescriptions=このプロパティは廃止されました。
# Description: 
MovingProperties=移動
# Description: 
MoveToPointMethods=ポイントへ移動
# Description: 
MoveToMethods=移動先
# Description: 
MoveIntoBoundsMethods=バウンズへ移動
# Description: 
MoveForwardMethods=前進する
# Description: 
MoveForwardMethodDescriptions=両方の駆動モーターを前進させることにより、指定された距離を、指定された最大パワーの割合でロボットを前進させます。
# Description: 
MoveForwardIndefinitelyMethods=無限に前進する
# Description: 
MoveForwardIndefinitelyMethodDescriptions=両方の駆動モーターを前進させることで、最大パワーの指定された割合でロボットを無限に前進させます。
# Description: 
MoveFileMethods=移動ファイル
# Description: 
MoveFileMethodDescriptions=ファイルをある場所から別の場所に移動する。
# Description: 
MoveBackwardMethods=後方に移動
# Description: 
MoveBackwardMethodDescriptions=両方の駆動モーターを後方に動かすことによって、指定された距離を、指定された最大電力のパーセンテージで、ロボットを後方に動かします。
# Description: 
MoveBackwardIndefinitelyMethods=後方へ無限に移動
# Description: 
MoveBackwardIndefinitelyMethodDescriptions=両方の駆動モーターを後方に動かすことにより、指定された最大出力のパーセンテージでロボットを無限に後方に動かします。
# Description: 
MotorPortsPropertyDescriptions=モーターが接続されるモーターポートです。ポートはポート文字の並びで指定されます。
# Description: 
MotorPortsProperties=モーターポート
# Description: 
MonthPropertyDescriptions=日付ピッカーを使用して最後に選択された月の番号です。月は1=1月、12=12月から始まることに注意してください。
# Description: 
MonthProperties=月
# Description: 
MonthNameMethods=月名
# Description: 
MonthNameMethodDescriptions=インスタントから月の名前を返します、例えば、1月、2月、3月...など。
# Description: 
MonthMethods=月
# Description: 
MonthMethodDescriptions=その年の月を 1 から 12 までの数字で返します)。
# Description: 
MonthInTextPropertyDescriptions=日付ピッカーで最後に選択された月の名前をテキスト形式で返します。
# Description: 
MonthInTextProperties=MonthIn（月）のテキスト
# Description: 
ModelPropertyDescriptions=使用するモデル名を設定します。現在サポートされているモデルの一覧は https://appinv.us/chatbot を参照してください。これを空白にすると、プロバイダによって設定されたデフォルトモデルが使用されます
# Description: 
ModelProperties=モデル
# Description: 
ModePropertyDescriptions=センサーのモードを指定します。
# Description: 
ModeProperties=モード
# Description: 
MockSpinnerAddItems=アイテムを追加...
# Description: 
MinutePropertyDescriptions=タイムピッカーを使用して最後に設定された時刻の分
# Description: 
MinuteProperties=分
# Description: 
MinuteMethods=分
# Description: 
MinuteMethodDescriptions=時分秒（0-59）その時点の分（0-59）を返します。
# Description: 
MinimumIntervalProperties=最小インターバル
# Description: 
MinValuePropertyDescriptions=スライダーの最小値を設定します。最小値を変更すると、Thumbposition（親指の位置）も (新しい) 最小値と最大値の中間にリセットされます。新しい最小値が現在の最大値より大きい場合、最小値と最大値の両方がこの値に設定されます。最小値を設定すると、サムの位置が最小値と最大値の中間にリセットされ、ポジション変更イベントが通知されます。
# Description: 
MinValueProperties=最小値
# Description: 
MimeTypePropertyDescriptions=ファイルを選択する際に必要なMIMEタイプを設定します。
# Description: 
MimeTypeProperties=MIMEタイプ
# Description: 
MessageWriteMethods=メッセージ書き込み
# Description: 
MessageWriteMethodDescriptions=ロボットのメールボックス（1～10）にメッセージを書き込みます。
# Description: 
MessageReceivedEvents=メッセージ受信
# Description: 
MessageReceivedEventDescriptions=キストメッセージが電話で受信されたときに発生するイベントです。**このブロックを使用すると、[危険なパーミッション](//developer.android.com/guide/topics/permissions/overview#dangerous_permissions)が追加されます。**
# Description: 
MessageReadMethods=メッセージ読み取り
# Description: 
MessageReadMethodDescriptions=ロボットのメールボックス(1-10)からメッセージを読みます。
# Description: 
MessagePropertyDescriptions=メッセージ送信メソッドが呼ばれたときに送信されるメッセージです。
# Description: 
MessageProperties=メッセージ
# Description: 
MentionsReceivedEvents=メンション受信
# Description: 
MentionsReceivedEventDescriptions=このイベントは、<code>RequestMentions</code> を通じてリクエストされたログイン ユーザーのメンションが取得されたときに発生します。メンションのリストは、<code>mentions</code> パラメーターまたは <code>Mentions</code> プロパティで見つけることができます。
# Description: 
MentionsPropertyDescriptions=このプロパティには、ログインしているユーザーのメンションのリストが含まれます。最初はリストは空です。これを設定するには、プログラムは次の手順を実行する必要があります。 <ol> <li> <code>Authorize</code> メソッドを呼び出します。</li> <li> <code>IsAuthorized</code> イベントを待ちます。</li> <li> <code>RequestMentions</code> メソッドを呼び出します。</li> <li> <code>MentionsReceived</code> イベントを待ちます。</li></ol>このプロパティの値は、メンションのリストに設定されます (その後、<code>RequestMentions</code> が呼び出されるまでその値が維持されます)。
# Description: 
MentionsProperties=メンション
# Description: 
MediaStoredEvents=メディアの保存
# Description: 
MediaStoredEventDescriptions=保存メディアサーバー要求が成功したことを示します。
# Description: 
MediaStore__WebServiceErrorEventDescriptions=ウェブサービスとの通信でエラーが発生したことを示します
# Description: 
MediaStore__ServiceURLPropertyDescriptions=メディア保存ウェブサービスのURLを返します。
# Description: 
MediaStoreHelpStringComponentPallette=ウェブサービスと通信し、メディアファイルを保存する、目に見えないコンポーネントです。
# Description: 
MaximumRangeProperties=最大範囲
# Description: 
MaximumRangeMethods=最大範囲メソッド
# Description: 
MaxValuePropertyDescriptions=スライダーの最大値を設定します。最大値を変更すると、Thumbposition（親指の位置）も最小値と（新しい）最大値の中間の値にリセットされます。新しい最大値が現在の最小値より小さい場合、最小値と最大値の両方がこの値に設定されます。最大値を設定すると、親指の位置は最小値と最大値の中間にリセットされ、Pポジション変更イベントを通知します。
# Description: 
MaxValueProperties=最大値
# Description: 
Marker__WidthPropertyDescriptions=`マーカー`の横幅をピクセル単位で指定します。
# Description: 
Marker__WidthPercentPropertyDescriptions=マーカー`の水平方向の幅を [`スクリーン`の `Width`](userinterface.html#Screen.Width)に対するパーセンテージで指定します。
# Description: 
Marker__VisiblePropertyDescriptions=マーカーを画面に表示するかどうかを指定します。表示されている場合はtrue、非表示の場合はfalseとなります。
# Description: 
Marker__TypePropertyDescriptions=フィーチャのタイプを返します。Markers（マーカー）の場合はマップフィーチャーです。マーカー ("Marker") を返します。
# Description: 
Marker__TitlePropertyDescriptions=ユーザーがマーカーをクリックしたときに表示される情報ウィンドウに表示されるタイトル。
# Description: 
Marker__StrokeWidthPropertyDescriptions=マーカーのアウトラインを描くストロークの幅。
# Description: 
Marker__StrokeColorPropertyDescriptions=マーカーのアウトラインを描くのに使用するペイントの色。
# Description: 
Marker__ShowInfoboxMethodDescriptions=マーカーのインフォボックスを表示します。これは、EnableInfobox（有効化インフォボックス ）が false に設定されている場合でも、インフォボックスを表示します。
# Description: 
Marker__SetLocationMethodDescriptions=マーカーの位置を設定します。
# Description: 
Marker__LongitudePropertyDescriptions=`マーカー`の経度を度単位で設定または取得します。正の値は本初子午線より東、負の値は本初子午線より西を表します。経度を更新するには
# Description: 
Marker__LongClickEventDescriptions=ユーザーがマーカーを長押ししました。このイベントは Draggable（ドラッグ可能）が false の場合のみ発生します。
# Description: 
Marker__LatitudePropertyDescriptions=`マーカー`の緯度を度単位で設定または取得します。正の値は赤道の北、負の値は赤道の南を表します。`緯度`と
# Description: 
Marker__HeightPropertyDescriptions=`マーカー`の垂直方向の高さをピクセル単位で指定します。
# Description: 
Marker__HeightPercentPropertyDescriptions=マーカーの垂直方向の高さを [`スクリーン`'' の `高さ`](userinterface.html#Screen.Height) に対するパーセンテージで指定します。
# Description: 
Marker__FillColorPropertyDescriptions=マーカーを塗りつぶすのに使うペイントの色。
# Description: 
Marker__EnableInfoboxPropertyDescriptions=ユーザーがマーカーをタップしたときに、インフォボックスウィンドウを表示するかどうかを設定します。
# Description: 
Marker__DraggablePropertyDescriptions=Draggable（ドラッグ可能）プロパティは、長押ししてマーカーを新しい場所にドラッグできるかどうかを設定するために使用します。
# Description: 
Marker__DragEventDescriptions=ユーザーがマーカーをドラッグしました。
# Description: 
Marker__DistanceToPointMethodDescriptions=マーカーと緯度経度点間の距離をメートル単位で計算します。
# Description: 
Marker__DescriptionPropertyDescriptions=ユーザーがマーカーをクリックしたときに情報ウィンドウに表示される説明です。
# Description: 
Marker__ClickEventDescriptions=ユーザーがマーカーをクリックしました。
# Description: 
MarkerHelpStringComponentPallette=<p>地図上の情報を示すためにポイントに配置されるアイコンです。マーカーは、ユーザーに情報を伝えるために、情報ウィンドウ、カスタム塗りつぶし色とカスタム描線色、カスタム画像を提供するために使用できます。</p>
# Description: 
Map__WidthPropertyDescriptions=マップの横幅をピクセル単位で指定します。
# Description: 
Map__WidthPercentPropertyDescriptions=マップの横幅を画面の横幅に対する割合で指定します。
# Description: 
Map__VisiblePropertyDescriptions=マップを画面に表示するかどうかを指定します。マップが表示されている場合はtrue、非表示の場合はfalseになります。
# Description: 
Map__SaveMethodDescriptions=マップの内容を指定されたパスに保存します。
# Description: 
Map__LongitudePropertyDescriptions=地図の中心の経度。
# Description: 
Map__LatitudePropertyDescriptions=地図の中心の緯度。
# Description: 
Map__HeightPropertyDescriptions=マップの垂直方向の高さをピクセル単位で指定します。
# Description: 
Map__HeightPercentPropertyDescriptions=マップの垂直方向の高さを、スクリーンの高さに対するパーセンテージで指定します。
# Description: 
Map__FeaturesPropertyDescriptions=このマップ上に配置されたフィーチャのリストです。このリストには、FeatureFromDescription（説明からの特徴 ）の呼び出しによって作成されたフィーチャーも含まれます
# Description: 
MapTypePropertyDescriptions=ベースタイルレイヤーに使用するマップタイルのタイプを設定します。有効な値は 1.  2. ロードリアル 3. テレイン
# Description: 
MapTypeProperties=マップタイプ
# Description: 
MapHelpStringComponentPallette=<p>バックグラウンドでマップタイルをレンダリングし、複数のマーカー要素がマップ上のポイントを識別できるようにする 2 次元コンテナです。マップ タイルは、OpenStreetMapの貢献者と米国地質調査所によって提供されています。</p><p>マップ コンポーネントには、App Inventor 内で境界を操作するための 3 つのユーティリティが用意されています。まず、画面上の他のコンポーネントに対してマップを移動できるようにするロック機構が提供されています。次に、ロックが解除されている場合、ユーザーはマップを任意の場所に移動できます。この新しい場所では、「初期境界の設定」が行われます。ボタンを押すと、現在のマップ座標をプロパティに保存できます。最後に、画面外にマーカーを追加するなど、マップを別の場所に移動すると、[マップを初期境界にリセット] ボタンが表示されます。ボタンを使用すると、開始位置で地図の中心を再調整できます。</p>
# Description: 
MakeTimeMethods=時間を作る
# Description: 
MakeTimeMethodDescriptions=UTCの時、分、秒で指定した時刻のインスタンスを返します。
# Description: 
MakePhoneCallMethods=電話をかける
# Description: 
MakePhoneCallMethodDescriptions=携帯番号プロパティの番号を使用して電話を開始するように設定されたデフォルトのダイヤラーアプリを起動します。
# Description: 
MakePhoneCallDirectMethods=直接電話をかける
# Description: 
MakePhoneCallDirectMethodDescriptions=形態暗号プロパティの番号を使用して、直接電話をかけます。
# Description: 
MakeNewInstanceMethods=新しいインスタンスの作成
# Description: 
MakeNewInstanceMethodDescriptions=このゲームの新しいインスタンスを作成するようにサーバーに要求します。
# Description: 
MakeInstantMethods=インスタントを作成
# Description: 
MakeInstantMethodDescriptions=MM/dd/YYYY hh:mm:ssまたはMM/dd/YYYYまたはhh:mmで指定された時間のインスタンスを返します。
# Description: 
MakeInstantFromPartsMethods=パーツから瞬時に作成
# Description: 
MakeInstantFromPartsMethodDescriptions=年、月、日付、時、分、秒（UTC）を指定して、その瞬間の時刻を返します。
# Description: 
MakeInstantFromMillisMethods=ミリ秒からのインスタントの作成
# Description: 
MakeInstantFromMillisMethodDescriptions=1970年からのミリ秒（UTC）を返します。
# Description: 
MakeFullPathMethods=フルパスを作成
# Description: 
MakeFullPathMethodDescriptions=他のコンポーネントのために、スコープとパスを単一の文字列に変換します。
# Description: 
MakeDirectoryMethods=ディレクトリを作成
# Description: 
MakeDirectoryMethodDescriptions=ファイルを格納するための新しいディレクトリを作成します。このメソッドのセマンティクスは、完了時にディレクトリが存在すれば真を返すというものです。これは、呼び出す前に既にディレクトリが存在していたことを意味します。
# Description: 
MakeDateMethods=作成日
# Description: 
MakeDateMethodDescriptions=年、月、日付（UTC）で指定した瞬間の時刻を返します。月フィールドの有効な値は1～12、日フィールドの有効な値は1～31です。
# Description: 
MagnitudePropertyDescriptions=デバイスがどれだけ傾いているかを示す0から1の間の数値を返します。これは、デバイスの表面を転がるボールが感じる力の大きさを示します。傾きの角度は
# Description: 
MagnitudeProperties=マグニチュード
# Description: 
MagneticFieldSensor__MaximumRangePropertyDescriptions=磁気センサーが到達できる最大範囲を示します。
# Description: 
MagneticFieldSensor__EnabledPropertyDescriptions=磁界センサーが有効で動作しているかどうかを示します。
# Description: 
MagneticFieldSensor__AvailablePropertyDescriptions=装置内に磁界センサーがあり、利用可能であることを示します。
# Description: 
MagneticFieldSensorHelpStringComponentPallette=<p>テスラ https://en.wikipedia.org/wiki/Tesla_(unit) の 3 つの物理軸 (x,y,z) すべての周囲の地磁気を測定する目に見えないコンポーネントです。</p>
# Description: 
MagneticChangedEvents=磁気変更
# Description: 
MagneticChangedEventDescriptions=磁場が変化したときにトリガーし、パラメーターに新しい値を設定します。
# Description: 
LuxPropertyDescriptions=センサーが利用可能で有効な場合、最新の光量（ルクス単位）。
# Description: 
LuxProperties=ルクス
# Description: 
LsWriteMethods=Ls書き込み
# Description: 
LsWriteMethodDescriptions=ロボットの入力センサーに低速データを書き込みます。SetInputMode（入力モード設定）でセンサーのタイプが設定されていることを前提とします。
# Description: 
LsReadMethods=Ls読み込み
# Description: 
LsReadMethodDescriptions=ロボットの入力センサーから符号なし低速データを読み込みます。センサーのタイプが SetInputMode （入力モード設定）で設定されていることを前提とします。
# Description: 
LsGetStatusMethods=Lsがステータス取得
# Description: 
LsGetStatusMethodDescriptions=読み込み可能なバイト数を返します。
# Description: 
LostFocusEvents=フォーカスの喪失
# Description: 
LoopPropertyDescriptions=trueの場合、プレーヤーの再生時にループします。プレーヤーの再生中にLoopを設定すると、現在の再生に影響します。
# Description: 
LoopProperties=ループ(loop)
# Description: 
LongitudeProperties=経度
# Description: 
LongitudeFromAddressMethods=住所からの経度
# Description: 
LongitudeFromAddressMethodDescriptions=指定された住所の経度を求める
# Description: 
LongPressAtPointEvents=ポイントで長押し
# Description: 
LongPressAtPointEventDescriptions=ユーザーはマップ上のある地点を長押ししました。
# Description: 
LongClickEvents=ロングクリック
# Description: 
LoginMethodDescriptions=TwitterのAPIは、ユーザー名とパスワードによるログインをサポートしなくなりました。代わりにAuthorizeコールを使用してください。
# Description: 
LogWarningMethods=ログ警告
# Description: 
LogWarningMethodDescriptions=Androidのログに警告メッセージを書き込みます。ログへのアクセス方法については、Google Androidのドキュメントを参照してください。
# Description: 
LogInfoMethods=ログインフォ
# Description: 
LogInfoMethodDescriptions=Androidログに情報メッセージを書き込みます。
# Description: 
LogErrorMethods=ログエラー
# Description: 
LogErrorMethodDescriptions=Androidのシステムログにエラーメッセージを書き込みます。ログへのアクセス方法については、Google Androidのドキュメントを参照してください。
# Description: 
LocationSensor__LongitudePropertyDescriptions=利用可能な最新の経度値（度単位、小数点以下5桁まで）です。利用可能な値がない場合は0が返されます。経度は180（東）から-180（西）の間の値で、0は本初子午線を示します。
# Description: 
LocationSensor__LatitudePropertyDescriptions=直近に利用可能な緯度値を度単位で小数点以下5桁まで報告します。利用可能な値がない場合は0が返されます。緯度は90（北）から-90（南）の間の値で、0は赤道を示します。
# Description: 
LocationSensor__EnabledPropertyDescriptions=センサーが位置の変化をリッスンし、対応するイベントを発生させることをユーザーが指定したかどうかを示します。
# Description: 
LocationSensorPropertyDescriptions=内蔵の位置情報プロバイダーではなく、提供されたロケーションセンサーをユーザーの位置情報に使用します。
# Description: 
LocationSensorProperties=位置センサー
# Description: 
LocationSensorHelpStringComponentPallette=経度、緯度、高度 (デバイスでサポートされている場合)、速度 (デバイスでサポートされている場合)、住所などの位置情報を提供する非表示コンポーネントです。また、「ジオコーディング」を実行して、指定された住所 (必ずしも現在の住所であるとは限りません) を緯度 (<code>LatitudeFromAddress</code> メソッドを使用) と経度 (<code>LongitudeFromAddress</code> メソッドを使用) に変換することもできます。 ).</p><p>機能するには、コンポーネントの <code>Enabled</code> プロパティが True に設定されている必要があり、デバイスではワイヤレス ネットワークまたは GPS 衛星 (屋外の場合) を介した位置検出が有効になっている必要があります。 .</p>アプリの起動時に位置情報がすぐに利用できない場合があります。位置情報プロバイダーが見つかって使用されるまで少し待つか、位置変更イベントを待つ必要があります
# Description: 
LocationChangedEvents=位置変更
# Description: 
LocationChangedEventDescriptions=新しい場所が検出されたことを示します。
# Description: 
LoadingDialogMessagePropertyDescriptions=ロードダイアログのメッセージのセッター(setter)。
# Description: 
PlayOnlyInForegroundProperties=フォアグラウンドのみでプレイ
# Description: 
PlayMethods=プレイ
# Description: 
PlayMethodDescriptions=Source（ソース）プロパティで指定されたサウンドを再生します。
# Description: 
PlatformVersionPropertyDescriptions=4.2.2や10.0など、プラットフォームのドット付きバージョン番号です。これはプラットフォーム固有のものであり、特定のフォーマットであることを保証するものではありません。
# Description: 
PlatformVersionProperties=プラットフォームバージョン
# Description: 
PlatformPropertyDescriptions="Android "や "iOS"など、アプリが動作しているプラットフォームです。
# Description: 
PlatformProperties=プラットフォーム
# Description: 
PitchProperties=ピッチ
# Description: 
LoadingDialogMessageProperties=ダイアログメッセージの読み込み
# Description: 
LoadFromURLMethods=フィーチャーの獲得
# Description: 
LoadFromURLMethodDescriptions=</p><p>与えられたURLから <a href="https://en.wikipedia.org/wiki/GeoJSON">GeoJSON</a> フォーマットの特徴コレクションを読み込みます。成功すると、GotFeatures （フィーチャー獲得）イベントが、与えられたURLと、(キー, 値) ペアのリストとして Geo JSON から解析された特徴のリストと共に発生します。失敗すると、該当する HTTP レスポンスコードとエラーメッセージと共に読み込みエラーイベントが発生します。</p>
# Description: 
LoadErrorEvents=読み込みエラー
# Description: 
LoadErrorEventDescriptions=指定した URL で GeoJSON ドキュメントを処理中にエラーが発生しました。レスポンスコードパラメーターには HTTP ステータスコードが含まれ、エラーメッセージパラメーターには詳細なエラーメッセージが含まれます。
# Description: 
ListView__WidthPropertyDescriptions=ビュー上のリストの幅を決定します。
# Description: 
ListView__WidthPercentPropertyDescriptions=リストビューの横幅をスクリーンの横幅に対するパーセンテージで指定します。
# Description: 
ListView__VisiblePropertyDescriptions=リストビューを画面に表示するかどうかを指定します。リストビューが表示されている場合はtrue、非表示の場合はfalseとなります。
# Description: 
ListView__TextColorPropertyDescriptions=リストビューの文字色ストリングアイテム。
# Description: 
ListView__ShowFilterBarPropertyDescriptions=ショーフィルターバー（フィルターバーの表示） の可視性を設定します。True を設定するとフィルターバーが表示され、False を設定すると非表示になります。
# Description: 
ListView__SelectionPropertyDescriptions=リストビューで最後に選択されたテキストを返します。
# Description: 
ListView__SelectionIndexPropertyDescriptions=現在選択されている項目のインデックスで、1から始まります。項目が選択されていない場合、値は0になります。この値を1未満またはリストビューのストリングアイテムの数より大きい値に設定しようとすると、セレクションインデックスは0に設定され、セレクションは空のテキストに設定されます。
# Description: 
ListView__HeightPropertyDescriptions=ビュー上のリストの高さを決定します。
# Description: 
ListView__HeightPercentPropertyDescriptions=リストビューの垂直方向の高さを、スクリーンの高さに対するパーセンテージで指定します。
# Description: 
ListView__FontTypefacePropertyDescriptions=ラベルのテキストのフォントフェイスをデフォルト、セリフ、サンセリフ、等幅で返します。
# Description: 
ListView__FontSizePropertyDescriptions=リストビューの文字サイズ文字列アイテム。
# Description: 
ListView__ElementsPropertyDescriptions=リストビューに表示する要素のリスト。リストビューによっては、文字列のリストか、テキスト、説明、画像ファイル名を含む3要素のサブリストのリストになります。
# Description: 
ListView__ElementsFromStringPropertyDescriptions=文字列アイテムをカンマで区切った文字列として指定されたテキストビュー要素： チーズ、果物、ベーコン、大根。カンマより前の各単語がリストの要素になります。
# Description: 
ListView__BackgroundColorPropertyDescriptions=リストビューの背景色。
# Description: 
ListView__AfterPickingEventDescriptions=リストで要素が選択された後に発生するシンプルなイベントです。選択された要素はセレクションプロパティで利用できます。
# Description: 
ListViewLayoutPropertyDescriptions=表示するために選択されたレイアウトのタイプを返します。デザイナー専用プロパティです。
# Description: 
TurnClockwiseIndefinitelyMethodDescriptions=左側の駆動モーターを前進方向に駆動し、右側の駆動モーターを逆方向に駆動して、最大出力の指定された割合でロボットを時計回りに無限に回転させます。
# Description: 
TurnCounterClockwiseIndefinitelyMethodDescriptions=右の駆動モーターを前方に、左の駆動モーターを後方に駆動して、最大出力の指定された割合でロボットを反時計回りに無限に回転させます。
# Description: 
TutorialURLPropertyDescriptions=プロジェクトの編集中にチュートリアル サイドバーを設定するために使用する URLです。 教材として使用されます。
# Description: 
TwitPic_API_KeyPropertyDescriptions=TwitPicAPIkeyプロパティのゲッター メソッド。
# Description: 
UnauthenticateMethodDescriptions=コンパニオンで問題が発生し、異なる Firebaseアカウント間で切り替える場合は、この機能を使用して内部 Firebaseキャッシュをクリアする必要がある場合があります。 ブロックエディターでこのブロックに対して「Do It」機能を使用するだけです。 注: 通常、このブロックをアプリケーションの一部として使用する必要はありません。
# Description: 
UnitPropertyDescriptions=距離の単位を指定します。
# Description: 
UpdateDoneEventDescriptions=クラウドDBにデータを保存する操作が完了したことを示します。
# Description: 
UriDecodeMethodDescriptions=エンコードされたテキスト値をデコードして、値が URL エンコードされなくなるようにします。
# Description: 
UriEncodeMethodDescriptions=エンコードされたテキスト値をデコードして、値が URL エンコードされなくなるようにします。
# Description: 
UrlPropertyDescriptions=WebリクエストのURL。
# Description: 
Translator__GotTranslationEventDescriptions=翻訳サービスが翻訳されたテキストを返すときにトリガーされるイベントです。 このイベントは、エラー処理のための応答コードも提供します。 responseCode（レスポンスコード）が 200 でない場合は、呼び出しで問題が発生したため、翻訳は利用できません。
# Description: 
Translator__RequestTranslationMethodDescriptions=このメソッドは、翻訳先のターゲット言語 (たとえば、スペイン語の場合は「es」、英語の場合は「en」、ロシア語の場合は「ru」)、および翻訳する単語または文を指定することによって、 翻訳。テキストが外部サービスによって翻訳されると、イベント GotTranslation（翻訳を取得）が実行されます。注: Translate はソース言語の検出を試みます。 言語翻訳の前に追加するように指定することもできます。 つまり、es-ru はスペイン語からロシア語への翻訳を指定します。
# Description: 
TransportationMethodPropertyDescriptions=ルートを決定するために使用される輸送方法。
# Description: 
TweetMethodDescriptions=これにより、指定されたユーザーにプライベート メッセージが送信されます。メッセージが 160 文字を超える場合は切り詰められます。 <p><u>要件</u>: これは、ユーザーが Twitter に正常にログインしたことを示します <code>IsAuthorized（認証済み）</code> イベントが発生した後にのみ呼び出す必要があります。</p>
# Description: 
TweetWithImageMethodDescriptions=これにより、指定されたユーザーにプライベート メッセージが送信されます。メッセージが 160 文字を超える場合は切り詰められます。 <p><u>要件</u>: これは、ユーザーが Twitter に正常にログインしたことを示します <code>IsAuthorized（認証済み）</code> イベントが発生した後にのみ呼び出す必要があります。</p>
# Description: 
TwitterHelpStringComponentPallette=<a href="http://www.twitter.com" target="_blank">Twitter</a> との通信を可能にする非表示のコンポーネント。 ユーザーが Twitter アカウントにログインすると (そして、認証が <code>IsAuthorized（認証済み）</code> イベントによって成功したことが確認されると)、さらに多くの操作が使用可能になります。<ul><li> Twitter でツイートまたはラベルを検索する (< code>SearchTwitter（検索ツイッタ）</code>)</li><li>ツイートの送信 (<code>Tweet</code>) </li><li>画像付きツイートの送信 (<code>TweetWithImage対―r￥と）（画像付き</code>) ) </li><li> 特定のユーザーにメッセージを送信します (<code>DirectMessage（ダイレクトメッセージ）</code>)</li> <li> ログインしているユーザーに送信された最新のメッセージを受信します (<code>RequestDirectMessages（リクエストダイレクトメッセージ）< /code>)</li> <li> 特定のユーザーのフォロー (<code>Follow</code>)</li><li> 特定のユーザーのフォローの停止 (<code>StopFollowing（フォロー停止）</code>)</ li><li> ログイン ユーザーをフォローしているユーザーのリストを取得します (<code>RequestFollowers（リクエストフォロワー）</code>)</li> <li> ログイン ユーザーがフォローしているユーザーの最新メッセージを取得します (<code> >RequestFriendTimeline（フレンドタイムラインのリクエスト）</code>)</li> <li> ログイン ユーザーの最新のメンションを取得します (<code>RequestMentions（メンションリクエスト）</code>)</li></ul></p> <p> アプリに固有の Twitter 認証用のコンシューマ キーとコンシューマ シークレットを http://twitter.com/oauth_clients/new から取得する必要があります。
# Description: 
SpreadsheetXColumnProperties=スプレッドシートXカラム（列）
# Description: 
SpreadsheetYColumnProperties=スプレッドシートカラム（列）
# Description: 
SpreadsheetYColumnPropertyDescriptions=y値のために、添付のスプレッドシートコンポーネントから解析する列を設定します。列が指定されない場合は、代わりにy値のデフォルト値が生成されます。
# Description: 
Spreadsheet__ErrorOccurredEventDescriptions=APIコールがエラーに遭遇するたびにトリガーされます。エラーの詳細は `エラーメッセージ` に記載されます。
# Description: 
StartActivityMethods=スタートアクティビティ
# Description: 
StartDragEventDescriptions=ユーザーがドラッグ操作を開始しました。
# Description: 
StartDragEvents=スタートドラッグ
# Description: 
StartLatitudeProperties=スタート緯度
# Description: 
StartLocationProperties=開始位置
# Description: 
StartLatitudePropertyDescriptions=スタート地点の緯度。
# Description: 
StartLocationPropertyDescriptions=スタート地点を設定します。
# Description: 
StartLongitudeProperties=開始経度
# Description: 
StartLongitudePropertyDescriptions=スタート地点の経度。
# Description: 
StartMethods=スタート
# Description: 
StartProgramMethodDescriptions=事前にダウンロードしたプログラムをロボット上で実行開始します。
# Description: 
StartProgramMethods=スタートプログラム
# Description: 
StartedMovingEventDescriptions=このイベントは廃止されました。
# Description: 
StartedMovingEvents=移動開始
# Description: 
StartedRecordingEventDescriptions=レコーダーが起動し、停止できることを示します。
# Description: 
StartedRecordingEvents=録音開始
# Description: 
StatusChangedEventDescriptions=プロバイダが失われたり、新しいプロバイダが使用され始めたりするなど、ロケーションプロバイダサービスのステータスが変更されたことを示します。
# Description: 
StatusChangedEvents=ステータスの変更
# Description: 
StopAcceptingMethodDescriptions=着信接続の受け付けを停止します。
# Description: 
StopAcceptingMethods=受け入れ停止
# Description: 
StopBeforeDisconnectProperties=切断前に停止
# Description: 
StopDetectionTimeoutProperties=停止検出タイムアウト
# Description: 
StopDragEventDescriptions=ユーザーがドラッグ操作を中止しました。
# Description: 
StopDragEvents=ドラッグの停止
# Description: 
StopFollowingMethodDescriptions=ユーザーのフォローを停止する。
# Description: 
StopFollowingMethods=フォローをやめる
# Description: 
StopLoadingMethodDescriptions=ページの読み込みを停止します。
# Description: 
StopLoadingMethods=ロード停止
# Description: 
StopMethods=ストップ
# Description: 
StopProgramMethodDescriptions=ロボット上で現在実行中のプログラムの実行を停止します。
# Description: 
StopProgramMethods=プログラム停止
# Description: 
StopSoundMethodDescriptions=ロボットの音を止めます。
# Description: 
StopSoundMethods=停止音
# Description: 
StopSoundPlaybackMethodDescriptions=サウンド再生を停止します。
# Description: 
StoppedMovingEventDescriptions=このイベントは廃止されました。
# Description: 
StoppedMovingEvents=移動停止
# Description: 
StoppedRecordingEvents=レコーディング停止
# Description: 
StoreValueMethods=ストアバリュー
# Description: 
StrideLengthProperties=歩長
# Description: 
StrideLengthPropertyDescriptions=平均歩幅をメートル単位で設定します。
# Description: 
StrokeColorProperties=ストロークカラー
# Description: 
StrokeWidthProperties=ストローク幅
# Description: 
Switch__BackgroundColorPropertyDescriptions=スイッチの背景色をアルファ-赤-緑-青の整数で指定します。
# Description: 
Switch__ChangedEventDescriptions=ユーザーは`スイッチ`の状態をオンからオフに変更したり、戻したりすることができます。
# Description: 
Switch__EnabledPropertyDescriptions=スイッチがアクティブでクリック可能であればtrue。
# Description: 
Switch__FontBoldPropertyDescriptions=スイッチのテキストを太字にする場合はtrueを設定します。
# Description: 
Switch__FontItalicPropertyDescriptions=スイッチのテキストをイタリック体にする場合はtrueを設定します。
# Description: 
Switch__FontTypefacePropertyDescriptions=スイッチの文字書体を指定します。
# Description: 
Switch__GotFocusEventDescriptions=スイッチはフォーカスされたコンポーネントとなりました。
# Description: 
Switch__HeightPropertyDescriptions=スイッチの垂直方向の高さをピクセル単位で指定します。
# Description: 
Switch__LostFocusEventDescriptions=スイッチはフォーカスされたコンポーネントではなくなりました。
# Description: 
Switch__WidthPercentPropertyDescriptions=スイッチの横幅を画面の横幅に対する割合で指定します。
# Description: 
Switch__WidthPropertyDescriptions=スイッチの横幅をピクセル単位で指定します。
# Description: 
SystemProperties=システム
# Description: 
SystemTimeMethodDescriptions=電話の内部時間を返します。
# Description: 
SystemTimeMethods=システム時間
# Description: 
TableArrangementHelpStringComponentPallette=<p>表形式で表示されるべきコンポーネントを配置するためのフォーマット要素。</p>
# Description: 
TableArrangement__ColumnsPropertyDescriptions=カラムプロパティゲッターメソッド。
# Description: 
TableArrangement__HeightPropertyDescriptions=テーブル配置の垂直方向の高さをピクセル単位で指定します。
# Description: 
TableArrangement__RowsPropertyDescriptions=Rows（行）プロパティゲッターメソッド。
# Description: 
TableArrangement__WidthPercentPropertyDescriptions=テーブル配置の水平方向の幅を、スクリーンの幅に対するパーセンテージで指定します。
# Description: 
TachoCountChangedEventDescriptions=tacho（タコ）カウントが変更されたときに呼び出されます。
# Description: 
TachoCountChangedEventEnabledProperties=tacho（タコ）カウント変更イベント有効
# Description: 
TachoCountChangedEventEnabledPropertyDescriptions=角度が変更されたときにtacho（タコ）カウント変更イベントを発生させるかどうか。
# Description: 
TachoCountChangedEvents=tacho（タコ）カウントの変更
# Description: 
TagListEvents=タグリスト
# Description: 
TagReadEvents=タグを読む
# Description: 
TagWrittenEvents=タグ付き
# Description: 
TakePictureMethodDescriptions=写真を撮影し、その後
# Description: 
TapAtPointEventDescriptions=ユーザーは地図上のある地点をタップしました。
# Description: 
TapAtPointEvents=タップポイント
# Description: 
TapThresholdProperties=しきい値をタップ
# Description: 
TextAlignmentProperties=テキスト配置
# Description: 
TextColorDetailProperties=テキストカラー詳細
# Description: 
TextColorProperties=テキストカラー
# Description: 
TextInputCanceledEvents=テキスト入力キャンセル
# Description: 
TextSizeProperties=テキストサイズ
# Description: 
TextToSpeech__ResultPropertyDescriptions=trueを返す
# Description: 
TextToSpeech__StopMethodDescriptions=現在のスピーチを停止します。
# Description: 
TextToWriteProperties=テキスト書き込み
# Description: 
TextToWritePropertyDescriptions=タグに書き込まれるテキストの内容を返します。
# Description: 
ThumbColorActiveProperties=Thum（サム）カラーアクティブ
# Description: 
ThumbEnabledProperties=Thumb（サム）有効
# Description: 
ThumbPositionProperties=thumb（サム）の位置
# Description: 
TimeIntervalProperties=時間間隔
# Description: 
TopOfRangeProperties=範囲のトップ
# Description: 
TouchDownEvents=タッチダウン
# Description: 
TouchUpEvents=タッチアップ
# Description: 
TouchedEvents=タッチした
# Description: 
TrackColorActiveProperties=トラックカラーアクティブ
# Description: 
TrackColorInactiveProperties=トラックカラーインアクティブ
# Description: 
SpreadsheetUseHeadersPropertyDescriptions=チェックした場合は、スプレッドシートの最初の行を使用して x 列と y 列の値を解釈します。そうでない場合は、x列とy列はAやBのような列参照でなければなりません。
# Description: 
SpreadsheetXColumnPropertyDescriptions=x 値について、添付のスプレッドシート・コンポーネントから解析する列を設定します。列が指定されない場合、x値のデフォルト値が代わりに生成されます。
# Description: 
StartActivityMethodDescriptions=このActivityStarter（アクティビティスターター）に対応するアクティビティを開始します。
# Description: 
StopDetectionTimeoutPropertyDescriptions="停止"状態に移行するまでのアイドル状態（歩数が検出されない）の時間（ミリ秒単位）
# Description: 
StopSoundPlaybackMethods=サウンド再生の停止
# Description: 
StoppedRecordingEventDescriptions=レコーダーが停止し、再度起動できることを示します。
# Description: 
StrokeOpacityProperties=ストローク不透明度
# Description: 
StrokeOpacityPropertyDescriptions=マップフィーチャーの輪郭を描くのに使われるストロークの不透明度。
# Description: 
SwitchHelpStringComponentPallette=ユーザーがクリックするとイベントが発生するトグルスイッチです。外観に影響する多くのプロパティがあり、デザイナーや ブロックエディター で設定できます。
# Description: 
Switch__FontSizePropertyDescriptions=本装置のテキストフォントサイズを、スケールに依存しないピクセル単位で指定します。
# Description: 
Switch__HeightPercentPropertyDescriptions=スイッチの垂直方向の高さを、画面の高さに対する割合で指定します。
# Description: 
Switch__TextColorPropertyDescriptions=スイッチの文字色をアルファ-赤-緑-青の整数で指定します。
# Description: 
Switch__TextPropertyDescriptions=スイッチが表示するテキストを指定します。
# Description: 
Switch__VisiblePropertyDescriptions=スイッチを画面上に表示するかどうかを指定します。表示されている場合はtrue、非表示の場合はfalseとなります。
# Description: 
SystemPropertyDescriptions=ChatGPTに与えられる "システム "の値です。これは会話のトーンを設定するために使用されます。例えば  "あなたは面白い人ですね。 "
# Description: 
TableArrangement__HeightPercentPropertyDescriptions=テーブル配置 の垂直方向の高さを、スクリーンの高さに対するパーセンテージで指定します。
# Description: 
TableArrangement__VisiblePropertyDescriptions=テーブル配置を画面に表示するかどうかを指定します。テーブル配置が表示されている場合は true、非表示の場合は false となります。
# Description: 
TableArrangement__WidthPropertyDescriptions=テーブル配置の横幅をピクセル単位で指定します。
# Description: 
TagListEventDescriptions=既知のタグのリストを受け取ったときにトリガーされるイベントです。"タグリストの取得 "関数で使用します。
# Description: 
ThumbColorInactiveProperties=Thumb（サム）カラーインアクティブ
# Description: 
TransportationMethodProperties=輸送方法
# Description: 
TurnClockwiseIndefinitelyMethods=時計回りに無限に回す
# Description: 
TurnCounterClockwiseIndefinitelyMethods=反時計回りに無限に回す
# Description: 
TutorialURLProperties=チュートリアルURL
# Description: 
TweetMethods=ツイート
# Description: 
TweetWithImageMethods=画像付きツイート
# Description: 
TwitPic_API_KeyProperties=TwitPic_API_キー
# Description: 
TypeProperties=タイプ
# Description: 
UnauthenticateMethods=認証解除
# Description: 
UnitProperties=単位
# Description: 
UnspecifiedPropertyCategory=不明
# Description: 
UpdateDoneEvents=アップデート完了
# Description: 
UriDecodeMethods=Uriデコード
# Description: 
UrlProperties=Url
# Description: 
UriEncodeMethods=Uriエンコード
# Description: 
UseExternalScannerProperties=外部スキャナーの使用
# Description: 
UseFrontPropertyDescriptions=前面カメラを使用する場合はtrueを返します（使用可能な場合）
# Description: 
UseExternalScannerPropertyDescriptions=True の場合、App Inventor は "Bar Code Scanner（バーコードスキャナー）" などの外部スキャン プログラムを検索して使用します
# Description: 
UseFrontProperties=フロントを使用
# Description: 
UseGPSProperties=GPSを使用
# Description: 
UseGPSPropertyDescriptions=このプロパティは廃止されました。
# Description: 
UseLegacyProperties=レガシーを使用
# Description: 
UseLegacyPropertyDescriptions=trueの場合、アプリは古い動作を保持できます。
# Description: 
UseSSLProperties=SSLを使用
# Description: 
UseSSLPropertyDescriptions=クラウドDB/Redisサーバとの通信にSSLを使用する場合はTrueに設定します。DEFAULT "サーバーではTrueに設定してください。
# Description: 
UseServiceAuthenticationProperties=サービス認証を使用する
# Description: 
UseServiceAuthenticationPropertyDescriptions=認証にサービスアカウントを使用するかどうかを示します
# Description: 
UserChoicePropertyDescriptions=サーバーに送信する投票の選択肢です。<code>SendBallot（投票用紙の送信）</code> が呼び出される前に設定する必要があります。これは <code>BallotOption（投票オプション）s</code> のいずれかである必要があります。
# Description: 
UserEmailAddressProperties=ユーザーEメールアドレス
# Description: 
UserEmailAddressSetEventDescriptions=ユーザーの電子メールアドレスが設定されたことを示します。
# Description: 
UserEmailAddressSetEvents=ユーザーEメールアドレス設定
# Description: 
UserIdProperties=ユーザーID
# Description: 
UserIdPropertyDescriptions=投票とともに投票サーバーに送信される、投票者を識別するテキストです。これは、<code>SendBallot（投票用紙の送信）</code> が呼び出される前に設定する必要があります。
# Description: 
UserLatitudeProperties=ユーザー緯度
# Description: 
UserLatitudePropertyDescriptions=ShowUser（ユーザーを表示）が有効な場合、ユーザーの緯度を返します。
# Description: 
UserLongitudeProperties=ユーザー経度
# Description: 
UserLongitudePropertyDescriptions=ShowUser（ユーザーを表示）が有効な場合、ユーザーの経度を返します。
# Description: 
UsernameProperties=ユーザーネーム
# Description: 
UsernamePropertyDescriptions=認証ユーザーのユーザー名です。認可ユーザーがいない場合は空です。
# Description: 
UsesLocationProperties=使用場所
# Description: 
ValueStoredEventDescriptions=StoreValue（ストア値）サーバーリクエストが成功したことを示すイベントです。
# Description: 
ValueStoredEvents=バリューストア
# Description: 
VersionCodeProperties=バージョンコード
# Description: 
VersionNameProperties=バージョンネーム
# Description: 
VersionNamePropertyDescriptions=Google Playストアのユーザーが異なるバージョンのアプリを区別できるように変更可能な文字列です。
# Description: 
VerticalArrangement__AlignVerticalPropertyDescriptions=VerticalArrangement（縦配列）の内容をどのように垂直方向に整列させるかを示す数値です。選択肢は以下の通り： 1 = 上端揃え、2 = 垂直中央揃え、3 = 下端揃え。配置の高さが自動の場合、整列は影響しません。
# Description: 
VerticalArrangement__HeightPercentPropertyDescriptions=VerticalArrangement（縦配列）の垂直方向の高さを、スクリーンの高さに対するパーセンテージで指定します。
# Description: 
VerticalArrangement__HeightPropertyDescriptions=VerticalArrangement（縦配列）の垂直方向の高さをピクセル単位で指定します。
# Description: 
VerticalArrangement__ImagePropertyDescriptions=`VerticalArrangement（縦配列）`の背景画像のパスを返します。
# Description: 
VerticalArrangement__WidthPercentPropertyDescriptions=VerticalArrangement（縦配列）の水平方向の幅を、スクリーンの幅に対するパーセンテージで指定します。
# Description: 
VerticalScrollArrangement__BackgroundColorPropertyDescriptions=VerticalScrollArrangement（垂直スクロール配列）の背景色を返します
# Description: 
VerticalScrollArrangement__HeightPercentPropertyDescriptions=VerticalScrollArrangement（垂直スクロール配列）の垂直方向の高さを、スクリーンの高さに対するパーセンテージで指定します。
# Description: 
VerticalScrollArrangement__HeightPropertyDescriptions=VerticalScrollArrangement（垂直スクロール配列 ）の垂直方向の高さをピクセル単位で指定します。
# Description: 
VerticalScrollArrangement__ImagePropertyDescriptions=`VerticalScrollArrangement（垂直スクロール配列）` の背景画像のパスを返します。
# Description: 
VerticalScrollArrangement__VisiblePropertyDescriptions=VerticalScrollArrangement（垂直スクロール配列）を画面に表示するかどうかを指定します。値は、VerticalScrollArrangement（垂直スクロール配列）が表示されている場合は true、非表示の場合は false です。
# Description: 
VerticalScrollArrangement__WidthPercentPropertyDescriptions=VerticalScrollArrangement（垂直スクロール配列）の水平方向の幅を、スクリーンの幅に対するパーセンテージで指定します。
# Description: 
VerticalScrollArrangement__WidthPropertyDescriptions=VerticalScrollArrangement（垂直スクロール配列）の水平方向の幅をピクセル単位で指定します。
# Description: 
VibrateMethods=振動
# Description: 
VideoPlayerErrorEventDescriptions=ビデオプレーヤーエラーイベントは使用されなくなりました。代わりに Screen.ErrorOccurred（スクリーン.エラーが発生しました）イベントを使用してください。
# Description: 
VideoPlayer__CompletedEventDescriptions=動画が終了したことを示します
# Description: 
VideoPlayer__HeightPercentPropertyDescriptions=VideoPlayer（ビデオプレーヤー）の垂直方向の高さを、スクリーンの高さに対するパーセンテージで指定します。
# Description: 
VideoPlayer__HeightPropertyDescriptions=コンポーネントの垂直方向の高さをピクセル単位で指定します。
# Description: 
VideoPlayer__StartMethodDescriptions=ビデオの再生を開始します。
# Description: 
VideoPlayer__VolumePropertyDescriptions=音量を0から100の間の数値に設定します。0より小さい値は0として扱われ、100より大きい値は100として扱われます。
# Description: 
VideoPlayer__WidthPercentPropertyDescriptions=VideoPlayer（ビデオプレーヤー）の横幅を、スクリーンの横幅に対するパーセンテージで指定します。
# Description: 
VideoPlayer__WidthPropertyDescriptions=コンポーネントの横幅をピクセル単位で指定します。
# Description: 
ViewContactMethodDescriptions=URI経由でコンタクトを表示する
# Description: 
ViewContactMethods=連絡先を見る
# Description: 
VolumeProperties=ボリューム
# Description: 
Voting__ServiceURLPropertyDescriptions=投票サービスのURL
# Description: 
Voting__UserEmailAddressPropertyDescriptions=このデバイスに関連付けられた電子メールアドレスです。このプロパティは非推奨となり、常に空のテキスト値を返します。
# Description: 
Voting__WebServiceErrorEventDescriptions=Web サービスとの通信でエラーが発生したことを示すイベントです。
# Description: 
WalkStepEventDescriptions=このイベントは、ウォーキング・ステップが検出されたときに実行されます。ウォーキング・ステップとは、前進運動に関与していると思われるステップのことです。
# Description: 
WalkStepEvents=ウォークステップ
# Description: 
WalkStepsProperties=ウォークステップ
# Description: 
WalkStepsPropertyDescriptions=歩数計を起動してから歩いた歩数。
# Description: The label used to indicate walking navigation.
WalkingNavMethod=ウォーキング
# Description: 
WebHelpStringComponentPallette=HTTP GET, POST, PUT, DELETE リクエストの関数を提供する、目に見えないコンポーネントです。
# Description: 
WebRTCProperties=ウェブRTC
# Description: 
WebServiceErrorEvents=ウェブサービスエラー
# Description: 
WebRTCPropertyDescriptions=サーバーとの通信にウェブRTCを使用するかどうかを設定します
# Description: 
WebViewStringChangeEventDescriptions=JavaScriptがAppInventor.setWebViewStringを呼び出すと、このイベントが実行されます。
# Description: 
WebViewStringChangeEvents=ウェブビュー文字列の変更
# Description: 
WebViewStringProperties=ウェブビュー文字列
# Description: 
WebViewer__ClearCookiesMethodDescriptions=WebViewのクッキーを消去します。
# Description: 
WebViewer__ErrorOccurredEventDescriptions=エラーが発生すると、このイベントが実行されます。
# Description: 
WebViewer__HeightPercentPropertyDescriptions=WebViewerの垂直方向の高さを、スクリーンの高さに対するパーセンテージで指定します。
# Description: 
WebViewer__HeightPropertyDescriptions=`WebViuewer`の垂直方向の高さをピクセル単位で指定します。
# Description: 
WebViewer__VisiblePropertyDescriptions=WebViewerを画面に表示するかどうかを指定します。WebViewerが表示されている場合はtrue、非表示の場合はfalseとなります。
# Description: 
WebViewer__WidthPercentPropertyDescriptions=WebViewerの横幅をスクリーンの横幅に対するパーセンテージで指定します。
# Description: 
WebViewer__WidthPropertyDescriptions=`WebViewer`の横幅をピクセル単位で指定します。
# Description: 
WebXColumnProperties=ウェブXカラム
# Description: 
WebXColumnPropertyDescriptions=x 値について、添付の Web コンポーネントから解析する列を設定します。カラムが指定されない場合、x 値のデフォルト値が代わりに生成されます。
# Description: 
WebYColumnProperties=ウェブYカラム
# Description: 
WebYColumnPropertyDescriptions=y 値について、添付の Web コンポーネントから解析する列を設定します。カラムが指定されていない場合は、代わりに y 値のデフォルト値が生成されます。
# Description: 
Web__ClearCookiesMethodDescriptions=このWebコンポーネントのすべてのCookieを消去します。
# Description: 
Web__GotTextEventDescriptions=リクエストが終了したことを示すイベント。
# Description: 
WeekdayMethodDescriptions=曜日を1（日曜日）から7（土曜日）までの数字で返します。
# Description: 
WeekdayMethods=平日
# Description: 
WeekdayNameMethodDescriptions=インスタントから曜日名を返します。
# Description: 
WeekdayNameMethods=曜日名
# Description: 
WestLongitudeProperties=西経度
# Description: 
WestLongitudePropertyDescriptions=長方形の西端を赤道から東に10進法で示します。
# Description: 
WheelDiameterProperties=ホイールの直径
# Description: The label used to indicate wheelchair navigation.
WheelchairNavMethod=車椅子
# Description: 
WidthPercentProperties=横幅の割合
# Description: 
WidthProperties=横幅
# Description: 
WithinRangeEventEnabledProperties=範囲内イベント有効
# Description: 
WithinRangeEvents=範囲内
# Description: 
WriteCellMethods=書き込みセル
# Description: 
WriteColumnMethods=書き込みカラム
# Description: 
WritePermissionProperties=書き込み許可
# Description: 
WritePermissionPropertyDescriptions=デザイナー専用のプロパティで、アプリ固有のディレクトリ以外のファイルストレージへの書き込みアクセスを有効にするために使用できます。
# Description: 
WriteRangeMethods=書き込み範囲
# Description: 
WriteRowMethodDescriptions=値のリストを `data（データ）` として与えられると、その値をシートの指定された行番号の行に書き込みます。
# Description: 
WriteRowMethods=行の書き込み
# Description: 
WriteSerialMethodDescriptions=指定されたデータをシリアルに書き込みます。
# Description: 
WriteSerialMethods=シリアルの書き込み
# Description: 
WriteTypeProperties=書き込みタイプ
# Description: 
WriteTypePropertyDescriptions=NFC コンポーネントの書き込みタイプを返します。このバージョンのコンポーネントでは、常に `1` です。
# Description: 
XAccelProperties=Xアクセル
# Description: 
XAngularVelocityProperties=X角速度
# Description: 
XAngularVelocityPropertyDescriptions=X軸まわりの角速度（単位：度/秒）。
# Description: 
XFromZeroProperties=０からX
# Description: 
XFromZeroPropertyDescriptions=X軸の原点を0に設定するか、すべてのデータ系列にわたるX値の最小値に設定するかを決定します。
# Description: 
XMLTextDecodeAsDictionaryMethods=XMLテキストをディクショナリとしてデコードする
# Description: 
XMLTextDecodeMethodDescriptions=指定された XML 文字列をデコードして、辞書構造を生成します。詳細については、App Inventor のドキュメント「その他のトピック、注意事項、および詳細」を参照してください。
# Description: 
XMLTextDecodeMethods=XMLテキストデコード
# Description: 
XProperties=X
# Description: 
XStrengthProperties=Xの強さ
# Description: 
XStrengthPropertyDescriptions=フィールドの強さをX軸で示します。
# Description: 
XmlTextParams=Xmlテキスト
# Description: 
XstrengthProperties=Xの強さ
# Description: 
UsesLocationPropertyDescriptions=アプリケーションにJavascriptのジオロケーションAPIの使用許可を与えるかどうか。このプロパティはデザイナーでのみ利用可能です。
# Description: 
VersionCodePropertyDescriptions=Google Playストア用に新しいAndroidアプリケーションパッケージファイル（APK）が作成されるたびにインクリメントされる必要がある整数値です。
# Description: 
VerticalArrangementHelpStringComponentPallette=<p>上下に表示されるコンポーネントを配置する書式設定要素です。 (最初の子コンポーネントは一番上に保存され、2 番目の子コンポーネントはその下に保存されます。) コンポーネントを並べて表示したい場合は、代わりに <code>horizontalArrangement（横配置）</code> を使用してください。</p>
# Description: 
VerticalArrangement__AlignHorizontalPropertyDescriptions=VerticalArrangement（縦配列）の内容が水平方向にどのように配置されるかを示す数値です。選択肢は以下の通り： 1 = 左寄せ、2 = 右寄せ、3 = 中央寄せ。配置の幅が自動の場合、整列は影響しません。
# Description: 
VerticalArrangement__BackgroundColorPropertyDescriptions=VerticalArrangement（縦配列）の背景色を返します
# Description: 
VerticalArrangement__VisiblePropertyDescriptions=VerticalArrangement（縦配列）を画面に表示するかどうかを指定します。VerticalArrangement（縦配列）が表示されている場合はtrue、非表示の場合はfalseとなります。
# Description: 
VerticalArrangement__WidthPropertyDescriptions=VerticalArrangement（縦配列）の水平方向の幅をピクセル単位で指定します。
# Description: 
VerticalScrollArrangementHelpStringComponentPallette=<p>上下に表示されるコンポーネントを配置する書式設定要素です。 (最初の子コンポーネントは一番上に保存され、2 番目の子コンポーネントはその下に保存される、というように) コンポーネントを並べて表示したい場合は、代わりに <code>horizontalArrangement（横配列）</code> を使用してください。</p><p> このバージョンスクロール可能です
# Description: 
VerticalScrollArrangement__AlignHorizontalPropertyDescriptions=VerticalScrollArrangement（縦配列）のコンテンツを水平方向にどのように配置するかをエンコードする数値。選択肢は次のとおりです: 1 = 左揃え、2 = 右揃え、3 = 水平方向の中央揃え。配置の幅が自動の場合、配置は効果がありません。
# Description: 
VerticalScrollArrangement__AlignVerticalPropertyDescriptions=verticalScrollArrangement（垂直スクロール配列 ）の内容がどのように垂直方向に配置されるかをエンコードする数値。選択肢は次のとおりです: 1 = 上揃え、2 = 垂直中央揃え、3 = 下揃え。配置の高さが自動である場合、配置は効果がありません。
# Description: 
VideoPlayerHelpStringComponentPallette=ビデオを再生できるマルチメディア コンポーネントです。アプリケーションを実行すると、ビデオプレーヤーが画面上に長方形として表示されます。ユーザーが四角形に触れると、ビデオ内で再生/一時停止、前方へのスキップ、および後方へのスキップを行うコントロールが表示されます。アプリケーションは、<code>Start</code>、<code>Pause</code>、および <code>SeekTo</code> メソッドを呼び出して動作を制御することもできます。 <p>ビデオ ファイルは 3GPP (.3gp) または MPEG-4 (.mp4) 形式である必要があります。法的な形式の詳細については、<a href="http://developer.android.com/guide/appendix/media-formats.html" target="_blank">Android でサポートされるメディア形式</a>をご覧ください。 p><p>App Inventor for Android では、1 MB 未満のビデオ ファイルのみが許可され、アプリケーションの合計サイズは 5 MB に制限されます。メディア (ビデオ、オーディオ、サウンド) ファイルにはそのすべてが使用できるわけではありません。メディア ファイルが大きすぎる場合、アプリケーションのパッケージ化またはインストール時にエラーが発生する可能性があります。その場合は、メディア ファイルの数またはサイズを減らす必要があります。 Windows ムービー メーカーや Apple iMovie などのほとんどのビデオ編集ソフトウェアは、ビデオを短くしたり、ビデオをよりコンパクトな形式に再エンコードしたりすることで、ビデオのサイズを減らすことができます。</p><p>メディアを設定することもできます。ソースはストリーミング ビデオを指す URL に設定されますが、URL はビデオを再生するプログラムではなく、ビデオ ファイル自体を指す必要があります。
# Description: 
VideoPlayer__PauseMethodDescriptions=ビデオの再生を一時停止します。 <code>Start</code> メソッドを呼び出すことで、同じ場所から再生を再開できます。
# Description: 
VideoPlayer__SourcePropertyDescriptions=動画の"パス"です。通常、これは動画ファイルの名前になり、デザイナーで追加する必要があります。
# Description: 
VideoPlayer__StopMethodDescriptions=ビデオの開始位置にリセットし、ビデオを再生していた場合は一時停止します。
# Description: 
VideoPlayer__VisiblePropertyDescriptions=VideoPlayer（ビデオプレーヤー）を画面に表示するかどうかを指定します。値は、VideoPlayer（ビデオプレーヤー）が表示されている場合は true、非表示の場合は false です。
# Description: 
VisibleProperties=目に見える
# Description: 
VotingHelpStringComponentPallette=投票コンポーネントは Web サービスと通信して投票用紙を取得し、ユーザーの投票を送り返します。 <p>アプリケーションは、Web サービス (< で指定された) から投票の質問とオプションを取得するために、通常は <code>Initialize</code> イベント ハンドラー内でメソッド <code>RequestBallot（投票用紙をリクエスト）</code> を呼び出す必要があります。 code>ServiceURL（サービスURL）</code> プロパティ)。 Web サービスからの応答に応じて、システムは次の 3 つのイベントのいずれかを発生させます: <ol> <li> <code>GotBallot（投票用紙を取得）</code>。投票の質問と選択肢が取得され、プロパティ <code> が取得されたことを示します。 BallotQuestion（投票に関する質問）</code> と <code>BallotOptions（投票オプション）</code> が設定されています。</li> <li> <code>NoOpenPoll（無開票）</code> は、投票の質問が利用できないことを示します。</li> <li> < code>WebServiceError（ウェブサービスエラー）</code> は、サービスが法的な応答を提供しなかったことを示し、エラー メッセージを表示します。</li> </ol></p> <p>投票用紙を取得した後、アプリケーションはユーザーに<code>BallotOptions（投票オプション）</code> の中から選択し、プロパティ <code>UserChoice（ユーザー選択）</code> をその選択に設定します。アプリケーションは、どのユーザーが投票しているかを指定するために <code>UserId（ユーザーID）</code> も設定する必要があります。</p> <p>アプリケーションが <code>UserChoice（ユーザー選択）</code> と <code>UserId（ユーザーID）</code> を設定したら、アプリケーションは <code>SendBallot（投票用紙を送信）</code> を呼び出して、この情報を Web サービスに送信できます。サービスが投票を正常に受信すると、イベント <code>GotBallotconfirmation（投票確認）</code> が発生します。それ以外の場合、イベント <code>WebServiceError（ウェブサービスエラー）</code> が発生し、適切なエラー メッセージが表示されます。</p>
# Description: 
WebViewStringPropertyDescriptions=ウェブビューの文字列を取得します。この文字列は、ウェブビューのJavascriptを通してwindow.AppInventorオブジェクトとして表示可能です
# Description: 
WebViewerHelpStringComponentPallette=Webページを閲覧するためのコンポーネントです。ホーム URL は、デザイナーまたはブロック エディターで指定できます。タップされたときにリンクをたどるようにビューを設定でき、ユーザーは Web フォームに入力できます。警告: これはフルブラウザではありません。たとえば、携帯電話のハードウェアの [戻る] キーを押すと、ブラウザの履歴に戻るのではなく、アプリが終了します。<p />WebViewer.WebViewString（ウェブビュー文字）プロパティを使用して、アプリと Web ビューアで実行されている JavaScript コードの間で通信できます。ページ。アプリでは、WebViewString を取得および設定します。 WebViewer（ウェブViewer）には、</em getWebViewString（ウェブビュー文字列の取得）()</em> および <em>setWebViewString（ウェブビューも文字列の設定）(text)</em> メソッドを使用して、window.AppInventor オブジェクトを参照する Javascriptを組み込みます。 <p />たとえば、WebViewer が Javascriptコマンドを含むページを開いた場合、<br /> <em>document.write("答えは" + window.AppInventor.getWebViewString());</em> < br />そして、WebView.WebVewString を「hello」に設定すると、Web ページには </br ><em>答えは hello です</em>と表示されます。 <br />また、Web ページにコマンド <br /><em>window.AppInventor.setWebViewString("hello from Javascript")</em> を実行する Javascript が含まれている場合、<br />WebViewStringプロパティの値<br /><em>Javascriptから hello</em> になります。
# Description: 
Web__DeleteMethodDescriptions=Url プロパティを使用して HTTP DELETE 要求を実行し、応答を取得します。SaveResponse（サーブレスポンス）プロパティが True の場合、応答はファイルに保存され、GotFile イベントがトリガされます。ResponseFileName（レスポンスファイル名）プロパティを使用して、ファイル名を指定できます。SaveResponse プロパティが False の場合、GotText イベントがトリガされます。
# Description: 
WriteCellMethodDescriptions=テキストまたは数値を `data（データ）` として与えると、その値をセルに書き込みます。完了すると、FinishedWriteCell（終了した書き込みセル）コールバックイベントが発生します
# Description: 
WriteColumnMethodDescriptions=値のリストを `data（データ）` として与えると、このメソッドは値をシートの列に書き込み、完了したら FinishedWriteColumn（終了した書き込みカラム）イベントを呼び出します。
# Description: 
WriteRangeMethodDescriptions=リストのリストを `data（データ）` として与えると、その値を範囲に書き込みます。範囲参照の行数と列数は、データのサイズと一致しなければなりません。
# Description: 
XAccelPropertyDescriptions=X 次元の加速度を SI 単位（m/s²）で返します。意味のある値を返すには、センサーを有効にする必要があります。
# Description: 
XMLTextDecodeAsDictionaryMethodDescriptions=与えられたXMLを、XMLに含まれる構造とデータを捕捉する入れ子のディクショナリのセットにデコードします。詳細はヘルプを参照。
# Description: 
UserChoiceProperties=ユーザー選択
# Description: 
YAccelProperties=Yアクセル
# Description: 
YAccelPropertyDescriptions=Y方向の加速度をSI単位（m/s²）で返します。意味のある値を返すには、センサーを有効にする必要があります。
# Description: 
YAngularVelocityProperties=Y角速度
# Description: 
YAngularVelocityPropertyDescriptions=Y軸まわりの角速度（単位：度/秒）。
# Description: 
YFromZeroProperties=0からY
# Description: 
YFromZeroPropertyDescriptions=Y軸の原点を0に設定するか、すべてのデータ系列にわたるY値の最小値に設定するかを決定します。
# Description: 
YProperties=Y
# Description: 
YStrengthProperties=Y強さ
# Description: 
YStrengthPropertyDescriptions=フィールドの強さをY軸で示します。
# Description: 
YandexTranslate__GotTranslationEventDescriptions=Yandex.翻訳サービスが翻訳されたテキストを返すときに発生するイベントです。このイベントは、エラー処理のためのレスポンスコードも提供します。レスポンスコードが200でない場合、呼び出しに何か問題があり、翻訳は利用できません。
# Description: 
YearMethodDescriptions=その年
# Description: 
YearMethods=年
# Description: 
YearProperties=年
# Description: 
YearPropertyDescriptions=日付ピッカーで最後に選択された年
# Description: 
YstrengthProperties=Y強さ
# Description: 
ZAccelProperties=Z アクセル
# Description: 
ZAccelPropertyDescriptions=Z次元の加速度をSI単位（m/s²）で返します。意味のある値を返すには、センサーを有効にする必要があります。
# Description: 
ZAngularVelocityProperties=Z角速度
# Description: 
ZAngularVelocityPropertyDescriptions=Z軸まわりの角速度（単位：度/秒）。
# Description: 
ZProperties=Z
# Description: 
ZStrengthProperties=Z強さ
# Description: 
ZStrengthPropertyDescriptions=Z軸方向のフィールドの強さを示します。
# Description: 
ZoomChangeEventDescriptions=ユーザーがマップのズームレベルを変更しました。
# Description: 
ZoomChangeEvents=ズーム変更
# Description: 
ZoomLevelProperties=ズームレベル
# Description: 
ZstrengthProperties=Zストレングス（強さ）
# Description: Label of the link for About
aboutMenuItem=概要
# Description: 
absoluteStrengthParams=絶対強度
# Description: 
accelerometerSensorComponentPallette=加速度センサー
# Description: the deleteAccount function threw an error
accountDeletionFailed=プロジェクトの削除に失敗しました
# Description: 
accountDisabledMessage=アカウントが無効になっています
# Description: 
activityStarterComponentPallette=アクティビティスターター
# Description: Text on "Add..." button
addButton=ファイルをアップロード ...
# Description: Label of the button for adding a new screen
addFormButton=スクリーンを追加 ...
# Description: Error message reported when adding a form failed on the server.
addFormError=サーバーエラー: フォームを追加できませんでした。後で再試行してください！
# Description: Text on 'Add' button to continue with screen creation.
addScreenButton=追加
# Description: 
addressParams=住所
# Description: Label of the button leading to admin functionality
adminTabName=管理者
# Description: Error message when user tries to upload aia file as media asset
aiaMediaAsset=このファイルを使用するには、[Projects] > [Import project (.aia) from my computer ...] をクリックします...
# Description: URL for more info on using aia files properly
aiaMediaAssetHelp=http://appinventor.mit.edu/explore/ai2/share.html
# Description: Error message when user tries to upload aia file as media asset
aiaMediaAssetTitle=エラー .aiaファイルをメディア・アセットとしてアップロードできません
# Description: List item in Subset Property Editor
allButton=すべて
# Description: 
altitudeParams=高度
# Description: 
ambientValues=アンビエント
# Description: 
angleParams=角度
# Description: 
angleValues=角度
# Description: 
anomalyDetectionComponentPallette=異常検知
# Description: 
anomalyParams=異常
# Description: Label on any-component branch of block selector tree
anyComponentLabel=任意のコンポーネント
# Description: 
apkSavedToComputer=APKファイルはダウンロードフォルダに保存されます。
# Description: Text for Chart type choice 'area'
areaChartType=エリア
# Description: 
argumentsParams=議論
# Description: Caption for asset list box.
assetListBoxCaption=メディア
# Description: Caption and summary for Automatic choice
automaticCaption=自動
# Description: 
azimuthParams=方位角
# Description: Text on 'Back' button to go back to the previous page of the wizard.
backButton=戻る
# Description: Default message for bad value for Horizontal Alignment
# 0=componentName
badValueForHorizontalAlignment=システムエラーです： 水平アライメントに不正な値{0}があります。
# Description: Default message for bad value for Vartical Alignment
# 0=componentName
badValueForVerticalAlignment=システムエラーです： 垂直アライメントに不正な値 {0} があります。
# Description: 
ballComponentPallette=ボール
# Description: Text for Chart type choice 'bar'
barChartType=バー
# Description: Download button shown in barcode dialog
barcodeDownloadAab=.aabを今すぐダウンロード
# Description: Download button shown in barcode dialog
barcodeDownloadApk=今すぐ.apkをダウンロード
# Description: 
barcodeScannerComponentPallette=バーコードスキャナー
# Description: 
bashWarningDialogButtonContinue=複数のセッションを続ける
# Description: 
bashWarningDialogButtonNo=複数のセッションを使用しないでください
# Description: 
bashWarningDialogText=複数回のセッションを続けますか？
# Description: Text for color choice 'Black'
blackColor=黒
# Description: 
blackTitleTheme=黒のタイトルテキスト
# Description: Caption for block selector box.
blockSelectorBoxCaption=ブロック
# Description: Label of the button for opening the blocks editor when the it is already open
blocksEditorIsOpenButton=ブロックエディターを開きます
# Description: Tab name for blocks editor
# 0=formName
blocksEditorTabName={0}ブロック
# Description: Message when blocks fail to load properly
# 0=formName
blocksLoadFailure=スクリーン{0}のブロックが正しくロードされませんでした。この問題が修正されるまで、ブロックエディタを使用して編集することはできません。
# Description: Message indicating that blocks changes were not saved
# 0=formName
blocksNotSaved=ブロック領域が正しくロードされませんでした。画面{0}のブロックへの変更は保存されません。
# Description: Title for Blocks Toolkit custom editor.
blocksToolkitTitle=ブロックツールキット
# Description: 
blocksTruncatedDialogButtonHTML=%1秒お待ちください。
# Description: 
blocksTruncatedDialogButtonNoSave=以前のバージョンに戻します。
# Description: 
blocksTruncatedDialogText=ワークスペースが空です
# Description: Text for color choice 'Blue'
blueColor=青
# Description: 
bluetoothClientComponentPallette=Bluetoothクライアント
# Description: 
bluetoothServerComponentPallette=Bluetoothサーバー
# Description: 
bottomParams=ボトム
# Description: Error message reported when building a target failed on the server because of a network error.
buildError=サーバーエラー: ターゲットをビルドできませんでした。後で再試行してください！
# Description: Error message reported when a build failed due to an error in the build pipeline.
buildFailedError=ビルドに失敗しました！
# Description: Message shown in the build output panel when a build is requested.
# 0=projectName, 1=time
buildRequestedMessage={1}で{0}のビルドを要求しました。
# Description: Error message reported when the build server is temporarily too busy to accept a build request.
buildServerBusyError=ビルドサーバーは現在使用中です。数分後に再度お試しください。
# Description: Error message reported when the build server is running a different version of the App Inventor code.
buildServerDifferentVersion=ビルド サーバーは、このバージョンの App Inventor と互換性がありません。
# Description: Label of the button leading to build related cascade items
buildTabName=ビルド
# Description: 
buildingApk=APKをビルド
# Description: Label on built-in-blocks branch of block selector tree
builtinBlocksLabel=内蔵
# Description: Label on built-in-Colors-blocks branch of block selector tree
builtinColorsLabel=色
# Description: Label on built-in-Control-blocks branch of block selector tree
builtinControlLabel=コントロール
# Description: Label on built-in-Dictionaries-blocks branch of block selector tree
builtinDictionariesLabel=ディクショナリ
# Description: Label on built-in-Lists-blocks branch of block selector tree
builtinListsLabel=リスト
# Description: Label on built-in-Logic-blocks branch of block selector tree
builtinLogicLabel=ロジック
# Description: Label on built-in-Math-blocks branch of block selector tree
builtinMathLabel=数学
# Description: Label on built-in-Procedures-blocks branch of block selector tree
builtinProceduresLabel=プロシージャ
# Description: Label on built-in-Text-blocks branch of block selector tree
builtinTextLabel=テキスト
# Description: Label on built-in-Variables-blocks branch of block selector tree
builtinVariablesLabel=変数
# Description: 
button1TextParams=ボタン1テキスト
# Description: 
button2TextParams=ボタン2テキスト
# Description: 
buttonComponentPallette=ボタン
# Description: Label of the Send Email of reportlist
buttonSendEmail=Eメールを送信
# Description: 
buttonTextParams=ボタンテキスト
# Description: 
camcorderComponentPallette=コムコーダー
# Description: 
cameraComponentPallette=カメラ
# Description: Text on "Cancel" button.
cancelButton=キャンセル
# Description: Text on 'Dont Add' button to dismiss screen creation.
cancelScreenButton=追加しないでください
# Description: 
cancelableParams=キャンセル可能
# Description: 
canvasComponentPallette=キャンバス
# Description: 
cellDataParams=セルデータ
# Description: 
cellReferenceParams=セル参照
# Description: Text for text alignment choice 'center'
centerTextAlignment=中心
# Description: 
centerYParams=中心 Y
# Description: 
centroidParams=重心
# Description: 
centroidsParams=重心
# Description: Text for Chart point shape choice 'circle'
chartCircleShape=円
# Description: 
chartComponentPallette=チャート
# Description: Text for Chart point shape choice 'cross'
chartCrossShape=クロス
# Description: 
chartData2DComponentPallette=チャートデータ2D
# Description: Text for Chart point shape choice 'square'
chartSquareShape=四角
# Description: Text for Chart point shape choice 'triangle'
chartTriangleShape=三角
# Description: 
chartTypeAreaOption=エリア
# Description: 
chartTypeBarOption=バー
# Description: 
chartTypeLineOption=線
# Description: 
chartTypePieOption=パイ
# Description: 
chartTypeScatterOption=散布
# Description: Text for Chart point shape choice 'x'
chartXShape=x
# Description: 
chartsComponentPallette=チャート
# Description: 
chatBotComponentPallette=チャットbot
# Description: Label of the CheckBox for checkpoint
checkBoxButton=削除前にチェックポイントを作成します
# Description: 
checkBoxComponentPallette=チェックボックス
# Description: Label of the button for checkpoint
checkpointButton=チェックポイント ...
# Description: Name of Checkpoint menuitem
checkpointMenuItem=チャックポイント
# Description: Label in front of new name in checkpoint dialog.
checkpointNameLabel=チェックポイント名 :
# Description: Title of checkpoint dialog.
# 0=projectName
checkpointTitle=チェックポイント - {0}
# Description: 
choiceParams=選択
# Description: 
circleComponentPallette=円
# Description: Menu item for initiating a connection to the companion running on a Chromebook.
chromebookMenuItem=Chromeブック
# Description: 
classicTheme=クラシック
# Description: Text on 'Clear' button
clearButton=クリア
# Description: 
clipParams=クリップ
# Description: 
clockComponentPallette=時計
# Description: Text for closing a file preview window
closeFilePreview=プレビューを閉じる
# Description: 
cloudDBComponentPallette=クラウドDB
# Description: 
cloudDBParams=クラウドDB
# Description: Caption for context menu item for minimizing the box.
cmMinimize=収縮
# Description: Caption for context menu item for resizing the box.
cmResize=サイズを変更...
# Description: Caption for context menu item for restoring a minimized box.
cmRestore=拡大
# Description: 
colIDParams=コルID
# Description: 
colorCodeParams=カラーコード
# Description: 
colorNameParams=カラー名
# Description: 
colorParams=カラー
# Description: 
colorSensorModeAmbientOption=アンビエント
# Description: 
colorSensorModeColorOption=カラー
# Description: 
colorSensorModeOptionList=カラーセンサーモード
# Description: 
colorSensorModeReflectedOption=リフレクト
# Description: 
colorValues=カラー
# Description: 
column1Params=カラム1（列目）
# Description: 
column2Params=カラム1（列目）
# Description: 
columnNumberParams=カラム（列）番号
# Description: 
columnParams=カラム
# Description: 
columnsParams=カラム
# Description: 
commandParams=コマンド
# Description: Menu item to update the Companion to the latest version
companionUpdate=コンパニオンのアップデート
# Description: 
companionUpdateMustHaveProject=コンパニオンを更新するには、プロジェクトを開いている必要があります
# Description: 
compilingPart1=コンパイル  パート1
# Description: 
compilingPart2=コンパイル  パート1(お待ちください)
# Description: Error message when the component database is not valid.
# 0=projectName
componentDatabaseCorrupt=プロジェクト"{0}"のコンポーネント・データベースが壊れています。
# Description: Error message reported when the component import failed
componentImportError=拡張子のインポートに失敗しました！
# Description: 
componentImportFromComputer=私のコンピュータから
# Description: For importing from a URL
componentImportFromURL=URL
# Description: Caption for component import wizard.
componentImportWizardCaption=拡張子をプロジェクトにインポートする
# Description: Caption for component list box.
componentListBoxCaption=マイコンポーネント
# Description: Caption for component Name Label in rename wizard.
componentNameLabel=拡張子名
# Description: 
componentParams=コンポーネント
# Description: Caption for component rename wizard.
componentRenameWizardCaption=拡張子の名前を変更する
# Description: Alert message reported when the component import upgraded an already imported extension
componentUpgradedAlert=エクステンションのアップグレード： 
# Description: Caption for component upload wizard.
componentUploadWizardCaption=コンポーネントのアップロード...
# Description: 
conditionsParams=コンディション
# Description: Confirmation message for selecting multiple projects and clicking delete
# 0=projectNames
confirmDeleteManyProjects=本当にこれらのプロジェクトを削除しますか：{0}？
# Description: Confirmation message for selecting a single project and clicking delete
# 0=projectName
confirmDeleteSingleProject=本当にこのプロジェクトを削除しますか：{0}
# Description: Confirmation message for selecting multiple projects and clicking trash
# 0=projectNames
confirmMoveToTrash=これらのプロジェクトをゴミ箱に移動してもよろしいですか：{0}？
# Description: Confirmation message deleting large number of selected projects
# 0=projectNames
confirmMoveToTrashCount=本当に{0}プロジェクトをゴミ箱に移動しますか？
# Description: Confirmation message for selecting a single project and clicking trash
# 0=projectName
confirmMoveToTrashSingleProject=本当にこのプロジェクトをゴミ箱に移動したいですか：{0}
# Description: Confirmation message shown when conflicting files are about to be deleted.
# 0=newFile, 1=existingFile
confirmOverwrite={1}保存のリクエスト {0} という名前のファイルが既にこのプロジェクトに存在します。
# Description: Label of the button for selecting phone connection
connectButton=接続
# Description: Label of the button leading to Connect related cascade items
connectTabName=接続
# Description: 
connectivityComponentPallette=接続性
# Description: 
contactPickerComponentPallette=コンタクトピッカー
# Description: 
contentsParams=コンテンツ
# Description: 
coordinatesParams=座標
# Description: Message that is shown to indicate that a copying RPC is going on
copyingRpcMessage=コピー ...
# Description: 
corruptionDialogText=プロジェクト読み取りエラー
# Description: 
countParams=カウント
# Description: 
createNoProjectsDialogText=App Inventor 2へようこそ！
# Description: 
createNoprojectsDialogMessage2=発明おめでとう！
# Description: Error message reported when the project couldn't be created on the server.
createProjectError=サーバーエラー: プロジェクトを作成できませんでした。後で再試行してください！
# Description: 
createWelcomeDialogButton=続ける
# Description: 
createWelcomeDialogText=App Inventorへようこそ！
# Description: 
currentXParams=現在のX
# Description: 
currentYParams=現在のY
# Description: 
customEllipsis=カスタム...
# Description: Text for color choice 'Cyan'
cyanColor=シアン
# Description: Text for color choice 'Dark Gray'
darkGrayColor=ダークグレー
# Description: 
darkTheme=ダーク
# Description: 
dataFileComponentPallette=データファイル
# Description: 
dataFileParams=データファイル
# Description: Message displayed when data is being parsed for a DataFile component.
# 0=filename, 1=dataFile
dataFileParsingMessage={0}からデータを読み込んで{1}の列を更新します。
# Description: 
dataListParams=データリスト
# Description: 
dataParams=データ
# Description: 
dataPointsParams=データポイント
# Description: 
dataScienceComponentPallette=データサイエンス
# Description: Header to indicate the date an extension was compiled
dateBuilt=建設年月日：
# Description: 
datePickerComponentPallette=データピッカー
# Description: 
dayParams=日
# Description: 
daysParams=日数
# Description: Text for button shape choice 'default'
defaultButtonShape=デフォルト
# Description: Default project name in checkoint dialog
# 0=projectName, 1=suffix
defaultCheckpointProjectName={0}_チェックポイント{1}
# Description: Text for color choice 'Default'
defaultColor=デフォルト
# Description: Text for font typeface choice 'default '
defaultFontTypeface=デフォルト
# Description: Message that is shown to indicate that a loading RPC is going on
defaultRpcMessage=ロード中 ...
# Description: Defaulf project name in save as dialog
# 0=projectName
defaultSaveAsProjectName={0}_コピー
# Description: Text for screen animation choice 'Default '
defaultScreenAnimation=デフォルト
# Description: Text for property editors
defaultText=デフォルト
# Description: 
defaultTheme=デバイスのデフォルト
# Description: Label of the link to delete your account
deleteAccountLink=アカウント削除
# Description: Text on "Delete" button
deleteButton=削除
# Description: Text on "Delete component" button
deleteComponentButton=コンポーネントの削除
# Description: Label for the context menu command that deletes a file
deleteFileCommand=削除...
# Description: Text on "Delete From Trash" button
deleteFromTrashButton=ゴミ箱から削除
# Description: Error message reported when a server error occurs during delete keystore
deleteKeystoreError=サーバーエラー：キーストアファイルを削除できませんでした。
# Description: Label of the button for delete keystore
deleteKeystoreMenuItem=キーストアの削除
# Description: Text on "Delete Project" button
deleteProjectButton=ゴミ箱へ移動
# Description: Message that is shown to indicate that a deleting RPC is going on
deletingRpcMessage=削除 ...
# Description: 
descriptionParams=説明
# Description: 
destinationParams=目的地
# Description: 
detailTextParams=詳細テキスト
# Description: 
determiningPermissions=アクセス権の決定
# Description: 
directionEastOption=東
# Description: 
directionNorthOption=北
# Description: 
directionNortheastOption=北東部
# Description: 
directionNorthwestOption=北西部
# Description: 
directionOptionList=ディレクション
# Description: 
directionSouthOption=南
# Description: 
directionSoutheastOption=南東部
# Description: 
directionSouthwestOption=南西部
# Description: 
directionWestOption=西
# Description: 
directionsParams=指示
# Description: 
directoryNameParams=ディクショナリ名
# Description: Switch to disable dark theme
disableDarkTheme=ライトテーマを使用する
# Description: Switch to disable new layouts
disableNewLayout=旧レイアウトへの切り替え
# Description: Switch to disable OpenDyslexic
disableOpenDyslexic=失読症公開を無効にする
# Description: Text on "Dismiss" button.
dismissButton=解散
# Description: 
distanceParams=距離
# Description: 
doFaultMethodDescriptions=例外を発生させ、例外処理のデバッグに使用します。
# Description: 
doFaultMethods=故障
# Description: 
doNotShow=二度と表示しない
# Description: Caption for button to finish the box resizing dialog.
done=完了
# Description: Warning that downloading projects will take a while
downloadAllAlert=プロジェクトがダウンロードされるまで少し時間がかかるかもしれません。しばらくお待ちください。
# Description: Title of download apk dialog.
# 0=projectName
downloadApkDialogTitle={0}用のAndroidアプリ
# Description: Label for the context menu command that downloads a file
downloadFileCommand=パソコンにダウンロード
# Description: Label of the button for export keystore
downloadKeystoreMenuItem=キーストアのエクスポート
# Description: Title of the dialog box for downloading a user's project source
downloadUserSourceDialogTitle=ユーザーソースのダウンロード
# Description: Label of the button for admins to download a user's project source
downloadUserSourceMenuItem=ユーザーソースのダウンロード
# Description: Message shown while downloading application to the phone (during compilation)
downloadingRpcMessage=携帯電話にダウンロード ...
# Description: 
draggedAnySpriteParams=任意のスプライトをドラッグ
# Description: 
draggedSpriteParams=ドラッグスプライト
# Description: 
drawingAndAnimationComponentPallette=ドローイングとアニメーション
# Description: Error shown when a new component name would be the same as an existing one
duplicateComponentNameError=コンポーネント名が重複しています！
# Description: Error shown when a new form name would be the same as an existing one
duplicateFormNameError=スクリーン名が重複しています！
# Description: Error shown when a new project name would be the same as an existing one
# 0=projectName
duplicateProjectNameError={0}はすでに存在します。同じ名前で別のプロジェクトを作成することはできません。
# Description: Title for New Project Name DialogBox on Duplicate Name Error.
# 0=projectName
duplicateTitleFormatError=プロジェクト名 {0} が存在している
# Description: Title for New Project Name DialogBox on Duplicate Name Error.
# 0=projectName
duplicateTitleInTrashFormatError=ゴミ箱に同名のプロジェクト{0}が存在する
# Description: Error shown when a new project name would be the same as an existing one
# 0=projectName
duplicateTrashProjectNameError={0}はすでにゴミ箱に存在します。同じ名前で別のプロジェクトを作成することはできません。
# Description: 
durationMsParams=継続時間Ms
# Description: 
durationParams=持続時間
# Description: 
edgeParams=エッジ
# Description: 
emailAddressParams=Eメールアドレス
# Description: Title for user's email inbox
emailInboxTitle=Eメール
# Description: 
emailPickerComponentPallette=Eメールピッカー
# Description: Title for moderator send email dialog
emailSendTitle=Eメールを送る
# Description: Label of the Sent From on reportlist
emailSentFrom=送信者： 
# Description: Label of the Sent To on reportlist
emailSentTo=送信先： 
# Description: Message displayed when the Source File specified in the DataFile is an empty file.
emptyFileError=空のファイルが指定されました！
# Description: Message providing details about starting the emulator connection.
emulatorMenuItem=エミュレーター
# Description: Menu item to enable automatic loading of projects when App Inventor is opened.
enableAutoload=プロジェクトのオートロードを有効にする
# Description: Switch to enable dark theme
enableDarkTheme=ダークテーマの使用
# Description: Switch to enable new layouts
enableNewLayout=新しいレイアウトに切り替える
# Description: 
encodingParams=エンコーディング
# Description: 
endParams=終了
# Description: 
endedStatusIncomingEndedOption=受信終了
# Description: 
endedStatusIncomingRejectedOption=着信拒否
# Description: 
endedStatusOptionList=終了ステータス
# Description: 
endedStatusOutgoingEndedOption=送信終了
# Description: 
errorCodeParams=エラーコード
# Description: 
errorMessageParams=エラーメッセージ
# Description: 
errorNumberParams=エラー番号
# Description: 
ev3ColorSensorComponentPallette=Ev3カラーセンサー
# Description: 
ev3CommandsComponentPallette=Ev3コマンド
# Description: 
ev3GyroSensorComponentPallette=Ev3ジャイロセンサー
# Description: 
ev3MotorsComponentPallette=Ev3モーターズ
# Description: 
ev3SoundComponentPallette=Ev3サウンド
# Description: 
ev3TouchSensorComponentPallette=Ev3タッチセンサー
# Description: 
ev3UIComponentPallette=Ev3UI
# Description: 
ev3UltrasonicSensorComponentPallette=EV3超音波センサー
# Description: 
experimentalComponentPallette=実験的
# Description: Name of Export all Project menuitem
exportAllProjectsMenuItem=すべてのプロジェクトをエクスポートする
# Description: Name of Export Project menuitem
exportProjectMenuItem=選択したプロジェクト（.aia）をコンピュータにエクスポートする
# Description: 
extensionComponentPallette=拡張
# Description: Extensions link
extensionsMenuItem=拡張
# Description: Header for extension version information
externalComponentVersion=拡張バージョン：
# Description: 
extraKeyValueWarning=エクストラキーとエクストラ値は非推奨であり、サポートされません。ブロックの新しいExtras（エクストラ）プロパティを使用してください。
# Description: Text for screen animation choice 'Fade '
fadeScreenAnimation=フェード
# Description: 
failingUrlParams=失敗URL
# Description: 
featureCollectionComponentPallette=フィーチャーコレクション
# Description: 
featuresParams=フィーチャーズ
# Description: Link for Report an Issue form
feedbackMenuItem=問題を報告する
# Description: Link for Report an Issue form
feedbackTabName=問題を報告する
# Description: 
fileActionOptionList=ファイル操作
# Description: 
fileActionPickDirectoryOption=ピックディレクトリ
# Description: 
fileActionPickExistingFileOption=既存のファイルを選ぶ
# Description: 
fileComponentPallette=ファイル
# Description: 
fileNameParams=ファイル名
# Description: 
fileParams=ファイル
# Description: 
filePickerComponentPallette=ファイルピッカー
# Description: Text for files not compatible with HTML5 elements
filePreviewError=残念ながら、このファイルのプレビューは利用できません。
# Description: 
fileScopeApp=アプリ
# Description: 
fileScopeAppOption=アプリ
# Description: 
fileScopeAsset=アセット
# Description: 
fileScopeAssetOption=アセット
# Description: 
fileScopeCache=キャッシュ
# Description: 
fileScopeCacheOption=キャッシュ
# Description: 
fileScopeLegacy=レガシー
# Description: 
fileScopeLegacyOption=レガシー
# Description: 
fileScopeOptionList=ファイルスコープ
# Description: 
fileScopePrivate=プライベート
# Description: 
fileScopePrivateOption=プライベート
# Description: 
fileScopeShared=共有
# Description: 
fileScopeSharedOption=共有
# Description: 
fileTypeAnyOption=どんなものでも
# Description: 
fileTypeAudioOption=オーディオ
# Description: 
fileTypeImageOption=画像
# Description: 
fileTypeOptionList=ファイルタイプ
# Description: 
fileTypeVideoOption=ビデオ
# Description: Error message reported when a file couldn't be uploaded to the server.
fileUploadError=サーバーエラー：ファイルをアップロードできませんでした。後で再試行してください！
# Description: Caption for file upload wizard.
fileUploadWizardCaption=ファイルをアップロード ...
# Description: Message displayed when an asset is uploaded.
# 0=filename
fileUploadingMessage={0}をApp Inventorサーバにアップロードする
# Description: Error message when filenames are 0 or 101+ characters long
filenameBadSize=ファイル名は1文字以上100文字以下でなければなりません。
# Description: Error message when filenames are 0 or 101+ characters long
filenameBadSizeTitle=エラー：不正なファイル名サイズ
# Description: 
fillParams=塗りつぶし
# Description: Caption and summary for Fill Parent choice
fillParentCaption=塗りつぶしペアレント
# Description: 
finalDialogMessage=<p><b>セッションは終了しましたので、このウィンドウを閉じてください。</b></p>
# Description: 
finalDialogText=セッションは終了しました
# Description: 
firebaseDBComponentPallette=ファイヤーベースDB
# Description: 
firebaseExperimentalWarning=ファイヤーベースDBは実験的な機能であり、将来変更されたり、壊れたりする可能性があります。このコンポーネントを使用してビルドされたパッケージアプリは、不特定の将来にわたって機能しない可能性があります。
# Description: Error shown when user does not type letter as first character in project name.
firstCharProjectNameError=プロジェクト名はアルファベットで始めなければなりません
# Description: Text for Sizing choice 'fixed' -- scale to fit device screen
fixedSizing=修正済み
# Description: 
flungSpriteParams=フライングスプライト
# Description: 
followers2Params=フォロワー2
# Description: 
forInternalUseOnlyComponentPallette=内部使用のみ
# Description: Label in front of name in new screen dialog.
formNameLabel=スクリーン名：
# Description: Name of Forums link
forumsMenuItem=掲示板
# Description: 
frequencyHzParams=周波数Hz
# Description: 
frequencyParams=周波数
# Description: 
fromFileNameParams=ファイル名から
# Description: 
fromParams=から
# Description: 
fromScopeParams=スコープから
# Description: 
fromUrlButton=URLから...
# Description: 
functionNameParams=関数名
# Description: 
fusiontablesControlComponentPallette=フュージョンテーブルコントロール
# Description: Prompt for the gallery app report section if user has already reported.
galleryAlreadyReportedPrompt=このアプリはすでに報告されています。管理者がまもなく報告を処理します。
# Description: Text prefix for the gallery app last changed date.
galleryAppChangedPrefix=変更日 
# Description: Text prefix for the gallery app shared / created date.
galleryAppCreatedPrefix=作成日 
# Description: Error message reported when can't get gallery app like on server.
galleryAppLikeError=＃サーバーエラー：「いいね！」の数を取得できませんでした
# Description: Text for gallery page opening feedback
galleryAppOpening=オープニング ...
# Description: Text for gallery page publishing feedback.
galleryAppPublishing=パブリッシング ...
# Description: Text for gallery page removing feedback
galleryAppRemoving=取り除く ...
# Description: Text for gallery page updating feedback
galleryAppUpdating=更新中 ...
# Description: Text for gallery page like button (already liked).
galleryAppsAlreadyLike=異なる
# Description: Title for the gallery page sidebar that shows list of apps of a specific author.
galleryAppsByAuthorSidebar=開発アプリ
# Description: Text for gallery page like button (not liked yet).
galleryAppsLike=好き
# Description: Title prefix for the gallery page sidebar that shows list of remixed apps.
galleryAppsRemixesSidebar=のリミックス 
# Description: Text for gallery By Author Text
galleryByAuthorText=著者による
# Description: Text for gallery app developer prefix text label
galleryByDeveloperPrefixedText=による 
# Description: Text for gallery page cancel button
galleryCancelText=キャンセル
# Description: Reference to the Creative Commons License
galleryCcLicenseRef=ギャラリーにアプリを投稿することで、あなたは<a href="https://creativecommons.org/licenses/by/4.0/" target="_blank">Creative Commons Attribution License</a>の下でアプリを公開し、その権限があることを確認することになります。
# Description: Text for gallery page changed date label
galleryChangedDateLabel=変更日： 
# Description: Error message reported when can't get gallery app comments on server.
galleryCommentError=サーバーエラー：コメントを取得できませんでした
# Description: Button for copying share link to clipboard
galleryCopyButton=コピー
# Description: Text for gallery page created date label
galleryCreatedDateLabel=作成日： 
# Description: Text for gallery page credit hint
galleryCreditHint=他のアプリのコードをリミックスしていますか？ここにクレジットしてください。
# Description: Text for gallery page credit label
galleryCreditLabel=クレジット： 
# Description: Error message reported when the gallery delete breaks
galleryDeleteError=サーバーエラー：ギャラリー削除エラー
# Description: Text for gallery page description hint
galleryDescriptionHint=アプリの説明をここに記入してください。
# Description: Error message reported when can't get developer gallery apps on server.
galleryDeveloperAppError=サーバーエラー: ギャラリーから開発者ギャラリーアプリを取得できませんでした
# Description: Error message reported when can't get most downloaded apps server.
galleryDownloadedAppsError=サーバーエラー：ギャラリーから最もダウンロードされたアプリを取得できませんでした
# Description: Text for gallery page edit button
galleryEditText=編集
# Description: Text for gallery Empty Text
galleryEmptyText=
# Description: Error message reported when can't get featured on server.
galleryFeaturedAppError=サーバーエラー：ギャラリーから特集アプリを取得できませんでした
# Description: Text for gallery Feature Text
galleryFeaturedText=フォーチャー
# Description: redirect action of galleryId
galleryGalleryIdAction=/？ギャラリーID=
# Description: Error message reported when can't get most liked apps server.
galleryLikedAppsError=サーバーエラー: ギャラリーから最も人気のあるアプリを取得できませんでした
# Description: Text for gallery page more info link label
galleryMoreInfoLabel=チュートリアル／ビデオ： 
# Description: text for more reports
galleryMoreReports=詳細レポート
# Description: Error to report when an app with an extension is attempted to be added to the Gallery
galleryNoExtensionsPlease=拡張機能を持つアプリはギャラリーにアップロードできません
# Description: Error messgage for when submitting galleryapp
galleryNoScreenShotMessage=アプリを公開する前に、スクリーンショットなど代表的な画像を提出してください
# Description: Text for gallery page open the app button
galleryOpenText=アプリを開く
# Description: Text for gallery page publish button
galleryPublishText=発行
# Description: Error message reported when can't get recent apps server.
galleryRecentAppsError=サーバーエラー：ギャラリーから最近のアプリを取得できませんでした
# Description: Text for the gallery app remix children list.
galleryRemixChildren=このアプリのリミックスを見るにはクリックしてください！
# Description: Text prefix for the gallery app remixed from label.
galleryRemixedFrom=からのリミックス： 
# Description: Text for remove confirm alert
galleryRemoveConfirmText=本当にこのアプリをギャラリーから削除したいですか？
# Description: Text for gallery page remove button
galleryRemoveText=削除
# Description: Text for the gallery app report button.
galleryReportButton=レポートを提出する
# Description: 
YandexTranslateHelpStringComponentPallette=このコンポーネントを使用して、単語や文章を異なる言語間で翻訳します。このコンポーネントは Yandex.翻訳サービスへの翻訳を要求するため、インターネット アクセスが必要です。 2 文字の言語コードを使用して、ソースとターゲットの形式でソース言語とターゲット言語を指定します。したがって、「en-es」は英語からスペイン語に翻訳され、「es-ru」はスペイン語からロシア語に翻訳されます。ソース言語を省略した場合、サービスはソース言語の検出を試みます。したがって、「es」だけを指定すると、ソース言語が検出されてスペイン語に翻訳されます。<p /> このコンポーネントは、Yandex 翻訳サービスを利用しています。利用可能な言語のリスト、言語コードとステータス コードの意味などの詳細については、http://api.yandex.com/translate/ を参照してください。 <p />注: 翻訳はバックグラウンドで非同期的に行われます。翻訳が完了すると、「GotTranslation」イベントがトリガーされます。
# Description: 
YandexTranslate__ApiKeyPropertyDescriptions=Yandexで使用するAPIキーを設定します。MITには独自のキーが組み込まれているため、MITシステムを使用している場合は設定する必要はありません。設定した場合、ここで提供されるキーが代わりに使用されます
# Description: 
YandexTranslate__RequestTranslationMethodDescriptions=翻訳先の言語 (たとえば、スペイン語なら ''es''、英語なら ''en''、ロシア語なら ''ru'') と翻訳する単語や文を指定すると、このメソッドは Yandex.翻訳サービスに翻訳を依頼します。テキストが外部サービスで翻訳されると、翻訳取得イベントが実行されます。また、翻訳言語の前に指定することもできます。例えば、es-ruはスペイン語からロシア語への翻訳を指定します。
# Description: 
ZoomLevelPropertyDescriptions=地図のズームレベルを指定します。ズームレベルの有効な値は、タイルプロバイダとマップの緯度と経度に依存します。例えば、タイルを保存するスペースを節約するために、密集した市街地よりも海上の方がズームレベルはより制限されるので、有効な値は海上では1-7、市街地では1-20かもしれません。ズームレベルが大きすぎてサーバーが対応できない場合、タイルプロバイダーは警告またはエラータイルを送信することがあります。
# Description: 
animTypeParams=アニメーションタイプ
# Description: 
apkInstalledToPhone=APKファイルが携帯電話にインストールされます。
# Description: System error message for a bad alignment property editor
badAlignmentPropertyEditorForArrangement=システムエラー：水平または垂直配置のアライメントプロパティエディタが正しくありません。
# 0=aTagStart, 1=aTagEnd
barcodeWarning=注意：このバーコードは2時間のみ有効です。アプリを他の人と共有する方法については、{0} FAQ {1}を参照してください。
# Description: Warning in barcode dialog.
# 0=aTagStart, 1=aTagEnd
barcodeWarning2=<b>ボタンをクリックしてアプリをダウンロードするか、ボタンを右クリックしてダウンロード リンクをコピーする、もしくは、バーコード スキャナーでコードをスキャンしてインストールします。</b><br>注: このリンクとバーコードは、次の場合にのみ有効です。 2時間。アプリを他のユーザーと共有する方法については、{0}よくある質問{1}をご覧ください。
# Description: 
bashWarningDialogMessage=<p><font color=red>警告:</font>このアカウントに対して 2 つ目の App Inventor セッションが開かれています。両方のセッションを続行することもできますが、同時に複数のセッションから App Inventor を使用すると、App Inventor Server から回復できない方法でブロックが失われる可能性があります。</p><p>同じアカウントで複数のセッションを開かないことをお勧めします。しかし、このような方法で作業する必要がある場合は、定期的にプロジェクトをローカル コンピュータにエクスポートして、App Inventor サーバから独立したバックアップ コピーを作成してください。プロジェクトをエクスポートするには、[プロジェクト]メニューの[エクスポート]を使用します。<p>
# Description: 
blocksTruncatedDialogButtonSave=空の画面を保存します。
# Description: 
blocksTruncatedDialogMessage=<p><b>%1</b> はすべてのブロックを削除したようです。</p><p><ul><li>空の画面を保存すると、それらのブロックはすべて完全に削除されます。 </li><li>あるいは、以前に保存したプロジェクトのバージョンを復元することもできます。</li></ul></p>
# Description: Error message reported when a project is too large to build.
# 0=maxSize, 1=aiaSize
buildProjectTooLargeError=申し訳ありませんが、{0} MB以上のプロジェクトはパッケージできません。あなたのプロジェクトは{1,数,###.##}MBです。MBです。
# Description: Label of the button for canceling the blocks editor launch
cancelBlocksEditorButton=ブロックエディターを開く...（クリックでキャンセル）
# Description: 
chartTypeOptionList=チャートタイプ
# Description: 
chatBotExperimentalWarning=チャットbot は実験的な機能であり、将来変更される可能性があります。使用が制限されている場合があります。詳細については、<a href="https://appinv.us/chatbot" target="_blank">https://appinv.us/chatbot</a> をご覧ください。
# Description: Message shown when there is no current file editor to switch to
chooseProject=開くプロジェクトを選択するか、新しいプロジェクトを作成してください。
# Description: 
columnDataParams=カラムデータ
# Description: Information about the Companion
companionInformation=コンパニオン情報
# Description: Error message reported when the component import failed due to unknown url
componentImportUnknownURLError=不明なURLのため、拡張機能のインポートに失敗しました
# Description: Confirmation message for delete keystore
confirmDeleteKeystore=本当にキーストア ファイルを削除しますか？同意すると、古いキーストア ファイルが App Inventor サーバーから完全に削除されます。次回電話機用にプロジェクトをパッケージ化するときに、別の新しいキーストア ファイルが自動的に作成されます。削除しようとしているキーストアを使用してアプリケーションを Google Play ストアに公開している場合は、キーストア ファイルを更新できなくなります。今後パッケージ化するすべてのプロジェクトは、新しいキーストア ファイルを使用して署名されます。キーストアを変更すると、以前にインストールしたアプリを再インストールする機能に影響します。これを実行するかどうかわからない場合は、上の「ヘルプ」、「トラブルシューティング」、「キーストアとアプリケーションの署名」の順にクリックして、キーストアに関するドキュメントをお読みください。キーストア ファイルの削除を元に戻すことはできません。
# Description: Confirmation message shown when keystore is about to be overwritten.
confirmOverwriteKeystore=キーストア ファイルを上書きしますか？同意すると、古いキーストア ファイルが App Inventor サーバから完全に削除されます。上書きするキーストアを使用して Google Play ストアにアプリケーションを公開している場合は、アプリケーションを更新する機能が失われます。キーストアを変更すると、以前にインストールしたアプリを再インストールできなくなります。この作業を行うかどうか確信が持てない場合は、"Help"（ヘルプ）、"Troubleshooting"（トラブルシューティング）、"Keystores and Signing of Applications"（キーストアとアプリケーションの署名）の順にクリックして、キーストアに関する文書をお読みください。キーストアファイルの上書きには取り消しがありません。
# Description: Error message reported when copying a project failed on the server.
copyProjectError=サーバーエラー: プロジェクトをコピーできませんでした。後で再試行してください！
# Description: 
corruptionDialogMessage=<p><b>プロジェクトの読み込み中にエラーを検出しました</b></p><p>プロジェクトを損傷から守るため、このセッションを終了しました。このウィンドウを閉じてください。</p>
# Description: 
createNoProjectsDialogMessage1=App Inventor 2 にはプロジェクトがありません。App Inventor の使用方法を確認するには、ウィンドウ上部の [ガイド] リンクをクリックするか、最初のプロジェクトを開始するには、ウィンドウ左上の [新規プロジェクトを開始] ボタンをクリックします。
# Description: Error message reported when deleting a file failed on the server.
deleteFileError=サーバーエラー：ファイルを削除できませんでした。後で再試行してください！
# Description: Error message reported when deleting a project failed on the server.
deleteProjectError=サーバーエラー: プロジェクトを削除できませんでした。後で再試行してください！
# Description: Menu item to disable automatic loading of projects when App Inventor is opened.
disableAutoload=プロジェクトの自動読み込みを無効にする
# Description: Title of download aab dialog.
# 0=projectName
downloadAabDialogTitle={0}用アンドロイドアプリバンドル（Google Playストアで使用可能
# Description: Error message displayed when a server error occurs during download keystore
downloadKeystoreError=サーバーエラー：キーストアファイルをダウンロードできませんでした。
# Description: Switch to enable OpenDyslexic
enableOpenDyslexic=失読症公開を有効にする
# Description: Message displayed when an error occurs while generating YAIL for a form.
# 0=formName
errorGeneratingYail={0}のコードを生成できません。
# Description: 
# 0=property
expectedLatLongPair={0}に指定された値は有効な緯度と経度のペアではありません。
# Description: Name of Export Selected Projects menuitem
# 0=numSelectedProjects
exportSelectedProjectsMenuItem=選択したプロジェクト {0} をエクスポート
# Description: Error message when the component descriptors for an extension are not parsable.
# 0=extensionName, 1=projectName
extensionDescriptorCorrupt=プロジェクト"{1}"内の"{0}"のエクステンション記述が壊れています。
# Description: 
fileActionPickNewFileOption=新しいファイルを選ぶ
# Description: Text for browsers not compatable with HTML5 elements
filePlaybackError=残念ながら、お使いのブラウザはこのファイルの再生に対応していません。
# Description: Error message reported when a file couldn't be uploaded because of its size.
fileTooLargeError=エラー: ファイルが大きすぎるためアップロードできませんでした
# Description: Label to indicate the application has too many screens.
formCountErrorLabel=警告: このアプリの画面数は App Inventor の制限を超える可能性があります。多くの画面を備えたアプリの作成に関するアドバイスについては、<a target="_blank" href="/reference/other/manyscreens.html">ここ</a>をクリックしてください。 <p>本当に別の画面を追加しますか？</p>
# Description: Text for gallery page more info link hint
galleryMoreInfoHint=このアプリにチュートリアルやビデオがある場合は、ここにURLを入力してください。
# Description: Error messgage for when submitting galleryapp
galleryNotEnoughDescriptionMessage=アプリを公開する前に、より長い説明を提供してください
# Description: Prompt for the gallery app report section when user just submitted the report.
galleryReportCompletionPrompt=このアプリを報告しました。まもなく管理者があなたの報告を処理します。
# Description: 
barometerComponentPallette=バロメーター
# Description: 
centerXParams=中心 X
# Description: 
featureParams=フィーチャー
# Description: 
galleryLoadingDialogText=プロジェクト　ローディング...
# Description: 
mapFeatureCircleOption=円
# Description: 
mapComponentPallette=地図
# Description: 
mailboxParams=メールボックス
# Description: 
magneticFieldSensorComponentPallette=磁場センサー
# Description: 
listViewComponentPallette=リストビュー
# Description: 
listPickerComponentPallette=リストピッカー
# Description: 
lightSensorComponentPallette=ライトセンサー
# Description: Name of Import Project menuitem
importProjectMenuItem=コンピューターからプロジェクト(.aia)をインポートします...
# Description: 
imageSpriteComponentPallette=画像スプライト
# Description: 
imagePickerComponentPallette=画像ピッカー
# Description: 
imageComponentPallette=画像
# Description: 
imageBotComponentPallette=画像ボット
# Description: 
horizontalAlignmentOptionList=水平アライメント
# Description: 
gyroscopeSensorComponentPallette=ジャイロスコープセンサー
# Description: Text for gallery Tutorial  Text
galleryTutorialText=チュートリアル
# Description: Link for Gallery
galleryTabName=ギャラリー
# Description: Text for gallery search button
gallerySearch=検索
# Description: 
DataFile__LegacyModePropertyDescriptions=アプリが外部ストレージのディレクトリのルートからファイルにアクセスできるようにします（レガシーモード）。
# Description: 
ConverseMethodDescriptions=チャットボットについて質問します。連続した通話では、会話の前の情報が記憶されます。"会話のリセット(ResetConversation)" 関数を使用して、新しい会話をリセットします。
# Description: 
ColorsProperties=色
# Description: 
ColorProperties=カラー
# Description: 
ChatBot__TokenPropertyDescriptions=使用する MIT アクセストークンです。MIT App Inventorはこの値を自動的に入力します。変更する必要はありません。
# Description: 
ChartData2D__EntryClickEventDescriptions=ユーザーがグラフ内のデータポイントをタップしたことを示します。タップされたエントリの x 値と y 値が報告されます。
# Description: 
ChartData2D__ClearMethodDescriptions=すべてのデータを消去します。
# Description: 
ChartData2DHelpStringComponentPallette=(x, y) 座標ベースのデータを保持するコンポーネント
# Description: 
CharacterEncodingProperties=文字のコード化
# Description: 
ChangeDataSourceMethods=データソースの変更
# Description: 
ChangeDataSourceMethodDescriptions=コンポーネントのデータソースを、指定されたキー値を持つ指定されたコンポーネントソースに変更します。詳細については、
# Description: 
Canvas__ClearMethodDescriptions=このキャンバスに描画されたものはすべて消去されますが、背景色や画像は消去されません。
# Description: 
CalculateLineOfBestFitValueMethods=ベストフィットの線を計算する
# Description: 
CalculateLineOfBestFitValueMethodDescriptions=[最適フィットの線] 値の 1 つを返します。値は、「傾き」、「Y切片」、「相関係数」、または「予測」です。ブロックは、特定の値文字列が指定されていない場合、すべての値を含む完全なディクショナリを返します
# Description: 
BearingToPointMethods=軸受けから点まで
# Description: 
BearingToFeatureMethods=軸受けからフィーチャまで
# Description: Initial caption for MOTD box.
motdBoxCaption=App Inventor へようこそ！
# Description: Label of the app field on moderation page
moderationAppHeader=アプリ
# Description: 
messagesParams=メッセージ
# Description: Caption for message output box.
messagesOutputBoxCaption=メッセージ
# Description: 
messageParams=メッセージ
# Description: 
nxtMotorModeBrakeOption=ブレーキ
# Description: 
nxtMailboxOptionList=次のメールボックス
# Description: 
nxtMailboxBox9Option=ボックス９
# Description: 
nxtMailboxBox8Option=ボックス８
# Description: 
nxtMailboxBox7Option=ボックス７
# Description: 
nxtMailboxBox6Option=ボックス６
# Description: 
nxtMailboxBox5Option=ボックス５
# Description: 
nxtMailboxBox4Option=ボックス４
# Description: 
nxtMailboxBox3Option=ボックス３
# Description: 
nxtMailboxBox2Option=ボックス２
# Description: 
nxtMailboxBox1Option=ボックス１
# Description: 
nxtMailboxBox10Option=ボックス１０
# Description: 
nxtLightSensorComponentPallette=次のライトセンサー
# Description: 
nxtColorSensorComponentPallette=次のカラーセンサー
# Description: 
nxtDriveComponentPallette=次のドライブ
# Description: 
nxtDirectCommandsComponentPallette=次のダイレクトコマンド
# Description: 
numberParams=ナンバー
# Description: 
numberOfBytesParams=バイト数
# Description: 
notifierComponentPallette=通知者
# Description: 
noticeParams=通知
# Description: Error message reported when the file selected for upload is not a project archive.
notProjectArchiveError=選択されたプロジェクトはプロジェクトソースファイルではありません！プロジェクトソースファイルはaiaファイルです。
# Description: Error message reported when the file selected for upload is not a keystore.
notKeystoreError=選択されたファイルはキーストアではありません！
# Description: Error message reported when the file selected for upload is not a component archive.
notComponentArchiveError=選択されたファイルはコンポーネントファイルではありません！コンポーネントファイルはaixファイルです。
# Description: Error shown after validation of integer failed.
# 0=nonNumericText
notAnInteger={0}は正規の整数ではありません
# Description: Name of the event parameter that indicates whether an event has already been handled or not.
notAlreadyHandledParams=未対応
# Description: Error shown after validation of float failed.
# 0=nonNumericText
notAFloat={0}は正規の数字ではありません
# Description: Error message for connection attempt without a project selected.
noprojectDuringConnect=接続する前に、まずプロジェクトを作成するか選択する必要があります！
# Description: Title for Error Dialog when connection is attempted without a project.
noprojectDialogTitle=選ばれたプロジェクトはありません
# Description: Error shown after validation of percentage input fields.
nonvalidPercentValue=パーセンテージの入力値は0から100の間でなければなりません
# Description: Error shown after validation of custom length field failed.
nonnumericInputError=値は0以上の整数でなければなりません
# Description: Text for screen animation choice 'None '
noneScreenAnimation=該当なし
# Description: Text for color choice 'None'
noneColor=該当なし
# Description: Caption for None entry
noneCaption=該当なし
# Description: Header for the non-visible components in the designer.
nonVisibleComponentsHeader=非可視コンポーネント
# Description: Error message reported when no url is entered.
noUrlError=URLを入力してください
# Description: Exception message used when a component was not upgraded
# 0=componentType, 1=srcCompVersion, 2=sysCompVersion
noUpgradeStrategyException=バージョン {1} から {2} への {0} のアップグレードストラテジーは存在しません。
# Description: Error message displayed when no project is selected
noProjectSelectedForRestore=復元するプロジェクトを選択してください
# Description: Error message displayed when no project is selected
noProjectSelectedForDelete=削除するプロジェクトを選択してください
# Description: 
noParams=いいえ
# Description: Error message displayed when no keystore file exists
noKeystoreToDownload=ダウンロードするキーストアファイルはありません。
# Description: Error message reported when a file was not selected.
noFileSelectedTitle=エラー：選択されたファイルがありません
# Description: Error message reported when a file was not selected.
noFileSelected=アップロードするファイルを選択してください。
# Description: Message displayed when OK button is clicked when there is no component selected.
noComponentSelected=コンポーネントを選択しなければなりません！
# Description: Error message shown when a project references an unknown component.
# 0=componentName, 1=projectName
noComponentFound=プロジェクト「{1}」をロード中にコンポーネント「{0}」が見つかりません。
# Description: Message displayed when OK button is clicked when there is no column selected.
noColumnSelected=カラムを選択する必要があります！
# Description: Message displayed when OK button is clicked when there is no asset selected.
noAssetSelected=アセットを選択する必要があります！
# Description: Text on 'Next' button to proceed to the next page of the wizard.
nextButton=次へ
# Description: Alert message displayed when project is newer than system
newerVersionProject=このプロジェクトは、App Inventor システムの新しいバージョンで保存されました。プロジェクトのロードを試みますが、互換性の問題が発生する可能性があります。
# Description: Exception message used when a project contains a newer version component than the version known by the system
# 0=componentType, 1=srcCompVersion, 2=sysCompVersion
newerVersionComponentException={0}バージョン{1}のプロジェクトをロードできません（既知の最大バージョンは{2}です）。
# Description: Caption for the wizard to create a new Young Android project
newYoungAndroidProjectWizardCaption=App Inventorプロジェクトを新規作成する
# Description: Label for template url wizard.
newUrlLabel=テンプレートのURL 
# Description: Label of the menu item for creating a new project
newProjectMenuItem=新規プロジェクトを始める
# Description: Label of the menu item for creating a new project folder
newProjectFolderMenuItem=新規フォルダー
# Description: Label of the menu item for creating a new project
newProjectButton=新規プロジェクト
# Description: Label next to the new name in a rename dialog
newNameLabel=新規名：
# Description: Title of new Screen dialog.
newFormTitle=新規画面
# Description: Label of folder selector for new folder wizard.
newFolderWizardParent=の中にフォルダを作成する
# Description: Name of new folder in new folder wizard.
newFolderWizardName=フォルダ名
# Description: 
nearFieldComponentPallette=近距離フィールド
# Description: 
navigationComponentPallette=ナビゲーション
# Description: 
nameParams=名前
# Description: Name of My Projects tab
myProjectsTabName=マイ プロジェクト
# Description: Text on "Projects" button
myProjectsButton=マイ プロジェクト
# Description: String shown when multiple components have different values for a property
multipleValues=<複数の>
# Description: 
msParams=ms
# Description: Error message reported when moving the project to trash failed on the server.
moveToTrashProjectError=サーバーエラー：プロジェクトをゴミ箱に移動できませんでした。しばらくしてから再試行してください！
# Description: Label of folder selector for move project wizard.
moveProjectWizard=フォルダへ移動する
# Description: Label of the menu item for moving a project to a different folder
moveProjectMenuItem=プロジェクトを移動…
# Description: Label of the toolbar button moving a project to a different folder
moveProjectButton=移動する…
# Description: 
motorPortLetterParams=モーターポートレター
# Description: Label of the link to a component's reference docs
moreInformation=詳細はこちら
# Description: Label of the button leading to more cascade items
moreActionsButton=その他のアクション
# Description: 
monthsParams=月数
# Description: 
monthParams=月
# Description: Text for font typeface choice 'monospace '
monospaceFontTypeface=モノスペースフォント
# Description: Label of the Text of showing resolved reports of reportlist
moderationShowResolvedReports=解決済みレポートの表示
# Description: Title of the email when moderator sends out an email
moderationSendEmailTitle=App Inventor ギャラリーからのEメール
# Description: Label of the reporter field on moderation page
moderationReporterHeader=報告者
# Description: Label of the report text field on moderation page
moderationReportTextHeader=報告
# Description: Label of the created date of report field on moderation page
moderationReportDateCreatedHeader=報告済み
# Description: error message when fail to send to user from moderator
moderationErrorFailToSendEmail=メールの送信に失敗しました、しばらくしてからもう一度お試しください
# Description: Label of ... 
moderationDotDotDot=...
# Description: Title of the email when app was activated
moderationAppReactivatedTitle=App Inventorギャラリー： アプリ起動
# Description: Body of the email when app was activated
# 0=title
moderationAppReactivateBody=あなたのアプリ"{0}"が再アクティブ化されました。
# Description: Title of the email when app was deactivated
moderationAppDeactivatedTitle=App Inventor ギャラリー： アプリの停止
# Description: Label of the app author field on moderation page
moderationAppAuthorHeader=アプリ作成者
# Description: Label of the Text of sending an email of reportlist
moderationActionSendAnEmail=メールを送信する： 
# Description: Label of the Text of reactivating this app of reportlist
moderationActionReactivateThisApp=このアプリを再起動します
# Description: Label of the Text of marking this report as unresolved of reportlist
moderationActionMarkThisReportAsUnresolved=この報告を未解決とする
# Description: Label of the Text of marking this report as resolved of reportlist
moderationActionMarkThisReportAsResolved=この報告を解決済みとする
# Description: Label of the Text of deativating this app with email of reportlist
moderationActionDeactivateThisAppWithEmail=このアプリをメールで削除する： 
# Description: Text for accelerometer sensitivity choice 'moderate'
moderateAccelerometerSensitivity=適度な
# Description: 
modeParams=モード
# Description: 
minutesParams=分数
# Description: 
minuteParams=分
# Description: 
minimumParams=最小
# Description: 
millisecsParams=ミリ秒数
# Description: 
millisParams=millis関数
# Description: 
millisecondsParams=ミリ秒
# Description: 
messageTextParams=メッセージテキスト
# Description: 
mentionsParams=メンション
# Description: 
mediafileParams=メディアファイル パラム
# Description: 
mediaStoreComponentPallette=メディアストア
# Description: 
mediaComponentPallette=メディア
# Description: 
maximumParams=最大
# Description: List item in Subset Property Editor
matchProjectButton=マッチプロジェクト
# Description: 
maskSourceParams=マスクソース
# Description: 
markerComponentPallette=マーカー
# Description: 
mapsComponentPallette=地図
# Description: Tooltip shown when the user hovers the mouse over the Map component's zoom out control
mapZoomOut=ズームアウト
# Description: 
mapZoomLevelOutOfBoundsException=ズーム（拡大）レベルは１から１８の間でなければなりません
# Description: Tooltip shown when the user hovers the mouse over the Map component's zoom in control
mapZoomIn=ズームイン
# Description: Tooltip shown when the user hovers the mouse over the Map component's unlock map control
mapUnlockMovementTooltip=地図コンポーネントのロック解除する
# Description: 
mapTypeTerrainOption=地形
# Description: Terrain map type
mapTypeTerrain=地形
# Description: Road network map type
mapTypeRoads=道路
# Description: 
mapTypeRoadOption=道路
# Description: 
mapTypeOptionList=地図タイプ
# Description: 
mapTypeAerialOption=空中
# Description: Aerial photography map type
mapTypeAerial=空中
# Description: Tooltip shown when the user hovers the mouse over the Map component's set initial map control
mapSetInitialMapTooltip=初期地図を現在のビューに設定する
# Description: Display name for the metric unit system
mapScaleUnitsMetric=メートル法
# Description: Display name for the imperial unit system
mapScaleUnitsImperial=インペリアル
# Description: Tooltip shown when the user hovers the mouse over the Map component's reset map control
mapResetBoundingBoxTooltip=バウンディングボックスをリセットする
# Description: Tooltip shown when the user hovers the mouse over the Map component's lock map control
mapLockMovementTooltip=地図の移動をロックする
# Description: 
mapFeatureRectangleOption=長方形
# Description: 
mapFeaturePolygonOption=ポリゴン
# Description: 
mapFeatureParams=地図フィーチャ
# Description: 
mapFeatureOptionList=地図フィーチャ
# Description: 
mapFeatureMarkerOption=マーカー
# Description: 
mapFeatureLineStringOption=行の文字列
# Description: 
# 0=numArgs
mapCenterWrongNumberArgumentsException=文字列の中心に2つの値を期待しましたが、{0}を得ました
# Description: Error message when project name does not start with a letter or contains a character that is not a letter, number, or underscore.
malformedProjectNameError=プロジェクト名はアルファベットで始まり、アルファベット、数字、アンダースコアのみを含むことができます
# Description: Error shown after validation of input text failed.
malformedInputError=不正な入力です！
# Description: Error message when form name contains non-alphanumeric characters besides _
malformedFormNameError=スクリーン名にはアルファベット、数字、アンダースコアのみを含めることができ、文字で始まる必要があります
# Description: Error message when file name contains characters that would require URL encoding.
malformedFilenameTitle=エラー：不正なファイル名
# Description: Error message when file name contains characters that would require URL encoding.
malformedFilename=ファイル名には、アクセント記号のないアルファベット、数字、および文字 "-"、"_"、"."、"!"、"~"、"*"、"("、")" しか使用できません
# Description: Error message when component name contains non-alphanumeric characters besides _ or does not start with a letter
malformedComponentNameError=コンポーネント名には文字、数字、アンダースコアのみを含めることができ、文字で始まる必要があります
# Description: 
makePublicParams=公開する
# Description: 
mainTextParams=メインテキスト
# Description: Text for color choice 'Magenta'
magentaColor=マゼンタ
# Description: 
luxParams=lux（ルクス）
# Description: 
longitudeParams=経度
# Description: Show toast for a Toast_Long of time
longToastLength=長い
# Description: Text for the "Login to New Gallery" Button
loginToGallery=ギャラリーにログイン
# Description: 
locationSensorComponentPallette=位置センサー
# Description: 
locationNameParams=位置名
# Description: Message to display when an asset is being downloaded from the server
# 0=assetPath
loadingAsset=App Inventorサーバーから{0}をダウンロードしています...
# Description: Error message reported when a source file couldn't be loaded from the server.
loadError=サーバーエラー：ファイルを読み込めませんでした。しばらくしてから再試行してください！
# Description: 
listParams=リスト
# Description: 
listElementParams=リスト要素
# Description: Column header for main text on ListData property editor
listDataMainTextHeader=メインテキスト
# Description: Column header for image file name on ListData property editor
listDataImageHeader=画像
# Description: Column header for detail text on ListData property editor
listDataDetailTextHeader=テキスト詳細
# Description: Confirm cancel from ListData property editor without saving data.
listDataConcelConfirm=本当にデータを保存せずに終了しますか？
# Description: Title Bar on ListData property editor
listDataAddDataTitle=リストビューにデータを追加する
# Description: 
lineTypeSteppedOption=ステップを踏む
# Description: Text for Chart line type choice 'stepped'
lineTypeStepped=ステップを踏む
# Description: 
lineTypeOptionList=線タイプ
# Description: 
lineTypeLinearOption=ライナー
# Description: Text for Chart line type choice 'linear'
lineTypeLinear=ライナー
# Description: 
lineTypeCurvedOption=曲線
# Description: Text for Chart line type choice 'curved'
lineTypeCurved=湾曲
# Description: 
lineStringComponentPallette=行文字列
# Description: Text for Chart type choice 'line'
lineChartType=線
# Description: Text for color choice 'Light Gray'
lightGrayColor=ライトグレー
# Description: Name of Library link
libraryMenuItem=ライブラリ
# Description: 
legoMindstormsComponentPallette=LEGO® MINDSTORMS®
# Description: Text for text alignment choice 'left'
leftTextAlignment=左
# Description: 
leftParams=左
# Description: 
layoutComponentPallette=レイアウト
# Description: 
latitudeParams=緯度
# Description: 
languageToTranslateToParams=翻訳する言語
# Description: Text for screen orientation choice 'Landscape '
landscapeScreenOrientation=風景
# Description: Label of the Mark As Unresolved of reportlist
labelmarkAsUnresolved=未解決としてマークする
# Description: Label of the Mark As Resolved of reportlist
labelmarkAsResolved=解決済みとしてマークする
# Description: Label of the See All Actions of reportlist
labelSeeAllActions=これまでのアクション
# Description: Label of the Reactivate App on reportlist
labelReactivateApp=アプリを再起動する
# Description: Label of the Deactivate App & Send Email on reportlist
labelDeactivateAppAndSendEmail=アプリの停止し、メールの送信する
# Description: Label of the Deactivate App on reportlist
labelDeactivateApp=アプリを停止する
# Description: Label of the Confirm Action on reportlist
labelConfirm=確認する
# Description: 
labelComponentPallette=ラベル
# Description: Label of the Choose Template Label on reportlist
labelChooseTemplate=テンプレートの選択
# Description: Label of the Cancel Action on reportlist
labelCancel=キャンセル
# Description: 
lOBFValuesYinterceptOption=Y切片
# Description: 
lOBFValuesSlopeOption=Slope関数
# Description: 
lOBFValuesPredictionsOption=Predictions（予測）
# Description: 
lOBFValuesOptionList=LOBF値
# Description: 
lOBFValuesCorrCoefOption=CorrCoef（相関係数）
# Description: 
lOBFValuesAllValuesOption=すべての値
# Description: Caption for keystore upload wizard.
keystoreUploadWizardCaption=キーストアのアップロード...
# Description: Error message reported when the keystore couldn't be uploaded to the server.
keystoreUploadError=サーバーエラー: キーストアをアップロードできませんでした。しばらくしてから再試行してください！
# Description: 
keyValueParams=キー値
# Description: 
jsonTextParams=jsonテキスト
# Description: 
jsonObjectParams=jsonオブジェクト
# Description: 
jsParams=js
# Description: 
itemToAddParams=追加項目
# Description: 
isDirectMethods=はダイレクト
# Description: 
isDirectMethodDescriptions=エミュレータまたはUSB接続で実行されている場合はtrueを返します
# Description: 
isConnectedMethods=接続されている
# Description: 
isConnectedMethodDescriptions=電話がWifiに接続されていればTRUEを、そうでなければFALSEを返します
# Description: Label of the button leading to build related cascade items, when building
isBuildingButton=パッケージング ...
# Description: Error message reported when user id or project id is missing
invalidUserIdOrProjectIdError=ダウンロードするプロジェクトのユーザーEメールアドレスまたはIDとプロジェクト名またはIDの両方を指定してください。idは数字で、システム・ログまたはデータストアをブラウズして得られたものです。メールアドレスを使用する場合は、データストアに保存されているメールアドレスと完全に一致している必要があります。同様に、プロジェクト名も正確に一致する必要があります。どちらも大文字と小文字を区別します。
# Description: Title for New Project Name DialogBox on Invalid Format Error.
# 0=projectName
invalidTitleFormatError=プロジェクト名{0}が無効です
# Description: 
invalidSessionDialogText=このセッションは無効です
# Description: 
invalidSessionDialogMessage=<p><font color=red>警告:</font> このセッションは古くなっています。</p><p>この App Inventor アカウントは別の場所から開かれました。複数の場所から 1 つのアカウントを同時に使用すると、プロジェクトに損害を与える可能性があります。</p><p>以下のボタンのいずれかを選択してください:<ul><li>ここでこのセッションを終了します。</li><li> >これを現在のセッションにし、他のセッションを最新のものにしません。</li><li>両方のセッションを続行します。</li></ul></p>
# Description: 
invalidSessionDialogButtonEnd=このセッションを終了する
# Description: 
invalidSessionDialogButtonCurrent=これを現在のセッションにする
# Description: 
invalidSessionDialogButtonContinue=両セッションを継続する
# Description: Error message when an extension descriptor pathname does not have the correct structure.
# 0=projectName
invalidExtensionInProject=プロジェクト "{0}" に無効な拡張子が含まれています。App Inventor は続行を試みます。
# Description: Message displayed when the user enters an invalid Chart Data entry that cannot be parsed.
invalidChartDataEntry=無効なチャートデータ入力が指定されました。
# Description: Error shown when user types invalid character into project name.
invalidCharProjectNameError=無効な文字です。プロジェクト名にはアルファベット、数字、アンダースコアしか使用できません
# Description: 
internalUseComponentPallette=内部使用のみ
# Description: Alert after an internal error
internalErrorSeeDebuggingView=内部エラーが発生しました。デバッグビューを見てください。
# Description: Confirmation for reporting a bug after an internal error
internalErrorReportBug=内部エラーが発生しました。バグを報告しますか？
# Description: Confirm alert after an internal error
internalErrorClickOkDebuggingView=内部エラーが発生しました。詳細を知りたい場合は「OK」をクリックしてください。
# Description: Alert after an internal error
internalError=内部エラーが発生しました。
# Description: 
instantParams=インスタント
# Description: 
instanceIdParams=インスタンスID
# Description: 
installURLMethods=インストールURL
# Description: 
installURLMethodDescriptions=URLをダウンロードし、インストールされたブラウザからAndroidパッケージとしてインストールします
# Description: Caption for input template url wizard.
inputNewUrlCaption=URLを入力してください...
# Description: 
indexParams=インデックス
# Description: Label of the Inappropriate User Profile Content on reportlist
inappropriateUserProfileContentTitle=不適切なユーザープロフィール内容
# Description: Label of the Text of Template 3 of reportlist
inappropriateUserProfileContentEmail=あなたのプロフィールには不適切な内容が含まれています。プロフィールを修正してください。
# Description: Label of the Inappropriate App Content on reportlist
inappropriateAppContentTitle=不適切なアプリコンテンツ
# Description: Label of the Inappropriate App Content Remove on reportlist
inappropriateAppContentRemoveTitle=不適切なアプリコンテンツ： 削除する
# Description: Label of the Text of Template 1 of reportlist
# 0=title
inappropriateAppContentRemoveEmail=あなたのアプリ「{0}」は不適切なコンテンツのため、ギャラリーから削除されました。http://ai2.appinventor.mit.edu/about/termsofservice.html のガイドラインをご確認ください。この措置が誤って取られたと思われる場合は、この電子メールに直接返信して話し合うことができます。 
# Description: Label of the Text of Template 2 of reportlist
# 0=title
inappropriateAppContentEmail=あなたのアプリ「{0}」には不適切なコンテンツがあります。ガイドラインをご確認の上、アプリを修正してください。 
# Description: Display Text for ListView layout choice having an image and two lines of text.
imageTwoTextLayout=画像、本文、詳細テキスト（縦）
# Description: 
imageSourceParams=画像ソース
# Description: Display Text for ListView layout choice having an image and single line of text.
imageSingleTextLayout=画像、メインテキスト
# Description: 
imagePathParams=画像パス
# Description: 
imageParams=画像
# Description: 
imageNameParams=画像名
# Description: 
imageBotExperimentalWarning=ImageBot（画像ボット）は実験的な機能であり、将来変更される可能性があります。使用は制限されている場合があります。詳しくは<a href="https://appinv.us/imagebot" target="_blank">https://appinv.us/imagebot</a>をご覧ください。
# Description: Name of Import Template menuitem
importTemplateButton=リポジトリからプロジェクト（.aia）をインポートします ...
# Description: String shown in the palette to import an extension
importExtensionMenuItem=インポート拡張
# Description: 
iceServersParams=アイスサーバー
# Description: 
hygrometerComponentPallette=湿度計
# Description: 
humidityParams=湿気
# Description: 
htmlTextParams=htmlテキスト
# Description: 
hoursParams=時(hours)
# Description: 
hourParams=時(hour)
# Description: 
horizontalScrollArrangementComponentPallette=水平スクロール配列
# Description: 
horizontalArrangementComponentPallette=水平配置
# Description: 
horizontalAlignmentRightOption=右
# Description: 
horizontalAlignmentLeftOption=左
# Description: Text for horizontal alignment choice 'Right'
horizontalAlignmentChoiceRight=右
# Description: Text for horizontal alignment choice 'Left
horizontalAlignmentChoiceLeft=左
# Description: Text for horizontal alignment choice 'Center'
horizontalAlignmentChoiceCenter=センター
# Description: 
horizontalAlignmentCenterOption=センター
# Description: Text for recycler view orientation 'horizontal'
horisontalOrientation=水平
# Description: Default value for Hint property
# 0=componentName
hintPropertyValue={0}に対するヒント
# Description: Text on Toggle Warning Button
hideWarnings=警告を非表示にする
# Description: Label of the Text of hiding of reportlist
hideLink=隠す
# Description: Label for the Help menu
helpTabName=ヘルプ
# Description: Caption for the height property
heightPropertyCaption=高さ
# Description: 
heightParams=高さ
# Description: 
headingParams=見出し（ヘッディング）
# Description: Tool tip text for header icon for context menu of box.
hdrSettings=設定
# Description: Tool tip text for header icon for restoring a minimized box.
hdrRestore=拡大
# Description: Tool tip text for header icon for minimizing the box.
hdrMinimize=縮小
# Description: Tool tip text for header icon for closing/removing a minimized box.
hdrClose=閉じる
# Description: Hard Reset the Emulator.
hardResetConnectionsMenuItem=ハードリセット
# Description: 
gyroSensorModeRateOption=レート
# Description: 
gyroSensorModeOptionList=Gyroセンサーモード
# Description: 
gyroSensorModeAngleOption=アングル
# Description: Name of Guide link
guideTabName=ガイド
# Description: Text for recycler view orientation 'grid'
gridOrientation=グリッド
# Description: Text for color choice 'Green'
greenColor=グリーン
# Description: Text for color choice 'Gray'
grayColor=グレー
# Description: Label showing the ant build date and the git version
# 0=date, 1=version
gitBuildId=ビルト {0}バージョン： {1}
# Description: Name of Getting Started link
getStartedMenuItem=始める
# Description: Message displayed when cannot get a MOTD from the server.
getMotdFailed=MOTDを取得するためのサーバーへの問い合わせに失敗しました。
# Description: 
generatingApplicationInformation=アプリケーション情報の作成
# Description: Label of the cascade item for generating YAIL for a project
generateYailMenuItem=YAILの作成
# Description: 
gameClientComponentPallette=ゲームクライアント
# Description: gallery app link label
# 0=host, 1=galleryId
galleryVisitGalleryAppLinkLabel=アプリをご覧ください： {0}/?galleryId={1}をご覧ください
# Description: Text for gallery page update button
galleryUpdateText=アップデート
# Description: Text for gallery Untutorial Text
galleryUntutorialText=チュートリアルなし
# Description: Text for gallery Unfeature Text
galleryUnfeaturedText=特徴なし（アンフューチャー）
# Description: Text for gallery Single Space Text
gallerySingleSpaceText=・ 
# Description: Prompt for the gallery app share section.
gallerySharePrompt=リンクをコピーして共有する： 
# Description: Error message reported when the gallery trying to set project gallery id
gallerySetProjectIdError=サーバーエラー：プロジェクトのギャラリーIDを設定する際のギャラリーエラー
# Description: Error message reported when can't search on server.
gallerySearchError=サーバーエラー：ギャラリーの検索を完了できませんでした
# Description: Prompt for the gallery app report section.
galleryReportPrompt=このアプリが軽蔑、不適切、または<a href="http://google.com">アプリ発明者ギャラリーコミュニティガイドライン</a>に違反していると感じる理由を説明してください。 
# Description: 
GetAllEntriesMethods=全てのエントリを取得する
# Description: 
GetAllEntriesMethodDescriptions=データ系列のすべてのエントリを返します。単一のエントリは、エントリの値のリストとして表現されます。
# Description: 
EntryClickEvents=入力クリック
# Description: 
ElementsFromPairsPropertyDescriptions=データシリーズに使用する要素のカンマ区切りリストです。値は以下のようにフォーマットされます： x1,y1,x2,y2,x3,y3。値はペアで取られ、エントリーはxとyの値から形成されます。
# Description: 
ElementsFromPairsProperties=ペアからの要素
# Description: 
EditImageWithMaskMethods=マスク付き画像の編集
# Description: 
EditImageWithMaskMethodDescriptions=指定された説明を使ってimageSource（イメージソース）を編集します。画像の編集可能な領域は、maskSource（マスクソース）によって示されなければなりません。ソースには、キャンバス、イメージ、またはファイルへのパスを表す文字列を指定できます。
# Description: 
EditImageMethods=画像編集
# Description: 
EditImageMethodDescriptions=与えられた説明を使ってソース画像を編集します。画像の編集可能な領域は、透明なアルファを持つ必要があります。ソースには、Canvas （キャンバス）コンポーネント、Image（イメージ）コンポーネント、またはファイルへのパスを表す文字列を指定できます。
# Description: 
DrawLineOfBestFitMethods=ベストフィットの線引き
# Description: 
DrawLineOfBestFitMethodDescriptions=対応するベストフィットの線をグラフに描く
# Description: 
DoesEntryExistMethodDescriptions=座標デー タ 内に (x, y) 項目が存在す る か どうかを調べます。こ の項目が存在 し ていれば true を,そうでなければ false を返します。
# Description: 
ChatBot__ErrorOccurredEventDescriptions=ErrorOccurred（エラー発生 ） イベントは、処理中にエラーが発生したときに実行されます。例えば、使用クォータがオーバーしていたり、ChatGPT や PaLM によってシグナルされた他のエラーが発生した場合などです。最新の情報は https://appinv.us/chatbot を参照してください。
# Description: 
ChatBot__ApiKeyPropertyDescriptions=ChatGPTのAPIキーです。提供された場合、ChatBotプロキシサーバに埋め込まれたAPIKEYの代わりに使用されます
# Description: 
ChatBotHelpStringComponentPallette=AIチャットボットと通信するための非可視コンポーネントです。このコンポーネントは現在、OpenAIのChatGPT APIを使用するMITのプロキシと通信しています。このコンポーネントは実験的なものです。
# Description: 
Chart__WidthPropertyDescriptions=チャートの横幅をピクセル単位で指定します。
# Description: 
Chart__WidthPercentPropertyDescriptions=チャートの横幅を画面幅に対するパーセンテージで指定します。
# Description: 
Chart__VisiblePropertyDescriptions=Chart（チャート）を画面に表示するかどうかを指定します。値がtrueの場合はChartが表示され、falseの場合は非表示になります。
# Description: 
Chart__TypePropertyDescriptions=チャートのタイプを返します。
# Description: 
Chart__HeightPropertyDescriptions=チャートの垂直方向の高さをピクセル単位で指定します。
# Description: 
Chart__HeightPercentPropertyDescriptions=チャートの垂直方向の高さを、画面の高さに対するパーセンテージで指定します。
# Description: 
Chart__EntryClickEventDescriptions=ユーザが `Chart（チャート）` 内のデータエントリをクリックしたことを示します。xとyの値とともに特定の系列が報告されます。
# Description: 
Chart__DescriptionPropertyDescriptions=チャートの説明ラベルテキストを返します。
# Description: 
Chart__BackgroundColorPropertyDescriptions=チャートの背景色をアルファ-赤-緑-青の整数値で返します。
# Description: 
ChartData2D__SourcePropertyDescriptions=Data コンポーネントに使用する Source を設定します。有効な選択肢には、AccelerometerSensor、BluetoothClient、CloudDB、DataFile、GyroscopeSensor、LocationSesnro、OrientationSensor、Pedometer、ProximitySensor TinyDB、Web コンポーネントがあります。ソース値には、接続されているソースのタイプに応じて、有効な DataSourceValue、WebColumn、または DataFileColumn プロパティも必要です（必要なプロパティは、ソースが変更されると Properties メニューに表示されます）。もし
# Description: 
ChartHelpStringComponentPallette=データを可視化するコンポーネント
# Description: Label of the link to a component's attribution license
viewLicense=ライセンスの表示
# Description: 
rxDataLengthParams=rxデータ長さ
# Description: Text for button shape choice 'rounded'
roundedButtonShape=曲線的
# Description: 
relativeParams=相関的な
# Description: 
quantityParams=量
# Description: Text on "Publish" button
publishButton=発行
# Description: Header for published column of project table.
projectPublishedHeader=発行
# Description: Text to Display Publishing Project Property Category in Project Property Dialog
projectPropertyPublishingCategoryTitle=発行
# Description: 
nxtSensorTypeColorFullOption=フルカラー
# Description: 
nxtSensorModeRawOption=Rawデータ
# Description: 
nxtRunStateRunningOption=実行中
# Description: 
nxtMotorModeOptionList=次のモータームード
# Description: 
nxtMotorModeOnOption=に
# Description: 
nxtMotorModeCoastOption=斜面
# Description: 
DeleteSheetMethods=シートの削除
# Description: 
DeleteSheetMethodDescriptions=スプレッドシート内の指定されたシートを削除します。
# Description: 
DataSourceKeyPropertyDescriptions=アタッチされたデータ ソースからインポートする値のデータ ソース キー識別子を設定します。例としては、値を識別する 小型DB コンポーネントのタグがあります。このプロパティはデザイナー専用のプロパティであり、チャート データ コンポーネントのソース コンポーネントを設定した後に変更する必要があります。互換性のある各ソースに適用できる値の完全なリストは次のとおりです。 * 小型DB および クラウドDB の場合、これはタグ値です。 * 加速度センサーの場合、値は次のいずれかである必要があります: X Y または Z * ジャイロスコープ センサーの場合、値は次のいずれかである必要があります: X Y または Z * 位置センサーの場合、値は次のいずれかである必要があります: 緯度、経度、高度、または速度 * オリエンテーションセンサー の場合、値は次のいずれかである必要があります: ピッチ、方位角、またはロール * 歩数計の場合、値は次のいずれかである必要があります: ウォークステップ, シンプルステップまたは Distance * 近接センサー  の場合、値距離があるはずです。 * Bluetoothクライアントの場合、値は値から削除するプレフィックスを表します。たとえば、値が「t:12」の形式である場合、プレフィックスを「t:」として指定すると、プレフィックスがデータから削除されます。純粋に数値が返される場合、値を指定することはできません。
# Description: 
DataSourceKeyProperties=データソースキー
# Description: 
DataFile__RowsPropertyDescriptions=データファイルの内容に対応する行のリストを返します。
# Description: 
DataFile__ColumnsPropertyDescriptions=データファイルの内容に対応するカラムのリストを返します。
# Description: 
DataFileYColumnPropertyDescriptions=データファイルコンポーネントからデータをインポートする際に使用する値
# Description: 
DataFileYColumnProperties=データファイルY列
# Description: 
DataFileXColumnPropertyDescriptions=データファイルコンポーネントからデータをインポートする際に使用する値
# Description: 
DataFileXColumnProperties=データファイルX列
# Description: 
DataFileHelpStringComponentPallette=CSVやJSONデータを読み込むことができるコンポーネントです。データファイルには、CSVやJSONでパースされたデータを行や列の形でアクセスするための機能が含まれています。チャートデータ2Dコンポーネントと一緒に使用することで、ファイルからチャートに直接データをインポートすることができます。また、ファイルが選択され、解析に成功した後、このコンポーネントをチャート上にドラッグ＆ドロップすると、ファイルからチャートデータコンポーネントがチャート上に自動的に作成されます。
# Description: 
CredentialsJsonPropertyDescriptions=サービスアカウントの認証情報を含むJSONファイル
# Description: 
CredentialsJsonProperties=認証情報Json
# Description: 
CreateImageMethods=画像の作成
# Description: 
CreateImageMethodDescriptions=与えられた説明を使って画像を作成します。
# Description: 
ConverseMethods=コンバース
# Description: 
ColumnNamesPropertyDescriptions=データファイルの内容の最初の行の要素を返します。
# Description: 
ColumnNamesProperties=カラム（列）名
# Description: 
ColorsPropertyDescriptions=チャートの色をリストとして返します。
# Description: 
ColorPropertyDescriptions=データ系列の色をアルファ-赤-緑-青の整数値で返します。
# Description: 
CloudDB__TokenPropertyDescriptions=このフィールドには、バックアップされたレディス(Redis)サーバーへのログインに使用される認証トークンが含まれます。"デフォルト(DEFAULT)"サーバーの場合、この値は編集しないでください。システム管理者は、複数の人が複数のプロジェクト間でデータを共有するために使用できる特別な値を提供することもできます。独自のRedisサーバーを使用する場合は、サーバーの設定でパスワードを設定し、ここに入力してください。
# Description: 
ClearRangeMethods=クリア範囲
# Description: 
ClearRangeMethodDescriptions=与えられた範囲のセルを空にする。完了すると、このブロックは クリア範囲完了(FinishedClearRange)コールバックイベントをトリガーします。
# Description: 
CleanDataMethods=クリーンデータ
# Description: 
CleanDataMethodDescriptions=ひとつの異常値と、データの x と y の値が与えられた場合。このブロックは、異常値を除いたデータの x と y の値のペアを返します
# Description: 
zStrengthParams=z強さ
# Description: 
zAngularVelocityParams=z角速度
# Description: 
zAccelParams=zアクセル
# Description: 
xvelParams=xvel
# Description: 
yvelParams=yvel
# Description: Text for color choice 'Yellow'
yellowColor=黄色
# Description: 
yearsParams=年
# Description: 
yearParams=年
# Description: Message providing details about the renaming of YandexTranslate to Translator
# 0=name
yandexTranslateReplacedwithTranslator={0}という名前のYandex翻訳コンポーネントは、翻訳者コンポーネントを使用するように変更されました。
# Description: 
yandexTranslateComponentPallette=Yandex 翻訳
# Description: Error message reported when yail generation fails for a screen
# 0=formName, 1=description
yailGenerationError=画面 {0} の Yail 生成エラー： {1}. 修正して再度パッケージングをお試しください。
# Description: 
yValueColumnParams=y値列
# Description: 
yStrengthParams=y強さ
# Description: 
yParams=y
# Description: 
yListParams=yリスト
# Description: 
yColumnParams=yカラム（列）
# Description: 
yAngularVelocityParams=y角速度
# Description: 
yAccelParams=yアクセル
# Description: 
y2Params=y2
# Description: 
y1Params=y1
# Description: 
xmlTextParams=xmlテキスト
# Description: 
xmlTextDecodeMethods=Xmlテキストデコード
# Description: 
xValueColumnParams=x値列
# Description: 
xStrengthParams=x強さ
# Description: 
xParams=x
# Description: 
xListParams=xリスト
# Description: 
xColumnParams=xカラム（列）
# Description: 
xAngularVelocityParams=x角速度
# Description: 
xAccelParams=xアクセル
# Description: 
x2Params=x2
# Description: 
x1Params=x1
# Description: Error message displayed when no or many projects are selected
wrongNumberProjectsSelected=必ずプロジェクトを１つ選択しなければなりません
# Description: Error message displayed when zero or more than one projects are selected
wrongNumberProjectSelectedForPublishOrUpdate=公開または更新するプロジェクトを１つだけ選択してください
# Description: 
wildcardParams=ワイルドカード
# Description: Caption for the width property
widthPropertyCaption=横幅
# Description: 
widthParams=横幅
# Description: Error shown when user types space into project name.
whitespaceProjectNameError=プロジェクト名にスペースを含めることはできません
# Description: Text for color choice 'White'
whiteColor=白
# Description: 
weeksParams=週
# Description: 
webViewerComponentPallette=ウェブ視聴者
# Description: 
webParams=ウェブ
# Description: 
webComponentPallette=ウェブ
# Description: Text for accelerometer sensitivity choice 'weak'
weakAccelerometerSensitivity=弱い
# Description: 
warningDialogTitle=警告！
# Description: Dialog to show when account deletion is requested but the user has projects
warnHasProjects=アカウントを削除するには、まずすべてのプロジェクトを削除する必要があります
# Description: 
walkStepsParams=歩行ステップ
# Description: 
waitingForBarcode=バーコードを待っています。
# Description: 
votingComponentPallette=投票
# Description: 
volumeParams=ボリューム
# Description: Caption for a viewer box.
viewerBoxCaption=視聴者
# Description: Name of View Trash tab
viewTrashTabName=ゴミ箱を表示
# Description: Text on "Trash" button
viewTrashButton=ゴミ箱を見る
# Description: List item in Subset Property Editor
viewAndModifyButton=表示および変更
# Description: 
videoPlayerComponentPallette=ビデオプレーヤー
# Description: Alert message displayed when upgrading a project without version numbers
veryOldProject=このプロジェクトは、App Inventorシステムの初期プレリリース版で保存されました。プロジェクトのロードを試みますが、互換性の問題が発生する可能性があります。
# Description: 
verticalScrollArrangementComponentPallette=垂直スクロール配列
# Description: Text for recycler view orientation 'vertical'
verticalOrientation=垂直
# Description: 
verticalArrangementComponentPallette=垂直配列
# Description: 
verticalAlignmentTopOption=トップ
# Description: 
verticalAlignmentOptionList=垂直配置
# Description: Text for vertical alignment choice 'Top'
verticalAlignmentChoiceTop=トップ
# Description: Text for vertical alignment choice 'Center'
verticalAlignmentChoiceCenter=センター
# Description: Text for vertical alignment choice 'Bottom'
verticalAlignmentChoiceBottom=ボトム
# Description: 
verticalAlignmentCenterOption=中心
# Description: 
verticalAlignmentBottomOption=ボトム
# Description: 
valuesParams=値
# Description: 
valueToStoreParams=保存（格納）する値
# Description: 
valueToAddParams=追加する価値
# Description: 
valueParams=値
# Description: 
# 0=text, 1=min, 2=max
valueNotInRange=指定された値 {0} は、期待された範囲 [{1}, {2}] にありませんでした。
# Description: 
valueIfTagNotThereParams=タグがない場合の値
# Description: 
valueFromWebDBParams=ウェブDBからの値
# Description: 
uuidParams=UUID
# Description: Text for screen orientation choice 'User '
userScreenOrientation=ユーザー
# Description: 
userParams=ユーザー
# Description: 
userInterfaceComponentPallette=ユーザーインターフェース
# Description: Label for the user id input text box
userIdLabel=ユーザーIDまたはEメール（大文字と小文字を区別します）：
# Description: Label of the button for admins to switch to the user admin interface
userAdminMenuItem=ユーザー管理者
# Description: 
useHeadersParams=使用ヘッダー
# Description: 
useFrontDeprecated=カメラコンポーネントから使用フロント(useFront)プロパティが削除されました
# Description: Used by the MockFirebaseDB to display default checkbox
useDefault=デフォルトを使用する
# Description: Label showing the companion version
# 0=version, 1=alternateVersion
useCompanion=コンパニオンを使用する： {0}もしくは{1}
# Description: 
useCenterParams=使用センター
# Description: 
useBrakeParams=使用ブレーキ
# Description: Message providing details about starting a USB connection.
usbMenuItem=USB
# Description: 
urlParams=URI
# Description: 
urlImportWizardCaption=URLからメディアをインポートする
# Description: 
uriParams=URI
# Description: Label of the button for import keystore
uploadKeystoreMenuItem=キーストアのインポート
# Description: Error message displayed when a server error occurs during upload keystore
uploadKeystoreError=サーバーエラー：キーストアファイルをアップロードできませんでした。
# Description: Message providing details about a project upgrade involving a Logger component
# 0=name
upgradeDetailLoggerReplacedWithNotifier={0}というロガー(Logger)コンポーネントが通知者(Notifier)コンポーネントに変更されました。
# Description: Text on "Update Gallery App" button
updateGalleryAppButton=ギャラリーアプリの更新する
# Description: Text for screen orientation choice 'Unspecified '
unspecifiedScreenOrientation=不明
# Description: 
# 0=maptype
unknownMapTypeException=予期しない地図タイプです： {0}
# Description: 
uninitializedComponentPallette=未初期化
# Description: Alert message displayed when upgrade fails
# 0=details
unexpectedProblem=このプロジェクトのロード中に問題が発生しました。{0}
# Description: Compilation error, with error message.
# 0=errorMesssage
unableToCompile=App Inventor では、このプロジェクトをコンパイルできません。  <br />コンパイラのエラー出力は<br /> {0}でした。
# Description: 
ultrasonicSensorUnitOptionList=超音波センサー単位
# Description: 
ultrasonicSensorUnitInchesOption=インチ
# Description: 
ultrasonicSensorUnitCentimetersOption=センチメートル
# Description: 
typeParams=タイプ
# Description: Display Text for ListView layout choice having two lines of text in linear manner.
twoTextLinearLayout=メインテキスト, 詳細テキスト(横)
# Description: Display Text for ListView layout choice having two lines of text.
twoTextLayout=メインテキスト , 詳細テキスト(縦)
# Description: 
twitterComponentPallette=ツイッター
# Description: Name of Tutorials link
tutorialsMenuItem=チュートリアル
# Description: 
turnRatioParams=回転率
# Description: Name of Troubleshooting link
troubleshootingMenuItem=故障の診断
# Description: Caption for trash list box.
trashprojectlistbox=自分の削除されたプロジェクト
# Description: Name of Move To Trash menuitem
trashProjectMenuItem=ゴミ箱へ移動
# Description: Abbreviated alternative trash button text
trashButton=ゴミ
# Description: 
transportMethodWheelchairOption=車いす
# Description: 
transportMethodOptionList=輸送方法
# Description: 
transportMethodFootOption=フィート
# Description: 
transportMethodCarOption=車
# Description: 
transportMethodBicycleOption=自転車
# Description: 
translatorComponentPallette=翻訳者
# Description: 
translationParams=翻訳
# Description: 
touchedSpriteParams=タッチスプライト
# Description: 
touchedAnySpriteParams=任意のスプライトに接触
# Description: 
topParams=トップ
# Description: Label for the Toggle Tutorial Button
toggleTutorialButton=トグルチュートリアル
# Description: 
toScopeParams=スコープへ
# Description: 
toFileNameParams=ファイル名へ
# Description: Title for App Inventor
titleYoungAndroid=MITアプリ開発者
# Description: Title of the Previous Actions Popup of reportlist
titleSeeAllActionsPopup=報告書に関するこれまでの対応
# Description: 
titleParams=タイトル
# Description: 
tinyWebDBComponentPallette=小型ウェブDB
# Description: 
tinyDBParams=小型DB
# Description: 
tinyDBComponentPallette=小型DB
# Description: 
timestampParams=タイムスタンプ
# Description: 
timelineParams=タイムライン
# Description: 
timePickerComponentPallette=タイムピッカー
# Description: Text Messages are received only when the App is in the foreground.
textReceivingChoiceForeground=フォアグラウンド
# Description: Text messages are always received, and a notification is shown if the App is in the background.
textReceivingChoiceAlways=常時
# Description: Default value for Text property
# 0=componentName
textPropertyValue={0}のためのテキスト
# Description: 
textParams=テキスト
# Description: 
textBoxComponentPallette=テキストボックス
# Description: None
textAnyComponentLabel=どれでも 
# Description: Label of the link for Terms
termsLink=条件
# Description: Caption for template upload wizard.
templateUploadWizardCaption=テンプレートからプロジェクトを作成する
# Description: Caption for template dialog menu item.
templateUploadNewUrlCaption=新しいテンプレートライブラリのURLを追加する
# Description: 
temperatureParams=温度
# Description: Label showing the target sdk version and the target android version
# 0=sdk, 1=name
targetSdkVersion=ターゲットAndroid SDK： {0} ({1})
# Description: 
targetParams=ターゲット
# Description: 
tagParams=タグ
# Description: 
tagFromWebDBParams=タグ ウェブDBより
# Description: 
tachoLimitParams=タコリミット
# Description: 
tachoCountsParams=タコカウント
# Description: 
tachoCountParams=タコカウント
# Description: 
tableIdParams=テーブルID
# Description: 
tableArrangementComponentPallette=テーブル配置
# Description: Name of Design tab
tabNameDesign=デザイン
# Description: Name of Debugging tab
tabNameDebugging=(デバッグ)
# Description: Symbol X
symbolX=X
# Description: Label of the button for switching to the form editor
switchToFormEditorButton=デザイナー
# Description: Label of the button for admins to switch to the debug panel without an explicit error
switchToDebugMenuItem=デバッグパネルに切り替える
# Description: Label of the button for switching to the blocks editor
switchToBlocksEditorButton=ブロック
# Description: Label of the button for switching language
switchLanguageButton=言語
# Description: 
switchComponentPallette=切り替え
# Description: 
sweepAngleParams=スイープ角度
# Description: Title for dialog box.
# 0=projectName
suggestNameTitleCaption=このまま{0}を続けますか
# Description: Title for New Project Name DialogBox on Success.
successfulTitleFormat=新しいプロジェクト名 成功
# Description: Text for accelerometer sensitivity choice 'strong'
strongAccelerometerSensitivity=強い
# Description: 
storageComponentPallette=ストレージ
# Description: 
statusParams=ステータス
# Description: 
startingConnectionDialog=0 起動
# Description: 
startedStatusOutgoingOption=発信
# Description: 
startedStatusOptionList=開始状態
# Description: 
startedStatusIncomingOption=着信
# Description: 
startYParams=開始Y
# Description: 
startXParams=開始X
# Description: 
startWebRTCMethods=WebRTCを開始
# Description: 
startWebRTCMethodDescriptions=WebRTCエンジンを起動する
# Description: 
startParams=開始
# Description: 
startHTTPDMethods=開始HTTPD
# Description: 
startHTTPDMethodDescriptions=内部 AppInvHTTPD を起動し、受信フォームを待ち受けます。REPL のみに使用してください！
# Description: 
startAngleParams=開始角度
# Description: 
spreadsheetParams=スプレッドシート
# Description: 
spreadsheetComponentPallette=スプレッドシート
# Description: 
spinnerComponentPallette=スピナー
# Description: 
speedParams=スピード
# Description: 
speechRecognizerComponentPallette=音声認識
# Description: Caption for source structure box.
sourceStructureBoxCaptionVisible=可視コンポーネント
# Description: Caption for source structure box.
sourceStructureBoxCaptionNonVisible=非可視コンポーネント
# Description: Caption for source structure box.
sourceStructureBoxCaptionAll=すべてのコンポーネント
# Description: Caption for source structure box.
sourceStructureBoxCaption=コンポーネント
# Description: 
sourceParams=ソース
# Description: 
soundRecorderComponentPallette=サウンドレコーダー
# Description: 
soundParams=サウンド
# Description: 
soundComponentPallette=サウンド
# Description: 
socialComponentPallette=ソーシャル
# Description: 
sliderComponentPallette=スライダー
# Description: Text for screen animation choice 'SlideVertical '
slideVerticalScreenAnimation=垂直にスライド
# Description: Text for screen animation choice 'SlideHorizontal '
slideHorizontalScreenAnimation=水平にスライド
# Description: Display Text for ListView layout choice having single text.
singleTextLayout=本文
# Description: 
simpleStepsParams=簡単なステップ
# Description: Label of the link for signing out
signOutLink=サインアウト
# Description: 
shutdownMethods=シャットダウン
# Description: 
shutdownMethodDescriptions=本当にアプケーションを終了する
# Description: Text on Toggle Warning Button
showWarnings=警告を表示する
# Description: 
showSurveySplashMessage=<h2>MIT App Inventorをより良くするために、簡単なアンケートにご協力ください。</h2>
# Description: 
showSurveySplashButtonNow=今すぐアンケートに回答する
# Description: 
showSurveySplashButtonNever=アンケートに回答しない
# Description: 
showSurveySplashButtonLater=後でアンケートに回答する
# Description: Redisplay the Splash Screen
showSplashMenuItem=スプラッシュ画面を表示する
# Description: Checkbox controlling whether to display invisible components in the designer.
showHiddenComponentsCheckbox=視聴者に非表示コンポーネントを表示する
# Description: Label of item for building a project as apk and showing the qr+download dialog
showExportAndroidApk2=[2] Androidアプリ（.apk）
# Description: Label of item for building a project as apk and showing the qr+download dialog
showExportAndroidApk=アンドロイドアプリ（.apk）
# Description: Label of item for building a project as aab and showing the qr+download dialog
showExportAndroidAab2=[2] Androidアプリバンドル (.aab)
# Description: Label of item for building a project as aab and showing the qr+download dialog
showExportAndroidAab=Androidアプリバンドル (.aab)
# Description: 
showEmptyTrashMessage=あなたのゴミ箱リストは空です
# Description: Show toast for a Toast_Short of time
shortToastLength=短い
# Description: 
sheetNameParams=シート名
# Description: 
sheetDataParams=シートデータ
# Description: 
sharingComponentPallette=共有
# Description: User Settings
settingsTabName=設定
# Description: Error message reported when the settings couldn't be saved to the server.
settingsSaveError=サーバーエラー：設定を保存できませんでした。後ほど再試行してください！
# Description: Error message reported when the settings couldn't be loaded from the server.
settingsLoadError=サーバーエラー：設定をロードできませんでした。後ほど再試行してください！
# Description: 
setHmacSeedReturnCodeMethods=Hmacシードリターンコードを設定する
# Description: 
setHmacSeedReturnCodeMethodDescriptions=HOTP生成用の秘密のシードを確立します。提供されたシードのSHA1を返し、これがランデブーサーバーとの連絡に使用されます。注：このコードは、WebRTCを使用している場合、接続ネゴシエーションプロセスも開始します。これはちょっとした手抜きです。
# Description: 
setAssetsLoadedMethods=ロードされたアセットを設定する
# Description: 
setAssetsLoadedMethodDescriptions=初期アセットをロードし、その他のアセットをSDカードからロードすることを宣言します
# Description: 
sessionDead=セッションの有効期限が切れたか、App Inventor がアップグレードされました。続行するには、セッションを「再読み込み」する必要があります。下の「リロード」ボタンを押してください。
# Description: 
serviceNameParams=サービス名
# Description: Error message if the server becomes completely unavailable.
serverUnavailable=サーバーが一時的に使用できません。後ほどもう一度お試しください！
# Description: Text for font typeface choice 'serif '
serifFontTypeface=セリフ体
# Description: 
seriesParams=シリーズ
# Description: 
serialComponentPallette=シリアル
# Description: 
sensorsComponentPallette=センサー
# Description: 
sensorValueParams=センサーの値
# Description: 
sensorTypeParams=センサータイプ
# Description: Text for screen orientation choice 'Sensor '
sensorScreenOrientation=センサー
# Description: 
sensorPortLetterParams=センサーポートレター
# Description: 
sensorModeParams=センサーモード
# Description: 
sensitivityWeakOption=弱い
# Description: 
sensitivityStrongOption=強い
# Description: 
sensitivityOptionList=感度
# Description: 
sensitivityModerateOption=程度
# Description: Message to display when sending an asset to the companion
# 0=assetPath
sendingAssetToCompanion={0}をコンパニオンに送信...
# Description: 
senderParams=送信者
# Description: 
selectionParams=セレクション
# Description: Error Message for when more then one project (or no projects) are selected to send to the new gallery
selectOnlyOneProject=プロジェクトを1つだけ選択してください
# Description: 
seedParams=シード
# Description: Label of the Text of seeing more of reportlist
seeMoreLink=もっと見る ...
# Description: 
secureParams=安全
# Description: 
secondsParams=秒
# Description: 
secondParamsMethods=秒パラメータ
# Description: 
secondParams=秒
# Description: 
searchResultsParams=検索結果
# Description: Text shown in the component palette search box
searchComponents=コンポーネントを検索...
# Description: Label of the button for switching screens
screensButton=スクリーン...
# Description: 
screenOrientationUserOption=ユーザー
# Description: 
screenOrientationUnspecifiedOption=不明
# Description: 
screenOrientationSensorPortraitOption=センサーポートレート
# Description: 
screenOrientationSensorOption=センサー
# Description: 
screenOrientationSensorLandscapeOption=センサーの風景
# Description: 
screenOrientationReversePortraitOption=逆ポートレート
# Description: 
screenOrientationReverseLandscapeOption=風景を反転
# Description: 
screenOrientationPortraitOption=ポートレート
# Description: 
screenOrientationOptionList=画面の向き
# Description: 
screenOrientationNoSensorOption=センサーなし
# Description: 
screenOrientationLandscapeOption=風景
# Description: 
screenOrientationFullSensorOption=フルセンサー
# Description: 
screenOrientationBehindOption=後ろ
# Description: 
screenComponentPallette=スクリーン
# Description: 
screenAnimationZoomOption=ズーム
# Description: 
screenAnimationSlideVerticalOption=垂直にスライド
# Description: 
screenAnimationSlideHorizontalOption=水平にスライド
# Description: 
screenAnimationOptionList=スクリーンアニメーション
# Description: 
screenAnimationNoneOption=ない
# Description: 
screenAnimationFadeOption=フェード
# Description: 
screenAnimationDefaultOption=デフォルト
# Description: 
scopeParams=範囲
# Description: Text for Chart type choice 'scatter'
scatterChartType=ばらまく
# Description: 
scaleUnitsOptionList=スケール単位
# Description: 
scaleUnitsMetricOption=メートル法
# Description: 
scaleUnitsImperialOption=帝国の
# Description: A choice in ScalingChoicePropertyEditor
scaleToFit=スケールを合わせる
# Description: A choice in ScalingChoicePropertyEditor
scaleProportionally=比例して拡大
# Description: Message that is shown to indicate that a saving RPC is going on
savingRpcMessage=保存中...
# Description: Message reported when project was saved successfully.
# 0=saveTime
savedProject={0}でプロジェクトを保存
# Description: Name of Save menuitem
saveMenuItem=プロジェクトを保存する
# Description: Error message reported when one or more file couldn't be saved to the server.
saveErrorMultipleFiles=サーバーエラー：１つ以上のファイルを保存できませんでした。後ほど再試行してください！
# Description: Error message reported when a source file couldn't be saved to the server.
saveError=サーバーエラー：ファイルを保存できませんでした。後ほど再試行してください！
# Description: Label of the button for save
saveButton=保存
# Description: Title of save as dialog.
# 0=projectName
saveAsTitle=名前を付けて保存 - {0}
# Description: Name of Save as ... menuitem
saveAsMenuItem=プロジェクトを保存 ...
# Description: Label of the button for save as
saveAsButton=ファイルへにエクスポート ...
# Description: Text for font typeface choice 'sans serif '
sansSerifFontTypeface=サンセリフ体
# Description: Error shown when a new component name would be the same as a component type name
sameAsComponentTypeNameError=コンポーネントインスタンス名をコンポーネントタイプと同じにすることはできません
# Description: Error shown when a new component type would be the same as a component instance name
sameAsComponentInstanceNameError=コンポーネント名は、コンポーネントインスタンスの名前と同じにすることはできません
# Description: 
runStateParams=実行状態
# Description: 
rowParams=行
# Description: 
rowNumberParams=行番号
# Description: 
row1Params=行１
# Description: 
rowDataListParams=行データリスト
# Description: 
row2Params=行２
# Description: 
rollParams=回転
# Description: Text for text alignment choice 'right'
rightTextAlignment=権利
# Description: 
rightParams=権利
# Description: 
resultParams=結果
# Description: Error message reported when restoring a project failed on the server.
restoreProjectError=サーバーエラー：プロジェクトを復元できませんでした。後ほど再試行してください！
# Description: Text on "Restore" button
restoreProjectButton=復元
# Description: Text for Sizing choice 'responsive' -- size based on device type
responsiveSizing=レスポンシブ
# Description: 
responseTypeParams=レスポンスタイプ
# Description: 
responseTextParams=レスポンステキスト
# Description: 
responseParams=レスポンス
# Description: 
responseContentParams=レスポンスコンテンツ
# Description: 
responseCodeParams=レスポンスコード
# Description: 
DoesEntryExistMethods=エントリーは存在するか
# Description: 
DetectAnomaliesMethods=異常の検出
# Description: 
DetectAnomaliesMethodDescriptions=Zスコアの異常検出： 各データポイントのZ-スコアを、与えられた閾値に対してチェックします。もしデータポイントのZ-スコアが閾値より大きければ、そのデータポイントは異常としてラベル付けされ、ペア（異常インデックス、異常値）のリストで返されます
# Description: Reset all connections.
resetConnectionsMenuItem=接続リセット
# Description: Title for New Project Name DialogBox on Reserved Name Error.
# 0=projectName
reservedTitleFormatError=名前{0}は予約されています
# Description: Error shown when a new name is a reserved name in Yail or Java code
reservedNameError=Name には以下のいずれかを指定することはできません： CsvUtil, Double, Float, Integer, JavaCollection, JavaIterator, KawaEnvironment, Long, Short, SimpleForm, String, Pattern, YailDictionary, YailList, YailNumberToString, YailRuntimeError, abstract, continue, for, new, switch, assert, default, goto, package, synchronized, boolean, do, if, private, this, break, double、 implements、protected、throw、byte、else、import、public、throws、case、enum、instanceof、return、transient、catch、extends、int、short、try、char、final、interface、static、void、class、finally、long、strictfp、volatile、const、float、native、super、while、begin、def、foreach、forrange、JavaStringUtils、quote
# Description: Label for new project name Textbox.
requestNewProjectNameLabel=新しい名前を入力
# Description: 
rendezvousServerParams=ランデブーサーバー
# Description: Title for the rename component dialog
renameTitle=コンポーネント名の変更
# Description: Label of the button for rename
renameButton=名前の変更
# Description: Label of the button for removing a screen
removeFormButton=画面の削除
# Description: 
reloadWindow=リロード
# Description: 
regulationModeParams=規制モード
# Description: 
regressionComponentPallette=回帰
# Description: Refresh the companion screen.
refreshCompanionMenuItem=コンパニオン画面を更新
# Description: 
reflectedValues=反映
# Description: Text for color choice 'Red'
redColor=赤
# Description: 
recursiveParams=再帰的
# Description: 
rectangleComponentPallette=矩形
# Description: Text for button shape choice 'rectangular'
rectButtonShape=四角い
# Description: 
recipientsParams=受信者
# Description: 
receivingStateOptionList=受信状態
# Description: 
receivingStateOffOption=オフ
# Description: 
receivingStateForegroundOption=フォアグラウンド
# Description: 
receivingStateAlwaysOption=常に
# Description: Confirmation query for removing a component
reallyRemoveComponent=このコンポーネントを削除すると、プロジェクト内のすべてのコンポーネントと関連するブロックが削除されます。本当に削除しますか？
# Description: Confirmation query for removing a screen
# 0=formName
reallyDeleteWarning=警告：この操作は元に戻せません。本当にこの操作を行うか確認するため、画面の名前{0}を下のボックスに入力してください。
# Description: Confirmation query for removing a screen
# 0=formName
reallyDeleteForm=この画面を削除すると、プロジェクトから画面が完全に削除されます。この画面に関連付けられているすべてのコンポーネントとブロックが削除されます。undo（アンドゥ）はありません。本当に{0}を削除しますか？
# Description: Confirmation message that will be shown before deleting a file
reallyDeleteFile=このファイルを本当に削除しますか？App Inventor サーバから削除されてしまいます。 また、アプリケーションの一部が削除されたファイルをまだ参照している可能性があるため、これらを変更する必要があります。
# Description: Confirmation query for deleting a component
reallyDeleteComponent=このコンポーネントを削除すると、ブロックエディタでこのコンポーネントに関連するすべてのブロックが削除されます。本当に削除しますか？
# Description: 
readOnlyMode=読み取り専用モードになっています
# Description: 
rateValues=割合
# Description: 
rangeReferenceParams=参照範囲
# Description: 
rangeDataParams=範囲データ
# Description: 
radiusParams=半径
# Description: 
rParams=r
# Description: 
questionParams=質問
# Description: 
queryParams=問い合わせ
# Description: Text on "Publish to Gallery" button
publishToGalleryButton=ギャラリーに公開する
# Description: 
proximitySensorComponentPallette=近接センサー
# Description: 
providerParams=提供者
# Description: Caption for properties box.
propertiesBoxCaption=プロパティ―
# Description: 
promptParams=プロンプト
# Description: Name of Projects tab
projectsTabName=プロジェクト
# Description: Alert message displayed when a project is upgraded
# 0=details
projectWasUpgraded=このプロジェクトは App Inventor システムの古いバージョンで作成され、アップグレードされました。{0}
# Description: Caption for project upload wizard.
projectUploadWizardCaption=プロジェクトのインポート...
# Description: Error message reported when a project couldn't be uploaded to the server.
projectUploadError=サーバーエラー：プロジェクトをアップロードできませんでした。後ほど再試行してください！
# Description: Text to Display Theming Project Property Category in Project Property Dialog
projectPropertyThemingCategoryTitle=テーマ
# Description: Text to Display General Project Property Category in Project Property Dialog
projectPropertyGeneralCategoryTitle=一般
# Description: Text On Project Properties Button
projectPropertiesText=プロジェクトプロパティ
# Description: Text On Project Properties Dialog Menuitem
projectPropertiesMenuItem=プロジェクトプロパティ...
# Description: Label for the project name input text box
projectNameLabel=プロジェクト名：
# Description: Header for name column of project table
projectNameHeader=名前
# Description: Name of My projects menuitem
projectMenuItem=自分のプロジェクト
# Description: Error message reported when a project could not be loaded from the server.
projectLoadError=サーバーエラー：プロジェクトをロードできませんでした。しばらくしてから再試行してください！
# Description: Caption for project list box.
projectListBoxCaption=プロジェクト
# Description: Error message reported when information about projects could not be retrieved from the server.
projectInformationRetrievalError=サーバーエラー：プロジェクト情報を取得できませんでした。しばらくしてから再試行してください！
# Description: Label for the project id input text box
projectIdLabel=プロジェクトのIDまたは名前：
# Description: Header for date modified column of project table.
projectDateModifiedHeader=更新日
# Description: Header for date created column of project table.
projectDateCreatedHeader=作成日
# Description: 
programNameParams=プログラム名
# Description: Label of the link for Privacy and Terms of Use
privacyTermsLink=プライバシーポリシーと利用規約
# Description: Label of the link for Privacy
privacyLink=プライバシー
# Description: Label for previous checkpoints table in checkpoint dialog.
previousCheckpointsLabel=これまでのチェックポイント：
# Description: Listbox (tablet) controlling whether to display a preview on Tablet size.
previewTabletSize=タブレットのサイズ
# Description: Listbox (phone) controlling whether to display a preview on Phone size.
previewPhoneSize=携帯電話のサイズ
# Description: Listbox (monitor) controlling whether to display a preview on Monitor size.
previewMonitorSize=モニターサイズ
# Description: Listbox (monitor) controlling whether to display Android Holo Theme Style
previewAndroidHolo=Android 3.0～4.4.2搭載デバイス
# Description: Listbox (monitor) controlling whether to display iOS Theme Style
previewIOS=iOS 13搭載デバイス
# Description: Label for the context menu command that previews a file
previewFileCommand=プレビュー...
# Description: Listbox (monitor) controlling whether to display Android Material Theme Style
previewAndroidMaterial=Android 5以上搭載デバイス
# Description: 
prevYParams=prevY
# Description: 
prevXParams=prevX
# Description: 
pressureParams=圧力
# Description: 
preparingFinalPackage=最終パッケージの準備
# Description: 
preparingApplicationIcon=アプリケーションのアイコンを準備中
# Description: 
powerParams=パワー
# Description: Text for screen orientation choice 'Portrait '
portraitScreenOrientation=ポートレート
# Description: 
polygonComponentPallette=ポリゴン
# Description: 
pointsParams=ポイント
# Description: 
pointStyleXOption=X
# Description: 
pointStyleTriangleOption=三角
# Description: 
pointStyleSquareOption=四角
# Description: 
pointStyleOptionList=ポイントスタイル
# Description: 
pointStyleCrossOption=クロス
# Description: 
pointStyleCircleOption=円
# Description: 
pointListParams=ポイントリスト
# Description: 
playerIdParams=プレイヤーID
# Description: 
playerEmailParams=プレーヤーEメール
# Description: 
playerComponentPallette=プレイヤー
# Description: Summary for custom length in pixels
# 0=pixels
pixelsSummary={0}ピクセル
# Description: Caption for pixels label
pixelsCaption=ピクセル
# Description: 
pitchParams=ピッチ
# Description: Text for color choice 'Pink'
pinkColor=ピンク
# Description: Text for Chart type choice 'pie'
pieChartType=パイ
# Description: 
phoneStatusComponentPallette=電話機の状態
# Description: 
phoneNumberPickerComponentPallette=電話番号ピッカー
# Description: 
phoneNumberParams=電話番号
# Description: Error message displayed when the user wants to download a project to the phone, but the phone is not connected.
phoneNotConnected=電話が接続されていません。
# Description: 
phoneCallComponentPallette=電話の呼び出し
# Description: 
permissionWriteExternalStorageOption=外部ストレージへの書き込み
# Description: 
permissionWifiStateOption=Wifi 状態
# Description: 
permissionVibrateOption=バイブレート
# Description: 
permissionUseCredentialsOption=クレデンシャルの使用
# Description: 
permissionReadMediaVideoOption=メディアビデオの読み込み
# Description: 
permissionReadMediaImagesOption=メディア画像の読み込み
# Description: 
permissionReadMediaAudioOption=メディア音声の読み込み
# Description: 
permissionReadExternalStorageOption=外部ストレージの読み込み
# Description: 
permissionReadContactsOption=お問い合わせ
# Description: 
permissionOptionList=許可
# Description: 
permissionNetworkStateOption=ネットワーク状態
# Description: 
permissionNearFieldCommunicationOption=近距離通信
# Description: The name of the parameter that is used to report the name of a needed permission.
permissionNameParams=許可名
# Description: 
permissionMockLocationOption=モック位置
# Description: 
permissionManageAccountsOption=アカウントの管理
# Description: 
permissionLocationExtraCommandsOption=ロケーションエクストラコマンド
# Description: 
permissionInternetOption=インターネット
# Description: 
permissionGetAccountsOption=アカウントを取得
# Description: 
permissionFineLocationOption=ファインロケーション
# Description: 
permissionCoarseLocationOption=コースロケーション
# Description: 
permissionCameraOption=カメラ
# Description: 
permissionBluetoothScanOption=Bluetoothスキャン
# Description: 
permissionBluetoothOption=Bluetooth
# Description: 
permissionBluetoothConnectOption=Bluetooth接続
# Description: 
permissionBluetoothAdvertiseOption=Bluetooth広告
# Description: 
permissionBluetoothAdminOption=Bluetooth管理者
# Description: 
permissionAudioOption=オーディオ
# Description: 
permissionAccountManagerOption=アカウント管理者
# Description: Summary for length in percent
# 0=percent
percentSummary={0}パーセント
# Description: Caption for percent label
percentCaption=パーセント
# Description: 
pedometerComponentPallette=歩数計
# Description: 
patternParams=パターン
# Description: 
pathParams=パス
# Description: 
passwordTextBoxComponentPallette=パスワードのテキストボックス
# Description: 
partialParams=パーシャル
# Description: Caption for palette box.
paletteBoxCaption=パレット
# Description: 
pageParams=ページ
# Description: Message shown during a building RPC (for Young Android, called 'packaging')
packagingRpcMessage=パッケージング ...
# Description: Text on "Overwrite" button
overwriteButton=上書き
# Description: Text for button shape choice 'oval'
ovalButtonShape=楕円
# Description: 
otherScreenNameParams=その他のスクリーン名
# Description: 
otherParams=その他
# Description: 
orientationSensorComponentPallette=オリエンテーションセンサー
# Description: Text for color choice 'Orange'
orangeColor=オレンジ
# Description: 
operationParams=操作
# Description: Label of the button for opening the blocks editor
openBlocksEditorButton=ブロックエディターを開く
# Description: Label next to the old name in a rename dialog
oldNameLabel=旧名：
# Description: Text on "OK" button.
okButton=OK
# Description: Caption for ODE log box.
odeLogBoxCaption=開発者からのメッセージ
# Description: 
nxtUltrasonicSensorComponentPallette=次の超音波センサー
# Description: 
nxtTouchSensorComponentPallette=次の接触センサー
# Description: 
nxtSoundSensorComponentPallette=次のサウンドセンサー
# Description: 
nxtSensorTypeTouchOption=接触
# Description: 
nxtSensorTypeSoundDBOption=サウンドDB
# Description: 
nxtSensorTypeSoundDBAOption=サウンドDBA
# Description: 
nxtSensorTypeRcxTemperatureOption=Rcx温度
# Description: 
nxtSensorTypeRcxLightOption=Rcxライト
# Description: 
nxtSensorTypeRcxAngleOption=Rcxアングル
# Description: 
nxtSensorTypeOptionList=次のセンサータイプ
# Description: 
nxtSensorTypeNoSensorOption=センサーなし
# Description: 
nxtSensorTypeLightOnOption=ライトオン
# Description: 
nxtSensorTypeLightOffOption=ライトオフ
# Description: 
nxtSensorTypeDigital12COption=デジタル12C
# Description: 
nxtSensorTypeDigital12C9VOption=デジタル12C9V
# Description: 
nxtSensorTypeColorRedOption=赤色
# Description: 
nxtSensorTypeColorNoneOption=色なし
# Description: 
nxtSensorTypeColorGreenOption=緑色
# Description: 
nxtSensorTypeColorBlueOption=青色
# Description: 
nxtSensorPortPort4Option=ポート４
# Description: 
nxtSensorPortPort3Option=ポート３
# Description: 
nxtSensorPortPort2Option=ポート２
# Description: 
nxtSensorPortPort1Option=ポート１
# Description: 
nxtSensorPortOptionList=次のセンサーポート
# Description: 
nxtSensorModeTransitionCountOption=移行回数
# Description: 
nxtSensorModeRcxFahrenheitOption=RCTファーレンハイト（華氏）
# Description: 
nxtSensorModeRcxCelsiusOption=RCXセルシウス（摂氏）
# Description: 
nxtSensorModeRcxAngleStepsOption=RCXアングルステップ
# Description: 
nxtSensorModePeriodCountOption=PeriodCount（ピリオドカウント）
# Description: 
nxtSensorModePercentageOption=パーセンテージ
# Description: 
nxtSensorModeOptionList=次のセンサーモード
# Description: 
nxtSensorModeBooleanOption=Boolean（ブーリアン）
# Description: 
nxtRunStateRampUpOption=ランプアップ
# Description: 
nxtRunStateRampDownOption=ランプダウン
# Description: 
nxtRunStateOptionList=次の実行ステート
# Description: 
nxtRunStateDisabledOption=無効
# Description: 
nxtRegulationModeSynchronizationOption=同期化
# Description: 
nxtRegulationModeSpeedOption=スピード
# Description: 
nxtRegulationModeOptionList=次の規制モード
# Description: 
nxtRegulationModeDisabledOption=無効
# Description: 
nxtMotorPortPortCOption=ポートC
# Description: 
nxtMotorPortPortBOption=ポートB
# Description: 
nxtMotorPortPortAOption=ポートA
# Description: 
nxtMotorPortOptionList=次のモーターポート
# Description: 
nxtMotorModeRegulatedOption=規制対象
# Description: 
thumbPositionParams=thumb位置
# Description: 
thresholdParams=閾値
# Description: 
thermometerComponentPallette=温度計
# Description: 
textingComponentPallette=テキスト入力
# Description: 
textToTranslateParams=テキストを翻訳
# Description: 
textToSpeechComponentPallette=テキスト読み上げ
# Description: Text Messages are not received at any time.
textReceivingChoiceOff=オフ
