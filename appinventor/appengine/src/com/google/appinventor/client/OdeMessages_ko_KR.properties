# Frontend definitions
# Generated from com.google.appinventor.client.OdeMessages
# for locale default
# Description: Message providing details about starting the wireless connection.
AICompanionMenuItem = AI 컴패니언

# Description:
AboutScreenProperties = 스크린설명

# Description:
AboutScreenPropertyDescriptions = 스크린에 대한 정보. 시스템메뉴에서 \"어플리케이션 정보\"를 선택하면 보여집니다. 사용자에게 앱에 대한 정보를 제공합니다. 각각의 스크린마다 고유한 스크린 설명을 가집니다.

# Description:
AboveRangeEventDescriptions = 거리값이 범위를 초과했습니다.

# Description:
AboveRangeEventEnabledProperties = 범위초과이벤트활성화여부

# Description:
AboveRangeEventEnabledPropertyDescriptions = 거리가 범위의 상한선보다 높을 때 범위초과 이벤트를 발생시킬 것인지 여부

# Description:
AboveRangeEvents = 범위를초과했을때

# Description:
AccelerationChangedEventDescriptions = X, Y, Z 축으로 가속도 값이 변화했는지를 나타낸다.

# Description:
AccelerationChangedEvents = 가속도가변화했을때

# Description:
AccelerometerSensorHelpStringComponentPallette = SI 단위 (m / s <sup> 2 </ sup>)를 사용하여 대략 3 차원에서 떨림을 감지하고 가속도를 측정 할 수있는 보이지 않는 콤포넌트입니다. 구성 요소는 다음과 같습니다. <ul> <li> <strong> xAccel </ strong> : 휴대 전화가 평평한 표면에있을 때 0, 휴대 전화가 오른쪽으로 기울어지면 (즉, 왼쪽이 위로 올 때) 값이 증가하고, 휴대 전화가 왼쪽으로 기울어지면 (즉, 오른쪽이 위로 올 때) 값이 감소합니다. </ li> <li> <strong> yAccel </ strong> : 평평한 곳에 휴대 전화가 놓여 있으면 0, 휴대전화의 아래부분이 올라가면 값이 증가하고, 휴대전화의 윗부분이 올라가면 값이 감소합니다.  </ li> <li> <strong> zAccel </ strong> : 휴대폰 화면이 위로 가도록 지면에 평평하게 놓았을 때 -9.8 입니다 ( 지구의 중력 가속도)  지면에 수직이면 0 입니다. 화면이 아래로 가도록 놓으면 +9.8 입니다. 이 값은 중력에 의해, 또는 가속에 의해 영향을받을 수도 있습니다. </ li> </ ul>

# Description:
AccentColorProperties = 강조색

# Description:
AccentColorPropertyDescriptions = 강조색은 강조하거나 다른 유저인터페이스의 강조색으로 사용될 수 있습니다.

# Description:
AcceptConnectionMethodDescriptions = 직렬 포트 프로필 (SPP)을 사용하여 들어오는 연결을 수락합니다.

# Description:
AcceptConnectionMethods = 접속승인하기

# Description:
AcceptConnectionWithUUIDMethodDescriptions = 특정 UUID로 들어오는 연결을 수락합니다.

# Description:
AcceptConnectionWithUUIDMethods = UUID로접속승인하기

# Description:
AccuracyProperties = 정확도

# Description:
# Description:
ActionBarProperties = 액션바

# Description:
# Description:
ActionProperties = 동작

# Description:
# Description:
ActivityCanceledEventDescriptions = 액티비티가 취소되어 액티비티스타터가 반환될 경우 발생하는 이벤트입니다.

# Description:
ActivityCanceledEvents = 액티비티가취소되었을때

# Description:
ActivityClassProperties = 액티비티클래스

# Description:
# Description:
ActivityPackageProperties = 액티비티패키지

# Description:
# Description:
ActivityStarterHelpStringComponentPallette = <code> StartActivity </ code> 메소드를 사용하여 활동을 시작할 수있는 구성 요소. <p> 시작할 수있는 활동은 다음과 같습니다 : <ul> <li> Android App Inventor를 다른 앱으로 시작합니다. 이렇게하려면 먼저 소스 코드를 다운로드하고 파일 탐색기 또는 unzip 유틸리티를 사용하여 \"youngandroidproject / project.properties\"라는 파일을 찾아 다른 응용 프로그램의 <em> 클래스 </ em>를 찾으십시오. 파일의 첫 번째 줄은 \"main =\"으로 시작하고 그 뒤에 클래스 이름이옵니다. 예 : <code> main = com.gmail.Bitdiddle.Ben.HelloPurr.Screen1 </ code>. 첫 번째 구성 요소는 Ben.Bitdiddle@gmail.com에 의해 생성되었음을 나타냅니다. <code> ActivityStarter </ code>가이 응용 프로그램을 시작하게하려면 다음 속성을 설정합니다. <ul> <li> <code> ActivityPackage < (예 : <code> com.gmail.Bitdiddle.Ben.HelloPurr </ code>) </ li> <li> <code> ActivityClass </ code>를 (를) 전체 클래스 이름 (예 : <code> com.gmail.Bitdiddle.Ben.HelloPurr.Screen1 </ code>) </ li> </ ul> </ li> <li> 다음 속성을 설정하여 카메라 응용 프로그램 시작 <code> ActivityPackage : com.android.camera </ code> <li> <li> <li> <li> <li> <li> <li> > <code> ActivityClass : com.android.camera.Camera </ code> </ li> </ ul> </ li> <li> 웹 검색 수행. 검색하려는 용어가 \"뱀파이어\"라고 가정하면 (자신의 선택을 자유롭게 대체 할 수 있음) 속성을 다음과 같이 설정하십시오. <ul> <code> <li> 액션 : android.intent.action.WEB_SEARCH </ li> < ExtraValue : vampire </ li> <li> ActivityPackage : com.google.android.providers.enhancedgooglesearch </ li> <li> ActivityClass : com.google.android.providers. enhancedgooglesearch.Launcher </ li> </ code> </ ul> </ li> <li> 브라우저를 특정 웹 페이지로여십시오. 당신이 가고자하는 페이지가 \"www.facebook.com\"이라고 가정하면 (자신의 선택을 자유롭게 대체 할 수 있음) 속성을 다음과 같이 설정하십시오 : <ul> <code> <li> Action : android.intent.action.VIEW < / li> <li> DataUri : http://www.facebook.com </ li> </ code> </ ul> </ li> </ ul> </ p>

# Description:
AddDaysMethodDescriptions = 인스턴트에 일을 추가한 인스턴트

# Description:
AddDaysMethods = 일추가

# Description:
AddDurationMethodDescriptions = 인스턴트에 기간을 추가한 인스턴트

# Description:
AddDurationMethods = 기간추가하기

# Description:
AddHoursMethodDescriptions = 인스턴트에 시를 추가한 인스턴트

# Description:
AddHoursMethods = 시추가하기

# Description:
AddMinutesMethodDescriptions = 인스턴트에 분을 추가한 인스턴트

# Description:
AddMinutesMethods = 분추가하기

# Description:
AddMonthsMethodDescriptions = 인스턴트에 월을 추가한 인스턴트

# Description:
AddMonthsMethods = 개월추가하기

# Description:
AddSecondsMethodDescriptions = 인스턴트에 초를 추가한 인스턴트

# Description:
AddSecondsMethods = 초추가하기

# Description:
AddWeeksMethodDescriptions = 인스턴트에 주를 추가한 인스턴트

# Description:
AddWeeksMethods = 주추가

# Description:
AddYearsMethodDescriptions = 인스턴트에 년을 추가한 인스턴트

# Description:
AddYearsMethods = 년추가하기

# Description:
AddressesAndNamesProperties = 주소와이름

# Description:
AddressesAndNamesPropertyDescriptions = 페어링 된 블루투스 장치의 주소 및 이름

# Description:
AfterActivityEventDescriptions = 이 액티비티 스타터가 반환 된 후에 발생하는 이벤트입니다.

# Description:
AfterActivityEvents = 액티비티후에

# Description:
AfterChoosingEventDescriptions = 사용자가 선택 팝업창에 대한 선택을 한 후에 이벤트입니다.

# Description:
AfterChoosingEvents = 선택한후에

# Description:
AfterDateSetEventDescriptions = 사용자가 대화 상자에서 날짜를 선택한 후에 실행되는 이벤트입니다.

# Description:
AfterDateSetEvents = 날짜선택후에

# Description:
AfterFileSavedEventDescriptions = 파일이 저장되었음을 나타내는 이벤트입니다.

# Description:
AfterFileSavedEvents = 파일저장후에

# Description:
AfterGettingTextEventDescriptions = 음성 녹음 액티비티가 반환 된 후에 발생하는 간단한 이벤트입니다.

# Description:
AfterGettingTextEvents = 텍스트가져온후에

# Description:
AfterPickingEventDescriptions = 선택 활동이 결과를 반환하고 속성값이 채워진 후에 발생하는 이벤트입니다.

# Description:
AfterPickingEvents = 선택후에

# Description:
AfterPictureEventDescriptions = 카메라로 사진을 찍었으며 사진의 저장된 경로를 제공함을 나타냅니다.

# Description:
AfterPictureEvents = 사진찍은후에

# Description:
AfterRecordingEventDescriptions = 비디오가 카메라로 녹화되었고 동영상의 저장 경로를 제공함을 나타냅니다.

# Description:
AfterRecordingEvents = 녹화후에

# Description:
AfterScanEventDescriptions = 스캐너가 (텍스트) 결과를 읽고 결과를 제공함을 나타냅니다.

# Description:
AfterScanEvents = 스캔후에

# Description:
AfterSelectingEventDescriptions = 사용자가 드롭다운 리스트에서 아이템을 선택한 후에 실행되는 이벤트입니다.

# Description:
AfterSelectingEvents = 선택후에

# Description:
AfterSoundRecordedEventDescriptions = 새롭게 생성 된 사운드의 위치를 ​​제공합니다.

# Description:
AfterSoundRecordedEvents = 녹음후에

# Description:
AfterSpeakingEventDescriptions = 메시지를 말한 후에 발생시킬 이벤트입니다.

# Description:
AfterSpeakingEvents = 말하기후에

# Description:
AfterTextInputEventDescriptions = 사용자가 텍스트 입력창에 입력 한 후에 발생하는 이벤트입니다.

# Description:
AfterTextInputEvents = 텍스트입력후에

# Description:
AfterTimeSetEventDescriptions = 사용자가 팝업 대화 상자에서 시간을 설정한 후 에 발생하는 이벤트입니다.

# Description:
AfterTimeSetEvents = 시간설정후에

# Description:
AlignHorizontalProperties = 수평정렬

# Description:
AlignHorizontalPropertyDescriptions = 내용이 가로로 정렬되는 방법입니다. 선택 항목은 1 = 왼쪽 맞춤, 2 = 오른쪽 정렬, 3 = 수평 가운데 맞춤입니다. 정렬의 너비가 자동이면 정렬은 아무 효과가 없습니다.

# Description:
AlignVerticalProperties = 수직정렬

# Description:
AlignVerticalPropertyDescriptions = 내용이 수직으로 정렬되는 방법입니다. 선택 사항은 다음과 같습니다. 1 = 상단, 2 = 가운데, 3 = 하단. 배열의 높이가 자동이면 정렬이 효과가 없습니다.

# Description:
AllowCookiesProperties = 쿠키허용

# Description:
AllowCookiesPropertyDescriptions = 응답의 쿠키를 저장하고 다음 요청에 사용할지 여부. 쿠키는 Android 버전 2.3 이상에서만 지원됩니다.

# Description:
AltitudeProperties = 고도

# Description:
# Description:
AnchorHorizontalProperties = 가로기준

# Description:
AnchorHorizontalPropertyDescriptions = 가로 정렬 속성은 마커의 앵커가 너비를 기준으로 배치될 것인지 제어합니다.

# Description:
AnchorVerticalProperties = 세로기준

# Description:
AnchorVerticalPropertyDescriptions = 세로 정렬 속성은 마커의 앵커가 높이를 기준으로 배치될 것인지 제어합니다.

# Description:
AngleProperties = 각도

# Description:
# Description:
AnimationProperties = 애니메이션

# Description:
AnimationPropertyDescriptions = 이것은 제한된 형태의 애니메이션으로 이미지에 적은 동작을 추가할 수 있습니다. 허용되는 동작은 ScrollRightSlow, ScrollRight, ScrollRightFast, ScrollLeftSlow, ScrollLeft, ScrollLeftFast 및 Stop입니다.

# Description:
ApiKeyProperties = API키

# Description:
ApiKeyPropertyDescriptions = 귀하의 Google API 키. 도움말을 보려면 팔레트의 퓨전테이블제어 구성 요소 옆에있는 물음표 (?)를 클릭하십시오.

# Description:
AppNameProperties = 앱이름

# Description:
AppNamePropertyDescriptions = 이것은 설치된 앱이 이름입니다. 만약 비어 있으면 빌드 될 때 프로젝트 이름으로 설정됩니다.

# Description:
AppearancePropertyCategory = 외모

# Description:
AppendToFileMethodDescriptions = 파일의 끝에 텍스트를 추가하며, 만약 파일이 없으면 만들어 냅니다. 파일 작성 위치에 대한 정보는 ''파일 저장하기'' 도움말 텍스트를 참조하십시오.

# Description:
AppendToFileMethods = 파일에덧붙이기

# Description:
AppendValueMethodDescriptions = 리스트의 끝에 값을 추가합니다. 만약 두 장치가 동시에 사용하더라도 값은 모두 추가되며,  데이터가 손실되지 않습니다.

# Description:
AppendValueMethods = 값추가하기

# Description:
AppendValueToListMethodDescriptions = 리스트의 끝에 값을 추가합니다. 만약 두 장치가 동시에 사용하더라도 값은 모두 추가되며,  데이터가 손실되지 않습니다.

# Description:
AppendValueToListMethods = 값추가하기

# Description:
AskForPermissionMethodDescriptions = 사용자에게 위험한 권한에 대한 액세스 권한 부여를 요청합니다.

# Description:
AskForPermissionMethods = 권한요청하기

# Description:
AuthorizeMethodDescriptions = 만약 사용자가 인증을 받지 못했다면,  OAuth 프로토콜을 사용하여 웹 브라우저를 통해 Twitter에 로그인하도록 사용자를 리디렉션합니다.

# Description:
AuthorizeMethods = 인증하기

# Description:
AvailableCountriesProperties = 이용가능국가

# Description:
AvailableCountriesPropertyDescriptions = 이 장치에서 음성변환에 사용할 수 있는 국가코드 목록입니다. 지원되는 언어는  Android 개발자 문서를 확인해 주세요.

# Description:
AvailableLanguagesProperties = 이용가능언어

# Description:
AvailableLanguagesPropertyDescriptions = 이 장치에서 음성변환에 사용할 수 있는 언어코드 목록입니다. 지원되는 언어는  Android 개발자 문서를 확인해 주세요.

# Description:
AvailableProperties = 사용가능

# Description:
AvailablePropertyDescriptions = 장치에 근접 센서가 있는지 여부를보고합니다.

# Description:
AvailableProvidersProperties = 사용가능한서비스제공자

# Description:
# Description:
AzimuthProperties = 방위각

# Description:
# Description:
BackPressedEventDescriptions = 뒤로가기 버튼이 눌렸을 때

# Description:
BackPressedEvents = 뒤로가기버튼을눌렀을때

# Description:
BackgroundColorProperties = 배경색

# Description:
BackgroundColorPropertyDescriptions = 컴퍼넌트의 백그라운드 칼라를 반환합니다.

# Description:
BackgroundImageProperties = 배경이미지

# Description:
BackgroundImagePropertyDescriptions = 화면 배경 이미지.

# Description:
BallHelpStringComponentPallette = <p> 터치 및 드래그에 반응하고 다른 스프라이트와 상호 작용할 수있는 <code> Canvas </ code>에 배치 할 수있는 원형 스프라이트 (<code> ImageSprite </ code> 및 기타 <code> Ball </ code>)과 캔버스의 가장자리를 이동하여 속성 값에 따라 이동합니다. </ p> <p> 예를 들어 <code> Ball </ code> 500 초 (1/2 초) 간격으로 <code> Canvas </ code>의 상단에 <code> Speed </ code> 속성을 4 [pixels]로 설정하고 <code> Interval </ code> 속성을 500 [milliseconds], <code> Heading </ code> 속성을 90도, <code> Enabled </ code> 속성을 <code> True </ code>로 설정하십시오. 이 속성과 다른 속성은 언제든지 변경할 수 있습니다. </ p> <p> Ball과 <code> ImageSprite </ code>의 차이점은 이미지 파일에서 모양을 얻을 수 있다는 것입니다. ''모양은 <code> PaintColor </ code> 및 <code> Radius </ code> 속성을 변경해야만 변경할 수 있습니다. </ p>

# Description:
BallotOptionsProperties = 투표설정

# Description:
BallotOptionsPropertyDescriptions = 투표 옵션 목록.

# Description:
BallotQuestionProperties = 투표질문

# Description:
BallotQuestionPropertyDescriptions = 투표 할 질문.

# Description:
BarcodeScannerHelpStringComponentPallette = 바코드 스캐너를 사용하여 바코드를 읽을 수 있는 컴포넌트입니다.

# Description:
BearingToFeatureMethodDescriptions = 마커에서 다른 지도 형상으로 방향을 반환합니다. 방향은 북쪽을 기준으로 합니다. 만약 중심점 매개 변수가 ''참''이면 경계가 지도 형상의 중심점에 위치합니다. 그렇지 않으면 방위는 마커에 가장 가까운 형상에서 계산됩니다.

# Description:
BearingToFeatureMethods = 다른형상방향계산하기

# Description:
BearingToPointMethodDescriptions = 마커에서 지정된 위도와 경도 좌표를 향하는 방향을 반환합니다. 방향은 북쪽을 기준으로 합니다.

# Description:
BearingToPointMethods = 좌표에대한방향계산하기

# Description:
BeforeGettingTextEventDescriptions = 음성인식이 호출되었지만 음석인식 활동이 시작되기 전에 발생시키는 간단한 이벤트입니다.

# Description:
BeforeGettingTextEvents = 텍스트가져오기전에

# Description:
BeforePickingEventDescriptions = 구성 요소의 버튼을 클릭하거나 열기 블록을 사용하여 목록을 표시 할 때 발생시키는 이벤트입니다. 이 이벤트는 항목 목록이 표시되기 전에 발생하며 표시되기 전에 목록을 준비하는 데 사용할 수 있습니다.

# Description:
BeforePickingEvents = 선택전에

# Description:
BeforeSpeakingEventDescriptions = 말하기가 호출되었으나, 실제 말하기 전에 발생시키는 이벤트입니다.

# Description:
BeforeSpeakingEvents = 말하기전에

# Description:
BehaviorPropertyCategory = 행동

# Description:
BelowRangeEventDescriptions = 거리가 범위를 벗어났습니다.

# Description:
BelowRangeEventEnabledProperties = 가능한이벤트범위내

# Description:
BelowRangeEventEnabledPropertyDescriptions = 거리가 범위 하한 아래로 떨어질 때 ''범위 아래'' 이벤트가 실행되어야하는지 여부.

# Description:
BelowRangeEvents = 범위내

# Description:
BluetoothClientHelpStringComponentPallette = 블루투스 클라이언트 컴포넌트입니다.

# Description:
BluetoothClientProperties = 블루투스클라이언트

# Description:
BluetoothClientPropertyDescriptions = 통신에 사용해야하는 블루투스 구성 요소.

# Description:
BluetoothServerHelpStringComponentPallette = 블루투스 서버 컴포넌트입니다.

# Description:
BottomOfRangeProperties = 범위이하

# Description:
BottomOfRangePropertyDescriptions = ''범위아래'', ''범위내'' 및 ''범위위'' 이벤트에 사용되는 범위의 하한 기준입니다.

# Description:
BounceMethodDescriptions = 이 스프라이트를 마치 벽에서 떨어진 것처럼 튀게합니다. 모서리 매개변수는 모서리에 닿음에서 반환되어야 합니다.

# Description:
BounceMethods = 튕기기

# Description:
BoundingBoxProperties = 지도경계

# Description:
BoundingBoxPropertyDescriptions = [[North, West], [South, East]]로 저장되는 맵의 경계 상자.

# Description:
BoundsChangeEventDescriptions = 사용자가 지도를 이동하거나 확대 / 축소하여지도 경계를 변경한 이벤트입니다.

# Description:
BoundsChangeEvents = 지도경계가변경되었을때

# Description:
BoundsMethodDescriptions = 사각 형태의 경계 박스를 ((North West) (South East)) 형식으로 리턴합니다.

# Description:
BoundsMethods = 지도경계가져오기

# Description:
BuildPostDataMethods = POST전송데이터만들기

# Description:
BuildRequestDataMethodDescriptions = 이름과 값 쌍을 나타내는 두 요소로 된 하위 목록을 텍스트 POSt 전송 형태로 전달하기에 적합한 application / x-www-form-urlencoded 미디어 유형으로 포맷 된 문자열로 변환합니다.

# Description:
BuildRequestDataMethods = 요청데이터만들기

# Description:
ButtonHelpStringComponentPallette = 버튼은 클릭을 하면 연결된 동작을 수행하는 컴포넌트입니다. 다양한 모양으로 변경할 수 있으며, 클릭을 가능하게 할지 (활성 여부)도 디자이너 또는 블록 에디터에서 변경할 수 있습니다.

# Description:
BytesAvailableToReceiveMethodDescriptions = 블록킹하지 않고 수신 할 수있는 바이트 수를 반환합니다.

# Description:
BytesAvailableToReceiveMethods = 받을수있는바이트크기가져오기

# Description:
CalibrateStrideLengthProperties = 걸음보폭보정하기

# Description:
# Description:
CalibrationFailedEventDescriptions = 보정이 실패했을 때 이벤트입니다.

# Description:
CalibrationFailedEvents = 보정이실패했을때

# Description:
CamcorderHelpStringComponentPallette = 캠코더를 사용하여 영상을 녹화하는 컴포넌트입니다. 영상이 녹화된 다음에는, 클립 파일 이름을 녹화 후 이벤트의 인자로 사용 가능합니다. 예를 들어, 파일 이름을 비디오 플레이어 컴포넌트의 소스 속성으로 지정할 수 있습니다.

# Description:
CameraHelpStringComponentPallette = 카메라를 사용하여 사진을 찍는 컴포넌트입니다. 사진을 찍은 다음에는, 사진 파일 이름을 사진 찍은 후 이벤트의 인자로 사용 가능합니다. 예를 들어, 파일 이름을 이미지 컴포넌트의 사진 속성에 지정할 수 있습니다.

# Description:
CanGoBackMethodDescriptions = 웹뷰어가 히스토리 목록으로 되돌아갈 수있는 경우 참을 반환합니다.

# Description:
CanGoBackMethods = 뒤로가기가능여부가져오기

# Description:
CanGoForwardMethodDescriptions = 웹뷰어가 히스토리 목록에서 앞으로 갈 수 있으면 참을 반환합니다.

# Description:
CanGoForwardMethods = 앞으로가기가능여부가져오기

# Description:
CanvasHelpStringComponentPallette = </ p> <code> BackgroundColor </ code>, <code> PaintColor </ code>는 <code> 캔버스의 <code> BackgroundImage </ code>, <code> Width </ code> 및 <code> Height </ code>는 디자이너 또는 블록 편집기에서 설정할 수 있습니다. <code> 너비 </ code> 및 <code> 높이 </ code>는 픽셀 단위로 측정되며 양수 여야합니다. </ p> <p> 캔버스의 모든 위치는 (X, Y ) 값을 반환합니다. <ul> <li> X는 캔버스의 왼쪽 가장자리에서 떨어진 픽셀 수입니다. <li> Y는 캔버스의 위쪽 가장자리에서 떨어진 픽셀 수입니다. </ li> </ code> 또는 <code> Sprite </ code> (<code> ImageSprite </ code> 또는 <code> Ball </ code> 코드>)가 드래그되었습니다. 점, 선 및 원을 그리는 방법도 있습니다. </ p>

# Description:
CenterFromStringProperties = 중심좌표

# Description:
CenterFromStringPropertyDescriptions = <p>지도의 초기 중심 좌표를 설정합니다. 이 값은 쉼표로 구분 된 십진 위도 및 경도 좌표 쌍으로 지정됩니다 (예 : <code> 42.359144, -71.093612 </ code>). </ p> <p> 블록 코드에서는 성능상의 이유로 이 속성에 사용할 문자열 표현으로 변환하지 말고 숫자 위도 및 경도로 SetCenter를 사용하십시오. </ p>

# Description:
CenterMethodDescriptions = 사각형의 중심을 양식 목록 (위도 경도)으로 반환합니다.

# Description:
CenterMethods = 사각형중심위치가져오기

# Description:
CentroidMethodDescriptions = 다각형의 중심을 (위도, 경도) 쌍으로 반환합니다.

# Description:
CentroidMethods = 다각형중심위치가져오기

# Description:
ChangedEventDescriptions = 기본 변경 이벤트 핸들러.

# Description:
ChangedEvents = 변경되었을때

# Description:
CharacterEncodingProperties = 문자인코딩

# Description:
# Description:
CheckAuthorizedMethodDescriptions = 사용자가 이미 액세스 권한이 있는지 확인하고, ''인증되었을 때'' 이벤트가 호출되도록 합니다.

# Description:
CheckAuthorizedMethods = 인증확인하기

# Description:
CheckBoxHelpStringComponentPallette = 체크 상자는 사용자 클릭에 따라 선택되거나 해제됩니다. 디자이너 또는 블록 에디터에서 모양을 다양하게 변경할 수 있습니다.

# Description:
CheckedProperties = 체크여부

# Description:
# Description:
ChoosingCanceledEventDescriptions = 사용자가 선택대화창을 취소 할 때 발생하는 이벤트입니다.

# Description:
ChoosingCanceledEvents = 선택을취소했을때

# Description:
CircleHelpStringComponentPallette = 원형

# Description:
ClearAllMethodDescriptions = 전체 데이터 저장소 지우기

# Description:
ClearAllMethods = 모두지우기

# Description:
ClearCachesMethodDescriptions = 웹뷰 캐시를 지웁니다.

# Description:
ClearCachesMethods = 캐시지우기

# Description:
ClearCookiesMethodDescriptions = 이 웹 컴포넌트의 모든 쿠키를 지 웁니다.

# Description:
ClearCookiesMethods = 쿠키데이터지우기

# Description:
ClearLocationsMethodDescriptions = 저장된 위치 권한을 지웁니다.

# Description:
ClearLocationsMethods = 위치정보지우기

# Description:
ClearMethodDescriptions = 배경색이나 이미지가 아닌 이 캔버스에서 그린 모든 것을 지웁니다.

# Description:
ClearMethods = 지우기

# Description:
ClearTagMethodDescriptions = 주어진 태그를 이용하여 항목을 지웁니다.

# Description:
ClearTagMethods = 태그지우기

# Description:
ClickEventDescriptions = 사용자가 기능을 클릭했습니다.

# Description:
ClickEvents = 클릭했을때

# Description:
ClockHelpStringComponentPallette = <p> 휴대 전화의 내부 시계를 사용하여 시간을 즉시 제공하는 보이지 않는 구성 요소. 정기적으로 설정된 간격으로 타이머를 작동시키고 시간 계산, 조작 및 변환을 수행 할 수 있습니다. </ p> <p> 인스턴트를 텍스트로 변환하는 방법도 사용할 수 있습니다. 사용할 수있는 패턴은 빈 문자열, MM / DD / YYYY HH : mm : ss a 또는 MMM d, yyyyHH : mm입니다. 빈 문자열은 FormatDateTime \"MMM d, yyyy\"에 대해 \"MMM d, yyyy HH : mm : ss a\"라는 기본 형식을 제공합니다. 가능한 모든 형식을 보려면 <a href=\"https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html\" _target=\"_blank\"> 여기 </a>를 참조하십시오. . </ p>

# Description:
CloseScreenAnimationMethods = 스크린닫기애니메이션

# Description:
CloseScreenAnimationProperties = 스크린닫기애니메이션

# Description:
CloseScreenAnimationPropertyDescriptions = 현재 스크린을 닫고 이전 스크린으로 돌아 가기 위한 애니메이션입니다. 유효한 옵션은 default, fade, zoom, slidehorizontal, slidevertical 및 none입니다.

# Description:
CloudConnectedMethodDescriptions = 네트워크에 연결되어 있고 클라우드DB 서버에 연결할 수 있으면 참을 반환합니다.

# Description:
CloudConnectedMethods = 클라우드연결여부가져오기

# Description:
CloudDBErrorEventDescriptions = 클라우드DB 레디스 서버와 통신하는 동안 오류가 발생했음을 나타냅니다.

# Description:
CloudDBErrorEvents = 클라우드DB에오류가발생했을때

# Description:
CloudDBHelpStringComponentPallette = 보이지 않는 컴포넌트입니다. 인터넷에 연결된 데이터베이스 서버에 데이터를 저장할 수 있습니다 (레디스 소프트웨어 사용). 이렇게하면 앱 사용자가 서로 데이터를 공유 할 수 있습니다. 기본적으로 데이터는 MIT가 관리하는 서버에 저장되지만 사용자가 직접 서버를 설정하고 실행할 수 있습니다. 자신의 서버에 액세스하려면 \"레디스 서버\"속성과 \"레디스 포트\"속성을 설정하십시오.

# Description:
CollidedWithEventDescriptions = 충돌했을때 이벤트 처리기. 두 개의 스프라이트가 충돌 할 때 호출됩니다. 회전 된 이미지 스프라이트와의 충돌은 회전하지 않은 상태의 위치를 기준으로 합니다. 따라서 회전한 스프라이트에 대한 충돌 이벤트는 부정확합니다.

# Description:
CollidedWithEvents = 충돌했을때

# Description:
CollidingWithMethodDescriptions = 이 스프라이트와 다른 스프라이트 사이에 충돌이 있는지 여부를 나타냅니다.

# Description:
CollidingWithMethods = 충돌여부가져오기

# Description:
ColorChangedEventDescriptions = 색상이 변경된 것을 감지합니다. ''감지 색상'' 속성을 거짓로 설정하거나 ''색상 변경 감지'' 속성을 거짓로 설정하면 이벤트가 발생하지 않습니다.

# Description:
ColorChangedEventEnabledProperties = 색상변경이벤트활성화됨

# Description:
ColorChangedEventEnabledPropertyDescriptions = ''색상 감지'' 속성이 참으로 설정되고 감지 된 색이 변경 될 때 ''색상 변경 감지'' 이벤트가 발생해야하는지 여부.

# Description:
ColorChangedEvents = 색상이변경되었을때

# Description:
ColorLeftProperties = 왼쪽색상

# Description:
ColorLeftPropertyDescriptions = 섬의 왼쪽에있는 슬라이더의 색입니다.

# Description:
ColorRightProperties = 오른쪽색상

# Description:
ColorRightPropertyDescriptions = 섬의 왼쪽에있는 슬라이더의 색입니다.

# Description:
ColumnsProperties = 열

# Description:
# Description:
CompletedEventDescriptions = 동영상이 끝났음을 나타냅니다.

# Description:
CompletedEvents = 재생을완료했을때

# Description:
ConnectMethodDescriptions = 지정된 주소와 직렬 포트 프로파일 (SPP)을 사용하여 블루투스 장치에 연결합니다. 접속이 성공하면 참을 반환합니다.

# Description:
ConnectMethods = 연결

# Description:
ConnectWithUUIDMethodDescriptions = 지정된 주소 및 UUID로 블루투스 장치에 연결합니다. 접속이 성공하면 참을 반환합니다.

# Description:
ConnectWithUUIDMethods = UUID로연결하기

# Description:
ConnectionAcceptedEventDescriptions = 블루투스 연결이 수락되었음을 나타냅니다.

# Description:
ConnectionAcceptedEvents = 연결되었을때

# Description:
ConsumerKeyProperties = 컨슈머키

# Description:
ConsumerKeyPropertyDescriptions = OAuth를 통해 트위터로 인증 할 때 사용되는 컨슈머 키.

# Description:
ConsumerSecretProperties = 컨슈머시크릿

# Description:
ConsumerSecretPropertyDescriptions = OAuth를 통해 Twitter에서 승인 할 때 사용할 컨슈머 시크릿

# Description:
ContactNameProperties = 연락처이름

# Description:
# Description:
ContactPickerHelpStringComponentPallette = 클릭하면 클릭 할 연락처 목록이 표시됩니다. 사용자가 선택한 후에는 다음 속성이 선택한 연락처에 대한 정보로 설정됩니다. <ul> <li> <code> ContactName </ code> : 연락처의 이름 </ li> <li> code> EmailAddress </ code> : 연락처의 기본 이메일 주소 </ li> <li> <code> ContactUri </ code> : 기기의 연락처의 URI </ li> <li> <code > EmailAddressList </ code> : 연락처의 이메일 주소 목록 </ li> <li> <code> 전화번호 </ code> : 연락처의 기본 전화 번호 (나중에 Android Verisons에서) </ li> > <code> 전화 번호 목록 </ code> : 연락처의 전화 번호 목록 (최신 Android 버전) </ li> <li> <code> 그림 </ code> : 파일 이름 <code> Image </ code> 또는 <code> ImageSprite </ code> 구성 요소의 <code> Picture </ code> 속성 값으로 사용할 수있는 연락처 이미지를 포함합니다. 다른 속성은 버튼의 모양 (<code> TextAlignment </ code>, <code> BackgroundColor </ code> 등) 및 클릭 할 수 있는지 여부 (<code> > 사용함 </ co de>). </ p> <p> 모든 전화기에서 ContactPicker 구성 요소가 작동하지 않을 수 있습니다. 예를 들어 시스템 3.0 이전의 Android 시스템에서는 전화 번호를 선택할 수 없으며 전자 메일 주소 목록에는 하나의 전자 메일 만 포함됩니다.

# Description:
ContactUriProperties = 연락처URI

# Description:
ContactUriPropertyDescriptions = 장치의 연락처 위치를 지정하는 URI입니다.

# Description:
CountryProperties = 국가

# Description:
CountryPropertyDescriptions = 음성 생성에 사용할 국가 코드입니다. 이것은 발음에 영향을 줄 수 있습니다. 예를 들어 영국 영어 (GBR)는 미국 영어 (USA)와는 다른 발음을합니다. 모든 국가 코드가 모든 언어에 적용되는 것은 아닙니다.

# Description:
CreateMarkerMethodDescriptions = 지정된 위도와 경도에 기본 속성이있는 새 마커를 만듭니다.

# Description:
CreateMarkerMethods = 마커만들기

# Description:
CurrentAddressProperties = 현재주소

# Description:
# Description:
CurrentPageTitleProperties = 현재페이지제목

# Description:
CurrentPageTitlePropertyDescriptions = 현재 열람중인 페이지의 제목

# Description:
CurrentUrlProperties = 현재URL

# Description:
CurrentUrlPropertyDescriptions = 현재보고있는 페이지의 URL입니다. 링크를 통해 새 페이지를 방문한 경우 홈 URL과 다를 수 있습니다.

# Description:
DataChangedEventDescriptions = 파이어베이스의 데이터가 변경되었음을 나타냅니다. 수정된 태그 및 값을 사용하여 이벤트를 시작합니다.

# Description:
DataChangedEvents = DataChanged

# Description:
DataTypeProperties = 데이터타입

# Description:
# Description:
DataUriProperties = 데이터URI

# Description:
# Description:
DatePickerHelpStringComponentPallette = <p> 클릭하면 사용자가 날짜를 선택할 수있는 팝업 대화 상자가 실행됩니다. </ p>

# Description:
DayOfMonthMethodDescriptions = 월의 일자

# Description:
DayOfMonthMethods = 일가져오기

# Description:
DayProperties = 일

# Description:
DayPropertyDescriptions = ''날짜선택''을 사용하여 마지막으로 선택한 달의 날짜.

# Description:
DeAuthorizeMethodDescriptions = 이 앱의 인스턴스에서 Twitter 인증을 제거합니다.

# Description:
DeAuthorizeMethods = 인증취소하기

# Description:
DefaultRedisServerProperties = 기본레디스서버

# Description:
DefaultRedisServerPropertyDescriptions = 사용할 기본 레디스 서버.

# Description:
DefaultURLProperties = 기본URL

# Description:
# Description:
DeleteFileMethodDescriptions = 로봇에서 파일을 삭제합니다.

# Description:
DeleteFileMethods = 파일삭제하기

# Description:
DeleteMethodDescriptions = Url 속성을 사용하여 HTTP DELETE 요청을 수행하고 응답을 검색합니다. <br> SaveResponse 속성이 참이면 응답이 파일에 저장되고 GotFile 이벤트가 트리거됩니다. ResponseFileName 속성을 사용하여 파일 이름을 지정할 수 있습니다. <br> SaveResponse 속성이 거짓이면 GotText 이벤트가 트리거됩니다.

# Description:
DeleteMethods = 삭제하기

# Description:
DelimiterByteProperties = 구분바이트

# Description:
# Description:
DescriptionProperties = 설명

# Description:
DescriptionPropertyDescriptions = 사용자가 지도 형상을 클릭 했을 때 표시되는 정보 창 설명입니다.

# Description:
DetectColorProperties = 색상감지

# Description:
DetectColorPropertyDescriptions = 센서가 색상이나 빛을 감지해야하는지 여부. 참은 센서가 색상을 감지해야 함을 나타냅니다. 거짓는 센서가 빛을 감지해야 함을 나타냅니다. DetectColor 속성을 참으로 설정하면 BelowRange, WithinRange 및 AboveRange 이벤트가 발생하지 않고 센서에서 색상이 생성되지 않습니다. DetectColor 속성을 거짓로 설정하면 ColorChanged 이벤트가 발생하지 않습니다.

# Description:
DeveloperBucketProperties = 개발자버킷

# Description:
# Description:
DirectMessageMethodDescriptions = 이렇게하면 지정된 사용자에게 직접 (개인) 메시지가 전송됩니다. 메시지가 160자를 초과하면 자릅니다. <p> <u> 요구 사항 </ u> : 사용자가 트위터에 성공적으로 로그인했음을 나타내는 <code> IsAuthorized </ code> 이벤트가 발생한 후에 만 호출해야합니다. </ p>

# Description:
DirectMessageMethods = 쪽지

# Description:
DirectMessagesProperties = 쪽지리스트

# Description:
DirectMessagesPropertyDescriptions = 이 속성에는 로그인 한 사용자를 언급하는 가장 최근 메시지 목록이 포함됩니다. 처음에는 목록이 비어 있습니다. 이를 설정하려면 프로그램에서 <ol> <li> <code> Authorize </ code> 메서드를 호출해야합니다. </ li> <li> <code> Authorized </ code> <li> <code> DirectMessagesReceived </ code> 이벤트를 기다립니다. </ li> <li> <li> 검색된 직접 메시지 목록으로 설정하고 (<code> RequestDirectMessages </ code>에 대한 이후 호출이있을 때까지 해당 값을 유지 관리해야합니다).

# Description:
DirectMessagesReceivedEventDescriptions = 이 이벤트는 <code> RequestDirectMessages </ code>를 통해 요청 된 최근 메시지가 검색 될 때 발생합니다. 메시지 목록은 <code> messages </ code> 매개 변수 또는 <code> Messages </ code> 속성에서 찾을 수 있습니다.

# Description:
DirectMessagesReceivedEvents = 쪽지를받았을때

# Description:
DisconnectMethodDescriptions = 연결된 블루투스 장치에서 연결을 끊습니다.

# Description:
DisconnectMethods = 연결끊기

# Description:
DismissProgressDialogMethodDescriptions = 이전에 표시된 진행 대화창 닫기

# Description:
DismissProgressDialogMethods = 진행대화창종료

# Description:
DisplayDropdownMethodDescriptions = 선택을위한 드롭 다운 목록을 표시합니다. 사용자가 스피너를 클릭 할 때와 동일한 동작입니다.

# Description:
DisplayDropdownMethods = 드롭다운표시하기

# Description:
DistanceIntervalProperties = 거리간격

# Description:
DistanceIntervalPropertyDescriptions = 센서가 위치정보 업데이트를 보내는 데 사용하는, 최소 거리 간격 (미터)을 결정합니다. 예를 들어,이 값을 5로 설정하면 센서는 5m가 지나간 후에만 ''위치 변경'' 이벤트를 발생시킵니다. 그러나 센서는 정확히 거리 간격으로 업데이트가 수신되도록 보장하지 않습니다. 예를 들어, 이벤트를 시작하는 데 5 미터 이상 걸릴 수 있습니다.

# Description:
DistanceProperties = 거리

# Description:
DistancePropertyDescriptions = 물체에서 장치까지의 거리를 반환합니다.

# Description:
DistanceToFeatureMethodDescriptions = 두 개의 지도 형상 사이의 거리 (미터)를 계산합니다.

# Description:
DistanceToFeatureMethods = 형상까지거리계산하기

# Description:
DistanceToPointMethodDescriptions = 지도 형상과 위도, 경도 지점 사이의 거리 (미터)를 계산합니다.

# Description:
DistanceToPointMethods = 좌표까지거리계산하기

# Description:
DoQueryMethodDescriptions = 사용을 권장하지 않습니다. 이 블록은 2012 년 말 현재 사용되지 않습니다. ''쿼리보내기''를 사용하십시오.

# Description:
DoQueryMethods = 쿼리하기

# Description:
DoScanMethodDescriptions = 카메라를 사용하여 바코드 스캔을 시작합니다. 검사가 완료되면 ''스캔 후에'' 이벤트가 발생합니다.

# Description:
DoScanMethods = 스캔하기

# Description:
DoubleTapAtPointEventDescriptions = 사용자가 지도의 한 지점에서 두 번 탭했습니다. 확대 / 축소 제스처가 활성화되어 있고지도가 최대 줌 레벨에 있지 않으면, 이 이벤트 다음에 ''줌을 변경했을 때'' 이벤트가 옵니다.

# Description:
DoubleTapAtPointEvents = 더블탭했을때

# Description:
DownloadFileMethodDescriptions = 로봇에 파일을 다운로드합니다.

# Description:
DownloadFileMethods = 파일다운로드

# Description:
DragEventDescriptions = 사용자가 지도 형상을 드래그했습니다.

# Description:
DragEvents = 드래그했을때

# Description:
DraggableProperties = 드래그가능

# Description:
DraggablePropertyDescriptions = ''드래그가능 여부'' 속성은 마커를 길게 누른 다음 마커를 새 위치로 드래그하여 마커를 이동할 수 있는지 여부를 설정하는 데 사용됩니다.

# Description:
DraggedEventDescriptions = 드래그 이벤트에 대한 핸들러입니다. 모든 호출에서 시작 좌표는 화면이 처음 터치 된 위치이며 \"현재\" 좌표는 현재 선 세그먼트의 끝점을 나타냅니다. 주어진 끌기 내의 첫 번째 호출에서 \"이전\" 좌표는 시작 좌표와 동일합니다. 이후 그들은 이전 호출의 \"현재\"좌표입니다. \"이동하기\"가 구체적으로 호출되지 않는 한 스프라이트는 ''드래그했을 때'' 이벤트만으론 실제로 움직이지 않습니다.

# Description:
DraggedEvents = 드래그

# Description:
DrawArcMethodDescriptions = 지정된 타원 (왼쪽, 위쪽, 오른쪽 및 아래쪽으로 지정됨)에서 호를 그려서 Canvas에 호를 그립니다. 시작 각도는 오른쪽으로 향하면 0이고 시계 방향으로 돌리면 증가합니다. useCenter가 참이면 호가 아닌 부채꼴이 그려집니다. 채우기가 참일 때 외곽선 대신 채워진 호 (또는 부채꼴)가 그려집니다.

# Description:
DrawArcMethods = 원호그리기

# Description:
DrawCircleMethodDescriptions = 화면에 원을 그립니다.

# Description:
DrawCircleMethods = 원그리기

# Description:
DrawIconMethodDescriptions = 화면에 내장 아이콘을 그립니다.

# Description:
DrawIconMethods = 아이콘그리기

# Description:
DrawLineMethodDescriptions = 화면에 선을 그립니다.

# Description:
DrawLineMethods = 선그리기

# Description:
DrawPointMethodDescriptions = 화면에 점을 그립니다.

# Description:
DrawPointMethods = 점그리기

# Description:
DrawRectMethodDescriptions = 화면에 직사각형을 그립니다.

# Description:
DrawRectMethods = 사각형그리기

# Description:
DrawShapeMethodDescriptions = 캔바스에 도형을 그립니다. pointList는 좌표를 나타내는 두 개의 숫자가있는 하위 목록을 포함하는 목록이어야합니다. 첫 번째 지점과 마지막 지점은 동일 할 필요는 없습니다. 예 : ((x1 y1) (x2 y2) (x3 y3)) 채우기가 참이면 모양이 채워집니다.

# Description:
DrawShapeMethods = 도형그리기

# Description:
DrawTextAtAngleMethodDescriptions = 지정된 좌표에서 시작하는 텍스트를 그립니다. ''폰트 크기'' 및 ''텍스트 정렬'' 속성 값을 사용합니다.

# Description:
DrawTextAtAngleMethods = 기울어진텍스트그리기

# Description:
DrawTextMethodDescriptions = 지정된 좌표와 연관된 텍스트를 그립니다. ''폰트 크기'' 및 ''텍스트 정렬'' 속성 값을 사용합니다.

# Description:
DrawTextMethods = 글자쓰기

# Description:
DriveMotorsProperties = 드라이브모터

# Description:
DriveMotorsPropertyDescriptions = 운전에 사용되는 모터 포트 : 왼쪽 휠의 모터 포트와 오른쪽 휠의 모터 포트.

# Description:
DurationMethodDescriptions = 순간 사이의 경과 시간 (천분의 일초)

# Description:
DurationMethods = 기간가져오기

# Description:
DurationToDaysMethodDescriptions = 기간을 일로 변환

# Description:
DurationToDaysMethods = 기간을일로바꾸기

# Description:
DurationToHoursMethodDescriptions = 기간을 시로 바꾸기

# Description:
DurationToHoursMethods = 기간을시로바꾸기

# Description:
DurationToMinutesMethodDescriptions = 기간을 분으로 변환

# Description:
DurationToMinutesMethods = 기간을분으로바꾸기

# Description:
DurationToSecondsMethodDescriptions = 기간을 초로 변환

# Description:
DurationToSecondsMethods = 기간을초로바꾸기

# Description:
DurationToWeeksMethodDescriptions = 기간을 주로 변환

# Description:
DurationToWeeksMethods = 기간을주로바꾸기

# Description:
EastLongitudeProperties = 동경

# Description:
# Description:
EdgeReachedEventDescriptions = 스프라이트가 화면 가장자리에 도달하면 호출되는 이벤트 핸들러입니다. 그 가장자리로 ''튕기기''가 호출되면 스프라이트는 도달 한 가장자리에서 튀어 나오는 것처럼 보입니다. 모서리는 북쪽 (1), 북동쪽 (2), 동쪽 (3), 남동쪽 (4), 남쪽 (-1), 남서쪽 (-2), 서쪽 (-3),북서쪽 (-4) 의 8 가지 방향 중 하나를 나타내는 정수로 표시됩니다. ,

# Description:
EdgeReachedEvents = 모서리에닿았을때

# Description:
ElapsedTimeProperties = 경과시간

# Description:
ElapsedTimePropertyDescriptions = 만보계가 시작된 후 경과 된 시간 (천분의 일초).

# Description:
ElementsFromStringProperties = 요소문자열

# Description:
ElementsFromStringPropertyDescriptions = 쉼표로 구분 된 문자열로 스피너의 목록을 설정합니다.

# Description:
ElementsProperties = 요소

# Description:
ElementsPropertyDescriptions = 선택할 텍스트 요소의 목록을 반환합니다.

# Description:
EmailAddressListProperties = 이메일주소리스트

# Description:
# Description:
EmailAddressProperties = 이메일주소

# Description:
# Description:
EmailPickerHelpStringComponentPallette = EmailPicker는 텍스트 상자의 일종입니다. 사용자가 연락처의 이름이나 전자 메일 주소를 입력하기 시작하면 전화기는 항목을 완료하는 선택 항목의 드롭 다운 메뉴를 표시합니다. 많은 연락처가있는 경우 드롭 다운이 표시되는 데 몇 초가 걸릴 수 있으며 일치 항목이 계산되는 동안 중간 결과를 표시 할 수 있습니다. <p> 텍스트 상자의 초기 내용과 <after user 입력 내용은 <code> Text </ code> 속성에 있습니다. <code> Text </ code> 속성이 처음에 비어있는 경우 <code> Hint </ code> 속성의 내용이 텍스트 힌트로 희미하게 표시됩니다. </ p> <p> 다른 속성은 텍스트 상자 (<code> TextAlignment </ code>, <code> BackgroundColor </ code> 등)의 모양과 사용 가능 여부 (<code> 사용 </ code>)에 영향을줍니다. p> <p> 이와 같은 텍스트 상자는 일반적으로 <code> Button </ code> 구성 요소와 함께 사용되며 텍스트 입력이 완료되면 사용자가 버튼을 클릭합니다.

# Description:
EnableInfoboxProperties = 정보창여부

# Description:
EnableInfoboxPropertyDescriptions = 사용자가 형상을 탭했을 때 정보창을 표시할 것인 설정합니다.

# Description:
EnablePanProperties = 팬활성화여부

# Description:
EnablePanPropertyDescriptions = 지도의 두 손가락 이동 사용

# Description:
EnableRotationProperties = 회전가능여부

# Description:
EnableRotationPropertyDescriptions = 참으로 설정하면 사용자는 멀티 터치 제스처를 사용하여 현재 중심에서지도를 회전 할 수 있습니다.

# Description:
EnableSpeedRegulationProperties = 속도통제가능여부

# Description:
EnableSpeedRegulationPropertyDescriptions = 속도 조절이 활성화되면 로봇은 속도를 유지하기 위해 배터리를 조정합니다.

# Description:
EnableZoomProperties = 줌가능여부

# Description:
EnableZoomPropertyDescriptions = 이 속성을 참으로 설정하면지도에 멀티 터치 확대 / 축소 제스처가 허용됩니다. 그렇지 않으면 줌 컨트롤 버튼을 사용하는 경우를 제외하고 사용자가 지도 줌을 변경할 수 없습니다.

# Description:
EnabledProperties = 활성화

# Description:
EnabledPropertyDescriptions = 설정된 경우 사용자가 확인란을 눌러 작업을 수행 할 수 있습니다.

# Description:
ErrorOccurredEventDescriptions = 오류가 발생할 때 발생하는 이벤트입니다. 일부 오류 만이 조건을 발생시킵니다. 이러한 오류의 경우 시스템은 기본적으로 알림을 표시합니다. 이 이벤트 핸들러를 사용하여 기본값과 다른 오류 동작을 처리할 수 있습니다.

# Description:
ErrorOccurredEvents = 오류가발생했을때

# Description:
Ev3ColorSensorHelpStringComponentPallette = LEGO MINDSTORMS EV3 로봇의 컬러 센서에 고급 인터페이스를 제공하는 구성 요소입니다.

# Description:
Ev3CommandsHelpStringComponentPallette = LEGO MINDSTORMS EV3 로봇에 저수준 인터페이스를 제공하고 EV3 로봇에 시스템 또는 직접 명령을 보내는 기능이있는 구성 요소.

# Description:
Ev3GyroSensorHelpStringComponentPallette = LEGO MINDSTORMS EV3 로봇의 자이로 센서에 대한 고급 인터페이스를 제공하는 구성 요소입니다.

# Description:
Ev3MotorsHelpStringComponentPallette = 모터를 제어 할 수있는 기능을 갖춘 LEGO MINDSTORMS EV3 로봇에 고수준 및 저수준 인터페이스를 모두 제공하는 구성 요소.

# Description:
Ev3SoundHelpStringComponentPallette = LEGO MINDSTORMS EV3 로봇의 사운드 기능에 대한 고급 인터페이스를 제공하는 구성 요소입니다.

# Description:
Ev3TouchSensorHelpStringComponentPallette = LEGO MINDSTORMS EV3 로봇의 터치 센서에 고급 인터페이스를 제공하는 구성 요소입니다.

# Description:
Ev3UIHelpStringComponentPallette = EV3 화면에 그래프를 그릴 수있는 기능이있는 LEGO MINDSTORMS EV3 로봇에 고급 인터페이스를 제공하는 구성 요소입니다.

# Description:
Ev3UltrasonicSensorHelpStringComponentPallette = LEGO MINDSTORMS EV3 로봇의 초음파 센서에 대한 고급 인터페이스를 제공하는 구성 요소입니다.

# Description:
ExtraKeyProperties = 추가키

# Description:
ExtraKeyPropertyDescriptions = activity.DEPRECATED에 전달 될 추가 키를 반환합니다. 새 코드는 ''부가 데이터'' 속성을 대신 사용해야합니다.

# Description:
ExtraValueProperties = 추가값

# Description:
ExtraValuePropertyDescriptions = activity.DEPRECATED에 전달할 추가 값을 반환합니다. 새 코드에서는 ''부가 데이터'' 속성을 대신 사용해야합니다.

# Description:
ExtrasProperties = 부가데이터

# Description:
# Description:
FeatureClickEventDescriptions = 사용자가 지도 형상을 클릭했습니다.

# Description:
FeatureClickEvents = 형상을클릭했을때

# Description:
FeatureCollectionHelpStringComponentPallette = 형상모음은 하나 이상의 지도 형상이 그룹으로 포함됩니다. 컬렉션의 기능에서 실행 된 모든 이벤트는 컬렉션 객체에서 해당 이벤트를 발생시킵니다. 형상 모음은 외부 자원으로부터 맵을 컨텐츠로 채우는 수단으로로드 될 수 있습니다.

# Description:
FeatureDragEventDescriptions = 사용자가 지도 형상을 드래그했습니다.

# Description:
FeatureDragEvents = 형상을드래그했을때

# Description:
FeatureFromDescriptionMethodDescriptions = 설명을 지도 형상으로 변환합니다.  현재 지원되는 유일한 변환은 GeoJSON 포인트에서 마커 구성 요소로의 변환입니다. 형상에 속성이 있으면 다음 매핑을 사용하여 앱인벤터 속성에 매핑됩니다. description becomes Description; draggable becomes Draggable; infobox becomes EnableInfobox; fill becomes FillColor; image becomes ImageAsset; stroke becomes StrokeColor; stroke-width becomes StrokeWidth; title becomes Title; visible becomes Visible

# Description:
FeatureFromDescriptionMethods = 설명에서형상가져오기

# Description:
FeatureLongClickEventDescriptions = 사용자가 지도 형상을 길게 누르고 있습니다.

# Description:
FeatureLongClickEvents = 형상을길게클릭했을때

# Description:
FeatureStartDragEventDescriptions = 사용자가 지도 형상 드래그를 시작했습니다.

# Description:
FeatureStartDragEvents = 형상드래그를시작할때

# Description:
FeatureStopDragEventDescriptions = 사용자가 지도 형상 드래그를 중지했습니다.

# Description:
FeatureStopDragEvents = 형상드래그를멈출때

# Description:
FeaturesFromGeoJSONProperties = GeoJSON에서가져온형상

# Description:
FeaturesFromGeoJSONPropertyDescriptions = 지정된 문자열에서 형상 모음을 로드합니다. 문자열이 유효한 GeoJSON이 아니라면 url = <string>을 사용하여 ''형상모음로딩오류''가 실행됩니다.

# Description:
FeaturesProperties = 형상

# Description:
FeaturesPropertyDescriptions = 이 지도에 배치 된 형상 목록입니다. 이 목록에는 ''설명에서 형상만들기''에 대한 호출로 작성된 모든 형상도 포함됩니다.

# Description:
FileHelpStringComponentPallette = 파일을 저장하고 검색하는데 사용하는 숨겨진 컴포넌트입니다. 이 컴포넌트는 기기에 파일을 쓰거나 읽을 때 사용하세요. 기본 기능은 앱의 비공개 데이터 공간에 파일을 쓰는 것입니다. 컴패니언은 특별히 디버깅을 수행하기 위해 /sdcard/AppInventor/data에 파일을 씁니다. 만약 파일 경로가 슬래쉬 (/)로 시작한다면, /sdcard 아래의 상대 경로로 파일이 만들어집니다. 예를들어 파일을 /myFile.txt 에 쓴다면 실제로는 /sdcard/myFile.txt 에 파일을 쓰게 됩니다.

# Description:
FillColorProperties = 채우기색상

# Description:
FillColorPropertyDescriptions = 지도 형상을 채우는 데 사용되는 페인트 색상입니다.

# Description:
FillScreenMethodDescriptions = 화면에 색상을 채 웁니다.

# Description:
FillScreenMethods = 색상채우기

# Description:
FirebaseDBHelpStringComponentPallette = 파이어베이스와 통신하여 정보를 저장하고 검색하는 보이지 않는 구성 요소.

# Description:
FirebaseErrorEventDescriptions = 파이어베이스와의 통신이 오류를 보냈음을 나타냅니다.

# Description:
FirebaseErrorEvents = 파이어베이스에오류가발생했을때

# Description:
FirebaseTokenProperties = 파이어베이스토큰

# Description:
# Description:
FirebaseURLProperties = 파이어베이스URL

# Description:
FirebaseURLPropertyDescriptions = 이 파이어베이스DB의 URL을 가져옵니다.

# Description:
FirstRemovedEventDescriptions = \"RemoveFirst\"기능에 의해 트리거되는 이벤트. 인수 \"value\"는 목록에서 첫 번째로 제거 된 개체입니다.

# Description:
FirstRemovedEvents = 첫번째값이삭제됐을때

# Description:
FlungEventDescriptions = 플링 제스처 (빠른 스 와이프)가 스프라이트에 만들어 졌을 때 : 캔버스의 왼쪽 상단을 기준으로 플링 시작 위치의 (x, y) 위치를 제공합니다. 또한 플링의 벡터의 x 속도 및 y 속도 구성 요소뿐만 아니라 플링의 속도 (밀리 초당 픽셀 수) 및 방향 (0-360도)를 제공합니다.

# Description:
FlungEvents = 플링했을때

# Description:
FollowLinksProperties = 링크따라가기여부

# Description:
FollowLinksPropertyDescriptions = 웹뷰어에서 링크를 탭했을 때 링크를 열지 여부를 결정합니다. 링크를 따라 간다면 ''뒤로가기''과 ''앞으로 가기''를 사용하여 브라우저 히스토리를 탐색 할 수 있습니다.

# Description:
FollowMethodDescriptions = 유저를 팔로잉합니다.

# Description:
FollowMethods = 팔로우

# Description:
FollowersProperties = 팔로워

# Description:
FollowersPropertyDescriptions = 이 속성에는 로그인 한 사용자의 팔로워 목록이 포함됩니다. 처음에는 목록이 비어 있습니다. 이를 설정하려면 프로그램에서 <ol> <li> <code> Authorize </ code> 메소드를 호출하십시오. </ li> <li> <code> IsAuthorized </ code> <li> <code> RequestFollowers </ code> 메소드를 호출하십시오. </ li> <li> <code> FollowersReceived </ code> 이벤트를 기다립니다. </ li> </ ol> (<code> RequestFollowers </ code>를 호출 할 때까지 그 값을 유지하십시오).

# Description:
FollowersReceivedEventDescriptions = 이 이벤트는 <code> RequestFollowers </ code>를 통해 요청 된 로그인 사용자의 모든 팔로워가 검색 될 때 발생합니다. 팔로어 목록은 <code> followers </ code> 매개 변수 또는 <code> Followers </ code> 속성에서 찾을 수 있습니다.

# Description:
FollowersReceivedEvents = 팔로워를받았을때

# Description:
FontBoldProperties = 글꼴굵게

# Description:
FontBoldPropertyDescriptions = 설정하면 버튼 텍스트가 굵게 표시됩니다.

# Description:
FontItalicProperties = 글꼴이텔릭

# Description:
FontItalicPropertyDescriptions = 설정하면 버튼 텍스트가 기울임 꼴로 표시됩니다.

# Description:
FontSizeProperties = 글꼴크기

# Description:
FontSizePropertyDescriptions = 버튼 텍스트의 포인트 크기입니다.

# Description:
FontTypefaceProperties = 글꼴서체

# Description:
FontTypefacePropertyDescriptions = 버튼 텍스트의 글꼴 패밀리.

# Description:
ForgetLoginMethodDescriptions = 사용자 로그인 인증을 지웁니다. 서비스 인증에는 영향을 주지 않습니다.

# Description:
ForgetLoginMethods = 로그인지우기

# Description:
FormHelpStringComponentPallette = 프로그램의 모든 구성요소를 포함하는 Top-level 구성요소

# Description:
FormatDateMethodDescriptions = 인스턴트를 지정된 날짜 형식으로 표현한 텍스트

# Description:
FormatDateMethods = 날짜형식으로바꾸기

# Description:
FormatDateTimeMethodDescriptions = 인스턴트를 지정된 날짜시간 형식으로 표현한 텍스트

# Description:
FormatDateTimeMethods = 날짜시간형식으로바꾸기

# Description:
FormatTimeMethodDescriptions = 인스턴트를 지정된 시간 형식으로 표현한 텍스트

# Description:
FormatTimeMethods = 시간형식으로바꾸기

# Description:
FriendTimelineProperties = 친구타임라인

# Description:
FriendTimelinePropertyDescriptions = 이 속성에는 사용자가 가장 최근에 보낸 20 개의 메시지가 포함됩니다. 처음에는 목록이 비어 있습니다. 이를 설정하려면 프로그램에서 <ol> <li> <code> Authorize </ code> 메소드를 호출하십시오. </ li> <li> <code> IsAuthorized </ code> <li> 사용자가 <code> 따르기 </ code> 메소드를 한 번 이상 호출하도록 지정합니다. </ li> <li> <code> RequestFriendTimeline </ code> 메소드를 호출하십시오. </ li> 이 프로퍼티의 값은 메시지 목록으로 설정 될 것입니다 (그리고 <code> RequestFriendTimeline </ code> 이벤트가 발생할 때까지 그 값을 유지합니다). </ li> / code>.

# Description:
FriendTimelineReceivedEventDescriptions = 이 이벤트는 <code> RequestFriendTimeline </ code>을 통해 요청 된 메시지가 검색 될 때 발생합니다. <code> timeline </ code> 매개 변수와 <code> Timeline </ code> 속성에는 목록의 목록이 포함됩니다. 각 하위 목록에는 양식의 상태 업데이트 (username message)

# Description:
FriendTimelineReceivedEvents = 친구타임라인을받았을때

# Description:
FullScreenProperties = 전체화면

# Description:
# Description:
FunctionCompletedEventDescriptions = 함수 호출 실행이 완료되었음을 나타냅니다.

# Description:
FunctionCompletedEvents = 함수호출이완료되었을때

# Description:
FusionTablesDeprecated = 경고 : Google은 Fusion Tables 서비스를 더 이상 사용하지 않습니다. 2019 년 12 월 3 일에 작업을 중단합니다. <a href=\"https://support.google.com/fusiontables/answer/9185417\" target=\"_blank\"> 자세히 알아보기 </a>

# Description:
FusionTablesStandardErrorMessage = 퓨전 테이블 쿼리 오류

# Description:
FusiontablesControlHelpStringComponentPallette = <p> Google Fusion Tables와 통신하는 보이지 않는 구성 요소입니다. Fusion Tables를 사용하면 데이터 테이블을 저장, 공유, 쿼리 및 시각화 할 수 있습니다. 이 구성 요소를 사용하면이 테이블을 쿼리하고 만들고 수정할 수 있습니다. </ p> <p>이 구성 요소는 <a href = \"https://developers.google.com/fusiontables/docs/v2/getting_started\"target = \" _blank \"> Fusion Tables API V2.0 </a>을 참조하십시오. <p> Fusion Tables를 사용하는 애플리케이션은 Google의 서버 인증을 받아야합니다. 이 작업을 수행하는 데는 두 가지 방법이 있습니다. 첫 번째 방법은 개발자가 획득 한 API 키를 사용합니다 (아래 참조). 이 방법을 사용하면 최종 사용자는 Fusion Table에 액세스하기 위해 로그인해야합니다. 두 번째 방법은 서비스 계정을 사용하는 것입니다. 이 방법을 사용하면 <a href=\"https://code.google.com/apis/console/\" target=\"_blank\"> Google API 콘솔 </ code>에서 제공하는 자격 증명과 특별한 \"서비스 계정 전자 메일 주소\" / a>. 그런 다음 Fusion Table Control에 서비스 계정 전자 메일 주소의 이름을 말하고 응용 프로그램에 비밀 키를 자산으로 업로드하고이 파일을 가리 키도록 KeyFile 속성을 설정합니다. 마지막으로 디자이너의 UseServiceAuthentication 체크 박스를 체크합니다. 서비스 계정을 사용할 때 최종 사용자는 Fusion Tables를 사용하기 위해 로그인 할 필요가 없으며 서비스 계정은 모든 액세스를 인증합니다. </ p> <p> API 키를 받으려면 다음 지침을 따르십시오. </ p> <ol> <li> <a href=\"https://code.google.com/apis/console/\" target=\"_blank\"> Google API 콘솔 </a>로 이동하여 필요한 경우 로그인하십시오. </ li> <li > 왼쪽 메뉴에서 <i> 서비스 </ i> 항목을 선택하십시오. </ li> <li> 제공된 목록에서 <i> 퓨전 테이블 </ i> 서비스를 선택하고 켭니다. </ li> <li> 기본 메뉴로 돌아가 <i> API 액세스 </ i> 항목을 선택하십시오. </ li> </ ol> <p> 귀하의 API 키는 \"Simple API Access\"섹션에서 해당 창 하단에 있습니다.이 키를 <i> ApiKey </ i> i> 속성을 호출합니다. </ p> <p> API 키가 있으면 <i> Query </ i> 속성 값을 유효한 Fusiontables SQL 쿼리로 설정하고 <i> SendQuery </ i> i> 쿼리를 실행합니다. App Inventor가 Fusion Tables 서버에 쿼리를 보내고 결과가 서버에서 반환되면 <i> GotResult </ i> 블록이 실행됩니다. 쿼리 결과는 CSV 형식으로 반환되며 다음을 사용하여 목록 형식으로 변환 할 수 있습니다. \"csv 테이블의 목록\"또는 \"csv 행의 목록\"차단. </ p> <p> 쿼리를 UTF 인코딩하는 것에 대해 걱정할 필요가 없습니다. 그러나 검색어가 <a href=\"https://developers.google.com/fusiontables/docs/v2/getting_started\" target=\"_blank\"> 참조 설명서 </a>에 설명 된 구문을 따르는 지 확인해야합니다. 이는 열 이름의 대문자 사용과 같은 것이 중요하다는 것을 의미하며 열 이름에 공백이 있으면 작은 따옴표를 사용해야합니다. </ p>

# Description:
GPSAvailableEventDescriptions = GPS 사용 가능 이벤트

# Description:
GPSAvailableEvents = GPS가사용가능할때

# Description:
GPSLostEventDescriptions = GPSLost 이벤트

# Description:
GPSLostEvents = GPS연결이끊겼을때

# Description:
GameClientHelpStringComponentPallette = 어플리케이션에 온라인 게임 서버와 통신할 수 있는 방법을 제공합니다

# Description:
GameIdProperties = 게임아이디

# Description:
GameIdPropertyDescriptions = 이 응용 프로그램의 게임 이름입니다. 동일한 게임 ID는 하나 이상의 게임 인스턴스를 가질 수 있습니다.

# Description:
GenerateColorProperties = 색상만들기

# Description:
GenerateColorPropertyDescriptions = 센서에서 생성되는 색상입니다. None, Red, Green 또는 Blue 만 유효한 값입니다. DetectColor 속성이 참으로 설정된 경우 센서에서 색상이 생성되지 않습니다.

# Description:
GenerateLightProperties = 빛만들기

# Description:
GenerateLightPropertyDescriptions = 광 센서가 빛을 생성해야하는지 여부.

# Description:
GetBackgroundPixelColorMethodDescriptions = 지정된 좌표의 색상을 가져옵니다. 색상에는 배경 및 그려진 점, 선 또는 원을 포함하며, 스프라이트는 제외됩니다.

# Description:
GetBackgroundPixelColorMethods = 배경픽셀색상가져오기

# Description:
GetBatteryCurrentMethodDescriptions = 배터리 전류값을 가져옵니다.

# Description:
GetBatteryCurrentMethods = 배터리전류가져오기

# Description:
GetBatteryLevelMethodDescriptions = 로봇의 배터리 잔량을 가져옵니다. 전압을 밀리 볼트 단위로 반환합니다.

# Description:
GetBatteryLevelMethods = 배터리수준

# Description:
GetBatteryVoltageMethodDescriptions = 배터리 전압을 가져옵니다.

# Description:
GetBatteryVoltageMethods = 배터리전압가져오기

# Description:
GetBrickNameMethodDescriptions = 로봇의 브릭 이름을 가져옵니다.

# Description:
GetBrickNameMethods = 브릭이름가져오기

# Description:
GetColorCodeMethodDescriptions = 0에서 7까지의 색상 코드를 반환합니다. 색상없음, 검정, 파랑, 녹색, 노란색, 빨간색, 흰색 및 갈색이 해당합니다.

# Description:
GetColorCodeMethods = 색상코드가져오기

# Description:
GetColorMethodDescriptions = 현재 감지 된 색상 또는 색상을 읽을 수 없거나 DetectColor 속성이 거짓로 설정된 경우 색상 없음을 반환합니다.

# Description:
GetColorMethods = 색상가져오기

# Description:
GetColorNameMethodDescriptions = \"No Color\", \"Black\", \"Blue\", \"Green\", \"Yellow\", \"Red\", \"White\", \"Brown\"중 하나의 색상 이름을 반환합니다.

# Description:
GetColorNameMethods = 색상이름가져오기

# Description:
GetCurrentProgramNameMethodDescriptions = 로봇에서 현재 실행중인 프로그램의 이름을 가져옵니다.

# Description:
GetCurrentProgramNameMethods = 현재프로그램이름가져오기

# Description:
GetDistanceMethodDescriptions = 센티미터 단위의 현재 거리를 0에서 254 사이의 값으로 반환합니다. 거리를 읽을 수없는 경우 -1을 반환합니다.

# Description:
GetDistanceMethods = 거리가져오기

# Description:
GetDurationMethodDescriptions = 밀리 초 단위로 비디오 재생 시간을 반환합니다.

# Description:
GetDurationMethods = 재생시간가져오기

# Description:
GetFirmwareBuildMethodDescriptions = EV3에서 펌웨어 빌드를 다운로드합니다.

# Description:
GetFirmwareBuildMethods = 펌웨어빌드가져오기

# Description:
GetFirmwareVersionMethodDescriptions = 로봇의 펌웨어 및 프로토콜 버전 번호를 목록으로 가져옵니다. 첫 번째 요소는 펌웨어 버전 번호이고 두 번째 요소는 프로토콜 버전 번호입니다.

# Description:
GetFirmwareVersionMethods = 펌웨어버전가져오기

# Description:
GetHardwareVersionMethodDescriptions = EV3의 하드웨어 버전을 가져옵니다.

# Description:
GetHardwareVersionMethods = 하드웨어버전가져오기

# Description:
GetInputValuesMethodDescriptions = 로봇의 입력 센서 값을 읽습니다. SetInputMode를 통해 센서 유형이 구성되었다고 가정합니다.

# Description:
GetInputValuesMethods = 입력값가져오기

# Description:
GetInstallerMethodDescriptions = 우리를 설치 한 앱을 반환합니다.

# Description:
GetInstallerMethods = 설치가져오기

# Description:
GetInstanceListsMethodDescriptions = InstancesJoined 및 InstancesInvited 목록을 업데이트합니다. 이 과정은 InstanceId를 설정하기 전에 호출 할 수 있습니다.

# Description:
GetInstanceListsMethods = 인스턴스리스트가져오기

# Description:
GetLightLevelMethodDescriptions = 현재의 조명 레벨을 0에서 1023 사이의 값으로 반환하거나, 조명 레벨을 읽을 수없는 경우 -1을 반환합니다.

# Description:
GetLightLevelMethods = 밝기레벨가져오기

# Description:
GetMessagesMethodDescriptions = 지정된 형식의 메시지를 검색합니다.

# Description:
GetMessagesMethods = 메시지리스트가져오기

# Description:
GetMethodDescriptions = Url 속성을 사용하여 HTTP GET 요청을 수행하고 응답을 검색합니다. <br> SaveResponse 속성이 참이면 응답이 파일에 저장되고 GotFile 이벤트가 트리거됩니다. ResponseFileName 속성을 사용하여 파일 이름을 지정할 수 있습니다. <br> SaveResponse 속성이 거짓이면 GotText 이벤트가 트리거됩니다.

# Description:
GetMethods = 가져오기

# Description:
GetMillisMethodDescriptions = 1970 년 이래로 밀리 초 단위로 측정 된 인스턴트

# Description:
GetMillisMethods = 밀리초가져오기

# Description:
GetOSBuildMethodDescriptions = EV3에서 OS 빌드를 가져옵니다.

# Description:
GetOSBuildMethods = OS빌드가져오기

# Description:
GetOSVersionMethodDescriptions = EV3에서 OS 버전을 갖

# Description:
GetOSVersionMethods = OS버전가져오기

# Description:
GetOutputStateMethodDescriptions = 로봇의 모터 출력 상태를 읽습니다.

# Description:
GetOutputStateMethods = 출력상태가져오기

# Description:
GetPixelColorMethodDescriptions = 지정된 점의 색을 가져옵니다.

# Description:
GetPixelColorMethods = 픽셀색상가져오기

# Description:
GetRowsMethodDescriptions = 지정된 퓨전 테이블에서 모든 행을 가져옵니다. tableId 필드는 필요한 융합 테이블의 ID입니다. columns 필드는 검색 할 열의 쉼표로 구분 된 목록입니다.

# Description:
GetRowsMethods = 행리스트가져오기

# Description:
GetRowsWithConditionsMethodDescriptions = 퓨전 테이블에서 특정 조건을 만족하는 모든 행을 가져옵니다. tableId 필드는 필요한 융합 테이블의 ID입니다. columns 필드는 쉼표로 구분 된 열 목록입니다. 조건 필드는 특정 열 값이 널이 아닌 행과 같이 테이블에서 검색 할 행을 지정합니다.

# Description:
GetRowsWithConditionsMethods = 조건에해당하는행리스트가져오기

# Description:
GetSensorValueMethodDescriptions = 현재 모드를 기준으로 현재 각도 또는 회전 속도를 반환합니다. 값을 센서에서 읽을 수없는 경우 -1을 반환합니다.

# Description:
GetSensorValueMethods = 센서값가져오기

# Description:
GetSoundLevelMethodDescriptions = 현재의 사운드 레벨을 0에서 1023 사이의 값으로 리턴합니다. 사운드 레벨을 읽을 수없는 경우 -1을 리턴합니다.

# Description:
GetSoundLevelMethods = 소리수준가져오기

# Description:
GetTachoCountMethodDescriptions = 현재 타코 카운트를 가져옵니다.

# Description:
GetTachoCountMethods = 타코카운트가져오기

# Description:
GetTagListMethodDescriptions = 이 어플리케이션의 태그 리스트를 가져옵니다. 완료되면 \"TagList\"이벤트가 알려진 태그 목록과 함께 트리거됩니다.

# Description:
GetTagListMethods = 태그리스트가져오기

# Description:
GetTagsMethodDescriptions = 데이터 저장소의 모든 태그 목록 반환

# Description:
GetTagsMethods = 태그가져오기

# Description:
GetTextMethodDescriptions = 사용자로부터 음성 입력을 요청합니다. 음성이 텍스트로 변환 된 후 ''텍스트 가져온 후'' 이벤트가 발생합니다.

# Description:
GetTextMethods = 텍스트가져오기

# Description:
GetValueMethodDescriptions = 웹 서비스에 주어진 태그 아래에 저장된 값을 가져올 것을 요청합니다. 태그 아래에 값이 저장되지 않으면 반환 할 것은 웹 서비스에 달려 있습니다. 이 컴포넌트는 반환 된 것은 무엇이든 받아들입니다.

# Description:
GetValueMethods = 값가져오기

# Description:
GetVersionNameMethodDescriptions = 우리의 버전 이름 속성을 가져옵니다.

# Description:
GetVersionNameMethods = 버전이름가져오기

# Description:
GetWifiIpAddressMethodDescriptions = 문자열 형식의 전화 IP 주소를 반환합니다.

# Description:
GetWifiIpAddressMethods = WifiIP주소가져오기

# Description:
GoBackMethodDescriptions = 히스토리 목록의 이전 페이지로 돌아갑니다. 이전 페이지가 없으면 아무것도하지 않습니다.

# Description:
GoBackMethods = 뒤로가기

# Description:
GoForwardMethodDescriptions = 히스토리 목록의 다음 페이지로 이동합니다. 다음 페이지가 없으면 아무것도하지 않습니다.

# Description:
GoForwardMethods = 앞으로가기

# Description:
GoHomeMethodDescriptions = 홈 URL 페이지를 로드합니다. 홈 URL이 변경되면 자동으로 실행됩니다.

# Description:
GoHomeMethods = 홈페이지로이동하기

# Description:
GoToUrlMethodDescriptions = 지정된 URL 페이지를 로드합니다.

# Description:
GoToUrlMethods = URL로이동하기

# Description:
GoogleVoiceEnabledProperties = 구글보이스활성화여부

# Description:
GoogleVoiceEnabledPropertyDescriptions = 참이면 SendMessage는 Google 보이스를 사용하여 Wi-Fi를 통해 메시지를 보내려고 시도합니다. 이를 위해서는 Google 보이스 계정이 포함된 휴대전화 또는 태블릿에 Google 보이스 앱을 설치하고 설정해야합니다. 만약 GoogleVoiceEnabled가 거짓 인 경우이 구성 요소로 메시지를 보내거나 받으려면 장치에 전화 및 문자 메시지 서비스가 있어야합니다.

# Description:
GotBallotConfirmationEventDescriptions = 투표 서비스가 투표 용지를 받았음을 확인하는 이벤트.

# Description:
GotBallotConfirmationEvents = 투표확인받음

# Description:
GotBallotEventDescriptions = 웹 서비스에서 투표가 검색되었으며 <code> BallotQuestion </ code> 및 <code> BallotOptions </ code> 속성이 설정되었음을 나타내는 이벤트입니다. 항상 메소드 <code> RequestBallot </ code>을 호출합니다.

# Description:
GotBallotEvents = 투표받았을때

# Description:
GotFeaturesEventDescriptions = GeoJSON 문서가 URL에서 성공적으로 읽혔습니다. 이 문서에 지정된 형상은 형상의 목록으로 제공됩니다.

# Description:
GotFeaturesEvents = 형상을얻었을때

# Description:
GotFileEventDescriptions = 요청이 완료 한 것을 나타내는 이벤트입니다.

# Description:
GotFileEvents = 파일을받았을때

# Description:
GotFocusEventDescriptions = 커서가 버튼 위로 이동 했으므로 이제 클릭 할 수 있음을 나타냅니다.

# Description:
GotFocusEvents = 포커스를받았을때

# Description:
GotMessageEventDescriptions = 새 메시지가 수신되었음을 나타냅니다.

# Description:
GotMessageEvents = 메시지를받았을때

# Description:
GotResultEventDescriptions = 퓨전 테이블 쿼리가 처리를 완료했으며 결과가 있음을 나타냅니다. 쿼리 결과는 일반적으로 CSV 형식으로 반환되며 \"list from csv table\"또는 \"csv row from list\"블록을 사용하여 목록 형식으로 변환 할 수 있습니다.

# Description:
GotResultEvents = 결과를받았을때

# Description:
GotTextEventDescriptions = 요청이 완료되었음을 나타내는 이벤트입니다.

# Description:
GotTextEvents = 텍스트를받았을때

# Description:
GotTranslationEventDescriptions = Yandex.Translate 서비스가 번역 된 텍스트를 반환 할 때 트리거되는 이벤트입니다. 이 이벤트는 오류 처리를 위한 응답 코드도 제공합니다. responseCode가 200이 아니면 호출에 문제가있어 번역을 사용할 수 없습니다.

# Description:
GotTranslationEvents = 번역을받았을때

# Description:
GotValueEventDescriptions = GetValue 서버 요청이 성공했음을 나타냅니다.

# Description:
GotValueEvents = 값을받았을때

# Description:
GyroscopeChangedEventDescriptions = 자이로 스코프 센서 데이터가 변경되었음을 나타냅니다. ''타임스탬프'' 매개 변수는 이벤트가 발생한 시간 (나노초)입니다.

# Description:
GyroscopeChangedEvents = 자이로스코프가변경되었을때

# Description:
GyroscopeSensorHelpStringComponentPallette = <p> 1 초당도 단위로 3 차원의 각속도를 측정 할 수있는 보이지 않는 구성 요소 </ p> <p> 작동하려면 구성 요소의 <code> 사용 </ code> 속성이 사실, 장치에는 자이로 스코프 센서가 있어야합니다. </ p>

# Description:
HTMLFormatProperties = HTML형식

# Description:
HTMLFormatPropertyDescriptions = 참이면 레이블에 html 텍스트가 표시되고 그렇지 않으면 일반 텍스트가 표시됩니다. 참고 : 일부 HTML은 지원되지 않습니다.

# Description:
HasAccuracyProperties = 정확도확인가능

# Description:
# Description:
HasAltitudeProperties = 고도확인가능

# Description:
# Description:
HasLongitudeLatitudeProperties = 위도경도확인가능

# Description:
# Description:
HasMarginsProperties = 여백여부

# Description:
HasMarginsPropertyDescriptions = 레이블에 여백이 있는지 여부를보고합니다. 네 개의 마진 (왼쪽, 오른쪽, 위, 아래)은 모두 동일합니다. 이 속성은 레이블이 항상 여백과 함께 표시되는 디자이너에서는 확인할 수 없습니다.

# Description:
HeadingProperties = 방향

# Description:
HeadingPropertyDescriptions = 스프라이트의 방향을 X 축 위의 각도로 반환합니다. 0도는 화면 오른쪽을 나타냅니다. 90 도는 화면 위쪽을 향합니다.

# Description:
HeightPercentProperties = 높이비율

# Description:
HeightPercentPropertyDescriptions = 컴퍼넌트의 수직의 높이를, 부모 컴퍼넌트의 높이의 퍼센트 치로 지정합니다.

# Description:
HeightProperties = 높이

# Description:
HeightPropertyDescriptions = 컴퍼넌트의 수직 높이를 픽셀 단위로 지정합니다.

# Description:
HideInfoboxMethodDescriptions = 정보창이 표시되어 있으면 숨깁니다. 정보창이 보이지 않는 상태라면 아무 효과가 없습니다.

# Description:
HideInfoboxMethods = 정보창숨기기

# Description:
HideKeyboardMethodDescriptions = 키보드를 숨깁니다. 오직 여러 줄 텍스트박스에서 이 기능이 필요합니다. 한 줄 텍스트 박스는 사용자가 완료 키를 누르면 키보드를 닫습니다.

# Description:
HideKeyboardMethods = 키보드화면숨기기

# Description:
HighByteFirstProperties = 높은바이트우선여부

# Description:
# Description:
HintProperties = 힌트

# Description:
HintPropertyDescriptions = 사용자가 입력해야하는 것에 대한 힌트를 제공하기 위해 입력 상자에 희미하게 표시되어야하는 텍스트입니다. 이것은 <code> Text </ code> 속성이 비어있는 경우에만 볼 수 있습니다.

# Description:
HolePointsFromStringProperties = 구멍연결점좌표

# Description:
HolePointsFromStringPropertyDescriptions = 구멍 당 지정된 좌표 목록에서 다각형에 구멍을 만듭니다.

# Description:
HolePointsProperties = 홀좌표

# Description:
# Description:
HomeUrlProperties = 홈URL

# Description:
HomeUrlPropertyDescriptions = 웹뷰어가 처음에 열어야 하는 페이지의 URL. 이것을 설정하면 페이지가 로드됩니다.

# Description:
HorizontalArrangementHelpStringComponentPallette = <p> 왼쪽에서 오른쪽으로 표시되어야하는 구성 요소를 배치 할 형식 지정 요소입니다. 구성 요소가 서로 표시되도록하려면 대신 <code> VerticalArrangement </ code>를 사용하십시오. </ p>

# Description:
HorizontalScrollArrangementHelpStringComponentPallette = <p> 왼쪽에서 오른쪽으로 표시되어야하는 구성 요소를 배치 할 형식 지정 요소입니다. 구성 요소를 하나씩 표시하려면 <code> VerticalArrangement </ code>를 사용하십시오. </ p> <p>이 버전은 스크롤 할 수 있습니다.

# Description:
HourMethodDescriptions = 하루의 시간

# Description:
HourMethods = 시가져오기

# Description:
HourProperties = 시

# Description:
HourPropertyDescriptions = 시간 선택 도구를 사용하여 마지막으로 설정 한 시간입니다. 시간은 24 시간 형식입니다. 마지막으로 설정된 시간이 오후 11시 53 분인 경우이 속성은 23을 반환합니다.

# Description:
HtmlTextDecodeMethodDescriptions = 지정된 HTML 텍스트 값을 디코딩합니다. & amp;, & amp; & amp;, & amp; 및 & quot;와 같은 HTML 문자 엔티티는, & amp; & gt ;, & gt; & # 39; \"로 변경된다. & amp; #xhhhh 및 & amp; #nnnn과 같은 엔티티가 해당 문자로 변경됩니다.

# Description:
HtmlTextDecodeMethods = Html텍스트디코딩하기

# Description:
IconProperties = 아이콘

# Description:
# Description:
IgnoreSslErrorsProperties = SSL오류무시

# Description:
IgnoreSslErrorsPropertyDescriptions = SSL 오류를 무시할지 여부를 결정하십시오. 오류를 무시하려면 참으로 설정하십시오. 이것을 사용하여 웹 사이트에서 자체 서명 한 인증서를 수락하십시오.

# Description:
ImageAssetProperties = 이미지

# Description:
ImageAssetPropertyDescriptions = ImageAsset 속성은 마커에 대한 대체 이미지를 제공하는 데 사용됩니다.

# Description:
ImageHelpStringComponentPallette = 이미지를 보여주기 위한 컴포넌트입니다. 보여줄 사진이나 이미지의 모양은 디자이너 또는 블록 에디터에서 지정할 수 있습니다.

# Description:
ImagePickerHelpStringComponentPallette = 이미지 선택은 특수 버튼입니다. 사용자가 이미지 선택을 누르면, 기기의 갤러리가 실행되고 원하는 이미지를 선택할 수 있습니다. 이미지를 선택한 다음, SD카드에 저장되고 이미지 파일 속성에 이미지 파일 이름이 지정됩니다. 용량이 넘치지 않도록 최대 10개까지 저장됩니다. 더 많은 이미지를 선택하면 이전 이미지들은 삭제되고 새로운 이미지가 저장됩니다.

# Description:
ImageProperties = 이미지

# Description:
ImagePropertyDescriptions = 컴퍼넌트의 이미지의 경로를 지정합니다. 이미지와 배경색이 동시에 설정된 경우에는 이미지를 표시합니다.

# Description:
ImageSpriteHelpStringComponentPallette = <code> 캔버스 </ code>에 배치 할 수있는 \"스프라이트\"는 터치 및 드래그에 반응하고 다른 스프라이트와 상호 작용합니다 (<code> Ball </ code> code> ImageSprite </ code>)와 캔버스의 가장자리를 드래그하고 속성 값에 따라 이동하십시오. 외관은 <code> Visible </ code> 속성이 <code> 거짓 </ code>가 아닌 한 <code> Picture </ code> 속성에 지정된 이미지의 모양입니다. </ p> <p> <code> ImageSprite </ code>는 1000 밀리 초 (1 초)마다 10 픽셀 왼쪽으로 이동합니다. 예를 들어 <code> Speed </ code> 속성을 10 [pixels]로 설정하면 <code> Interval <code> Heading </ code> 속성을 180 [degrees]로 설정하고 <code> Enabled </ code> 속성을 <code> True </ code>로 설정하십시오. <code> Rotates </ code> 속성이 <code> True </ code> 인 이미지는 스프라이트의 <code> Heading </ code> 변경으로 이미지를 회전시킨다. 회전하지 않는 넓은 스프라이트에 대해 충돌 검사가 부정확해질 수 있습니다. 스프라이트 속성은 프로그램 제어 하에서 언제든지 변경할 수 있습니다. </ p>

# Description:
IncomingCallAnsweredEventDescriptions = 걸려온 전화를 받았음을 나타내는 이벤트입니다. ''전화번호'' 는 걸려 오는 전화 번호입니다.

# Description:
IncomingCallAnsweredEvents = 걸려오는전화를받았을때

# Description:
InfoEventDescriptions = 플레이어가 알아야 할 무언가가 발생했음을 나타냅니다.

# Description:
InfoEvents = 정보가있을때

# Description:
InitializeEventDescriptions = 스크린이 시작되었을 때

# Description:
InitializeEvents = 초기화되었을때

# Description:
InsertRowMethodDescriptions = 지정된 퓨전 테이블에 행을 삽입합니다. tableId 필드는 퓨전 테이블의 ID입니다. 열은 값을 삽입 할 열을 쉼표로 구분 한 목록입니다. 값 필드는 각 열에 삽입 할 값을 지정합니다.

# Description:
InsertRowMethods = 행삽입

# Description:
InstallationIdMethodDescriptions = ACRA 설치 ID 반환

# Description:
InstallationIdMethods = 설치ID

# Description:
InstanceIdChangedEventDescriptions = MakeNewInstance 또는 SetInstance를 호출 한 결과 InstanceId 속성이 변경되었음을 나타냅니다.

# Description:
InstanceIdChangedEvents = 인스턴스아이디변경되었을때

# Description:
InstanceIdProperties = 인스턴스아이디

# Description:
InstanceIdPropertyDescriptions = 게임 인스턴스 ID입니다. 게임 ID와 인스턴스 ID는 게임을 고유하게 식별합니다.

# Description:
InstantInTimeParams = 시간인스턴트

# Description:
InstantMethods = 인스턴트

# Description:
InstantProperties = 인스턴트

# Description:
InstantPropertyDescriptions = 시간 선택 도구를 사용하여 마지막으로 설정 한 시간

# Description:
IntervalProperties = 시간간격

# Description:
IntervalPropertyDescriptions = 스프라이트 위치가 업데이트되는 간격 (밀리 초)입니다. 예를 들어 간격이 50이고 속도가 10이면 스프라이트는 50 밀리 초마다 10 픽셀 씩 이동합니다.

# Description:
InvalidPointEventDescriptions = 지도 작업 중에 잘못된 좌표가 제공되었습니다. message 매개 변수에는 문제에 대한 자세한 내용이 있습니다.

# Description:
InvalidPointEvents = 잘못된좌표일때

# Description:
InviteMethodDescriptions = 이 게임 인스턴스에 플레이어를 초대합니다.

# Description:
InviteMethods = 초대

# Description:
InvitedEventDescriptions = 사용자가 이 게임 인스턴스에 초대되었음을 나타냅니다.

# Description:
InvitedEvents = 초대받음

# Description:
InvitedInstancesProperties = 초대된인스턴스

# Description:
InvitedInstancesPropertyDescriptions = 이 플레이어가 초대되었지만 아직 참여하지 않은 게임 인스턴스 집합입니다. 현재 값이 반환되도록하려면 GetInstanceLists를 먼저 호출합니다.

# Description:
IsAcceptingProperties = 수용여부

# Description:
# Description:
IsAuthorizedEventDescriptions = 이 이벤트는 권한 부여가 성공하면 프로그램이 <code> Authorize </ code>를 호출 한 후에 발생합니다. 유효한 액세스 토큰이 이미있는 경우 <code> CheckAuthorized </ code>를 호출 한 후에 호출됩니다. 이 이벤트가 발생하면이 구성 요소의 다른 메소드를 호출 할 수 있습니다.

# Description:
IsAuthorizedEvents = 인증을받았을때

# Description:
IsConnectedProperties = 연결여부

# Description:
# Description:
IsDevicePairedMethodDescriptions = 지정한 주소의 블루투스 장치가 페어링되어 있는지 확인합니다.

# Description:
IsDevicePairedMethods = 디바이스페어링여부가져오기

# Description:
IsPlayingProperties = 재생중여부

# Description:
IsPlayingPropertyDescriptions = 미디어가 재생 중인지 여부를보고합니다.

# Description:
IsPressedMethodDescriptions = 터치 센서를 누르면 참을 반환합니다.

# Description:
IsPressedMethods = 눌림여부가져오기

# Description:
ItemBackgroundColorProperties = 항목배경색

# Description:
ItemBackgroundColorPropertyDescriptions = 목록선택 아이템의 배경색입니다.

# Description:
ItemTextColorProperties = 항목텍스트색상

# Description:
ItemTextColorPropertyDescriptions = 목록서택 아이템의 텍스트 칼라입니다.

# Description:
JoinedInstancesProperties = 참여한인스턴스리스트

# Description:
JoinedInstancesPropertyDescriptions = 이 플레이어가 참여하고있는 게임 인스턴스 집합입니다. 현재 값이 반환되도록하려면 GetInstanceLists를 먼저 호출합니다.

# Description:
JsonTextDecodeMethodDescriptions = 주어진 JSON 인코딩 값을 디코딩하여 해당 AppInventor 값을 생성합니다. JSON리스트 [x, y, z]는리스트 (xyz)로 디코딩되고, 이름 A와 값 B를 가진 JSON 오브젝트 (중괄호로 묶인 A : B로 표시)는리스트 ((AB) is, 두 요소 목록 (AB)을 포함하는 목록.

# Description:
JsonTextDecodeMethods = Json텍스트디코딩하기

# Description:
KeepAliveMethodDescriptions = 연결 유지. 현재 Sleep Time Limit를 밀리 초 단위로 반환합니다.

# Description:
KeepAliveMethods = 연결유지하기

# Description:
KeepRunningWhenOnPauseProperties = 백그라운드작동여부

# Description:
KeepRunningWhenOnPausePropertyDescriptions = 참으로 설정하면 앱이 보이지 않아도 근접 변경을 감지합니다.

# Description:
KeyFileProperties = 키파일

# Description:
KeyFilePropertyDescriptions = 개인 키 파일의 경로를 지정합니다. 이 키 파일은 FusionTables API에 액세스하는 데 사용됩니다.

# Description:
LabelHelpStringComponentPallette = 레이블은 텍스트 속성에 지정된 글을 화면에 표시하는 컴포넌트입니다. 디자이너 또는 블록 에디터에서 텍스트의 모양이나 위치를 변경하거나 다른 속성들을 지정할 수 있습니다.

# Description:
LanguageProperties = 언어

# Description:
LanguagePropertyDescriptions = 음성변환의 언어를 설정합니다. 이렇게하면 실제 언어가 아닌 단어가 발음되는 방식이 바뀝니다. 예를 들어, 영어를 말하면서 French 억양을 넣을 수 있습니다.

# Description:
LastMessageProperties = 마지막메시지

# Description:
# Description:
LatitudeFromAddressMethodDescriptions = 주어진 주소의 위도를 알아냅니다.

# Description:
LatitudeFromAddressMethods = 주소에서위도가져오기

# Description:
LatitudeProperties = 위도

# Description:
# Description:
LaunchPickerMethodDescriptions = 시간선택 팝업을 시작합니다.

# Description:
LaunchPickerMethods = 선택창열기

# Description:
LeaderProperties = 리더

# Description:
LeaderPropertyDescriptions = 게임의 리더. 언제든지 각 게임 인스턴스에는 리더가 하나만 있지만 리더는 시간에 따라 변경 될 수 있습니다. 처음에는 리더가 게임 인스턴스 제작자입니다. 응용 프로그램 작성자는 리더의 특별한 속성을 결정합니다. 리더 값은 서버와 성공적인 통신이 이루어질 때마다 업데이트됩니다.

# Description:
LeaveInstanceMethodDescriptions = 현재 인스턴스를 종료합니다.

# Description:
LeaveInstanceMethods = 인스턴스나가기

# Description:
LegacyModeProperties = 기존연결방식사용

# Description:
LegacyModePropertyDescriptions = 이 속성이 추가되기 이전의 AccelerometerSensor 컴포넌트 구성 요소는 Android 시스템에서받은 센서 값을 직접 통과했습니다. 그러나이 값은 MIT App Inventor 프로그래머가 보정해야하는 가로 모드로 설정된 태블릿을 보완하지 않습니다. 그러나 보상을하면 전화기와 같은 세로 모드 장치에서 잘못된 결과가 발생합니다. 이제 풍경 모드 태블릿을 감지하고 보정을 수행합니다. 그러나 프로젝트가 이미 변경 사항을 보상하고 있다면 잘못된 결과가 표시됩니다. 우리가 선호하는 솔루션은 프로젝트를 업데이트하는 것이지만이 속성을 참으로 설정하면 보상 코드가 비활성화됩니다. 참고 : 향후 릴리스에서이 속성을 제거 할 수 있으므로 프로젝트를 업데이트하는 것이 좋습니다.

# Description:
LineStringHelpStringComponentPallette = 선연겨

# Description:
LineWidthProperties = 선두께

# Description:
LineWidthPropertyDescriptions = 캔버스에 그려지는 선의 너비입니다.

# Description:
ListFilesMethodDescriptions = 로봇에서 발견되는 일치하는 파일의 이름을 포함하는 목록을 반환합니다.

# Description:
ListFilesMethods = 리스트파일

# Description:
ListPickerHelpStringComponentPallette = <p> 클릭하면 사용자가 선택할 텍스트 목록이 표시됩니다. 텍스트는 <code> ElementsFromString </ code> 속성을 문자열로 구분 된 연결 (예 : <em> 선택 사항 1, 선택 사항 2, 선택 항목 3 </ em>)으로 설정하여 디자이너 또는 블록 편집기를 통해 지정할 수 있습니다. 블록 편집기에서 <code> Elements </ code> 속성을 List로 설정하면됩니다. </ p> <p> ShowFilterBar 속성을 참으로 설정하면 목록을 검색 할 수 있습니다. 다른 속성은 버튼의 모양 (<code> TextAlignment </ code>, <code> BackgroundColor </ code> 등) 및 클릭 여부 (<code> 사용 </ code>)에 영향을줍니다. p>

# Description:
ListViewHelpStringComponentPallette = <p> 이것은 텍스트 요소 목록을 표시하는 가시적 인 구성 요소입니다. <br> 목록은 ElementsFromString 속성을 사용하거나 블록 편집기의 요소 블록을 사용하여 설정할 수 있습니다. </ p>

# Description:
LoadErrorEventDescriptions = 주어진 URL에서 GeoJSON 문서를 처리하는 동안 오류가 발생했습니다. responseCode 매개 변수에는 HTTP 상태 코드가 포함되며 errorMessage 매개 변수에는 자세한 오류 메시지가 포함됩니다.

# Description:
LoadErrorEvents = 열기오류가발생했을때

# Description:
LoadFromURLMethodDescriptions = <p> 지정된 URL에서 <a href=\"https://en.wikipedia.org/wiki/GeoJSON\"> GeoJSON </a> 형식으로 형상 모음을 로드합니다. 성공하면 GotFeatures 이벤트가 지정된 URL과 GeoJSON에서 구문 분석 된 기능 목록 (키, 값)의 목록으로 생성됩니다. 실패하면 해당 HTTP 응답 코드 및 오류 메시지와 함께 LoadError 이벤트가 발생합니다. </ p>

# Description:
LoadFromURLMethods = URL에서열기

# Description:
LoadingDialogMessageProperties = 로딩다이얼로그메시지

# Description:
LoadingDialogMessagePropertyDescriptions = 대화 상자의 로드 메시지를 설정합니다.

# Description:
LocationChangedEventDescriptions = 새 위치가 감지되었음을 나타냅니다.

# Description:
LocationChangedEvents = 위치가변경되었을때

# Description:
LocationSensorHelpStringComponentPallette = 경도, 위도, 고도 (장치가 지원하는 경우), 속도 (장치가 지원하는 경우) 및 주소를 비롯한 위치 정보를 제공하는 보이지 않는 구성 요소. 또한 지정된 주소 (반드시 현재 위치는 아님)를 위도 (LatitudeFromAddress </ code> 메소드 사용)와 경도 (LongitudeFromAddress </ code> 메소드 사용)로 변환하여 \"지오 코딩\"을 수행 할 수 있습니다 </ p> <p> 기능을 사용하려면 구성 요소의 <code> 사용 </ code> 속성이 참으로 설정되어 있어야하며 무선 네트워크 또는 GPS 위성 (야외의 경우) </ p> 앱이 시작될 때 위치 정보가 바로 제공되지 않을 수 있습니다. 위치 공급자가 찾아 사용되거나 OnLocationChanged 이벤트가 발생할 때까지 잠시 기다려야합니다.

# Description:
LocationSensorProperties = 위치센서

# Description:
LocationSensorPropertyDescriptions = 제공된 위치센서를 내장 위치 공급자가 아닌 사용자 위치 데이터로 사용합니다.

# Description:
LogErrorMethodDescriptions = Android 시스템 로그에 오류 메시지를 남깁니다. 로그에 액세스하는 방법은 Google Android 설명서를 참조하십시오.

# Description:
LogErrorMethods = 오류로그남기기

# Description:
LogInfoMethodDescriptions = Android 로그에 정보 메시지를 남깁니다.

# Description:
LogInfoMethods = 정보로그남기기

# Description:
LogWarningMethodDescriptions = Android 로그에 경고 메시지를 남깁. 로그에 액세스하는 방법은 Google Android 설명서를 참조하십시오.

# Description:
LogWarningMethods = 경고로그남기기

# Description:
LongClickEventDescriptions = 사용자가 해당 형상을 길게 누릅니다. 이 이벤트는 Draggable이 거짓 인 경우에만 트리거됩니다.

# Description:
LongClickEvents = 길게눌렀을때

# Description:
LongPressAtPointEventDescriptions = 사용자가 지도의 한 지점을 길게 누릅니다.

# Description:
LongPressAtPointEvents = 좌표를길게눌렀을때

# Description:
LongitudeFromAddressMethodDescriptions = 주어진 주소의 경도를 구합니다.

# Description:
LongitudeFromAddressMethods = 주소에서경도가져오기

# Description:
LongitudeProperties = 경도

# Description:
# Description:
LoopProperties = 반복

# Description:
LoopPropertyDescriptions = 참이면 플레이어가 재생 될 때 반복됩니다. 플레이어가 재생되는 동안 루프 설정은 현재 재생에 영향을 미칩니다.

# Description:
LostFocusEventDescriptions = 버튼에서 커서가 빠져나와서 더 이상 클릭 할 수 없음을 나타냅니다.

# Description:
LostFocusEvents = 포커스를잃었을때

# Description:
LsGetStatusMethodDescriptions = 읽을 수있는 사용 가능한 바이트 수를 반환합니다.

# Description:
LsGetStatusMethods = LS상태가져오기

# Description:
LsReadMethodDescriptions = 로봇의 입력 센서에서 부호없는 저속 데이터를 읽습니다. SetInputMode를 통해 센서 유형이 구성되었다고 가정합니다.

# Description:
LsReadMethods = LS읽기

# Description:
LsWriteMethodDescriptions = 저속 데이터를 로봇의 입력 센서에 씁니다. SetInputMode를 통해 센서 유형이 구성되었다고 가정합니다.

# Description:
LsWriteMethods = LS쓰기

# Description:
MagnitudeProperties = 크기

# Description:
# Description:
MakeDateMethodDescriptions = 사용자가 시계를 날짜 값으로 설정할 수 있습니다. 월 필드의 유효 값은 하루 필드의 경우 1-12 및 1-31입니다.

# Description:
MakeDateMethods = 날짜만들기

# Description:
MakeInstantFromMillisMethodDescriptions = 1970 년 이래로 밀리 초 단위로 지정된 시간입니다.

# Description:
MakeInstantFromMillisMethods = 밀리초로인스턴트만들기

# Description:
MakeInstantFromPartsMethodDescriptions = 시계가 열릴 때 표시 할 날짜와 시간을 설정할 수 있습니다. 월 필드의 유효 값은 하루 필드의 경우 1-12와 1-31입니다.

# Description:
MakeInstantFromPartsMethods = 조합으로인스턴트만들기

# Description:
MakeInstantMethodDescriptions = 시간은 MM / dd / YYYY hh : mm : ss 또는 MM / dd / YYYY 또는 hh : mm로 지정됩니다.

# Description:
MakeInstantMethods = 인스턴트만들기

# Description:
MakeNewInstanceMethodDescriptions = 이 게임의 새 인스턴스를 만들도록 서버에 요청합니다.

# Description:
MakeNewInstanceMethods = 새로운인스턴스만들기

# Description:
MakePhoneCallDirectMethodDescriptions = 전화번호 속성을 사용하여 전화를 겁니다.

# Description:
MakePhoneCallDirectMethods = 다이렉트전화걸기

# Description:
MakePhoneCallMethodDescriptions = 전화번호 속성의 번호를 사용하여 전화를 겁니다.

# Description:
MakePhoneCallMethods = 전화걸기

# Description:
MakeTimeMethodDescriptions = 사용자가 시계의 시간을 설정할 수 있습니다. - 유효한 형식은 hh : mm : ss입니다.

# Description:
MakeTimeMethods = 시간만들기

# Description:
MapHelpStringComponentPallette = 배경에서지도 타일을 렌더링하고 여러 마커 요소가지도상의 점을 식별 할 수있게 해주는 2 차원 컨테이너입니다. 지도 타일은 OpenStreetMap 제공자와 미국 지질 조사국에서 제공합니다.지도 구성 요소는 App Inventor에서 경계를 조작하는 세 가지 유틸리티를 제공합니다. 첫째, 화면상의 다른 구성 요소와 관련하여 맵을 이동할 수 있도록 잠금 메커니즘이 제공됩니다. 둘째, 잠금을 해제하면 사용자가지도를 모든 위치로 이동할 수 있습니다. 이 새 위치에서 \"Set Initial Boundary\"버튼을 누르면 현재지도 좌표를 속성에 저장할 수 있습니다. 마지막으로 Map이 다른 위치로 이동 된 경우 (예 : 마커를 스크린 외부에 추가하는 경우), \"Reset Map to Initial Bounds\"버튼을 사용하여 시작 위치의 Map을 다시 센터링 할 수 있습니다.

# Description:
MapTypeProperties = 지도유형

# Description:
MapTypePropertyDescriptions = 지도의 기본으로 사용할 타일 레이어 유형입니다. 유효한 값 : 1 (도로), 2 (공중), 3 (지형)

# Description:
MarkerHelpStringComponentPallette = <p>지도상의 정보를 가리키는 점에 배치 된 아이콘. 마커를 사용하여 정보 창, 사용자 정의 채우기 및 획 색상, 사용자 정의 이미지를 제공하여 정보를 사용자에게 전달할 수 있습니다. </ p>

# Description:
MaxValueProperties = 최댓값

# Description:
MaxValuePropertyDescriptions = 슬라이더의 최대 값을 설정합니다. 최대 값을 변경하면 축소판 위치가 최소값과 (최대) 값 사이의 중간 값으로 재설정됩니다. 새로운 최대치가 현재의 최소치보다 작은 경우, minimum 및 maximum의 양쪽 모두가이 값으로 설정됩니다. MaxValue를 설정하면 샘의 위치가 MinValue와 MaxValue의 중간으로 재설정되고 PositionChanged 이벤트가 발생합니다.

# Description:
MaximumRangeMethods = 최대범위정하기

# Description:
MaximumRangeProperties = 최대범위

# Description:
MaximumRangePropertyDescriptions = 장치의 근접센서의 최대 범위를 알아냅니다.

# Description:
MediaStoreHelpStringComponentPallette = 웹 서비스와 통신하고 미디어 파일을 저장하는 보이지 않는 구성 요소입니다.

# Description:
MediaStoredEventDescriptions = MediaStored 서버 요청이 성공했음을 나타냅니다.

# Description:
MediaStoredEvents = 미디어가저장되었을때

# Description:
MentionsProperties = 멘션리스트

# Description:
MentionsPropertyDescriptions = 이 속성에는 로그인 한 사용자의 멘션 목록이 들어 있습니다. 처음에는 목록이 비어 있습니다. 이를 설정하려면 프로그램에서 <ol> <li> <code> Authorize </ code> 메소드를 호출하십시오. </ li> <li> <code> IsAuthorized </ code> <code> RequestMentions </ code> 메소드 호출 </ li> <li> <code> MentionsReceived </ code> 이벤트를 기다립니다. </ li> </ ol> (<code> RequestMentions </ code>에 대한 이후의 호출이있을 때까지 그 값을 유지합니다).

# Description:
MentionsReceivedEventDescriptions = 이 이벤트는 <code> RequestMentions </ code>를 통해 요청 된 로그인 사용자의 언급이 검색 될 때 발생합니다. 그 멘션의 목록은 <code> 멘션 </ code> 매개 변수 또는 <code> 멘티션 </ code> 속성에서 찾을 수 있습니다.

# Description:
MentionsReceivedEvents = 멘션을받았을때

# Description:
MessageProperties = 메시지

# Description:
MessagePropertyDescriptions = ''메시지 보내기''가 호출 될 때 보낼 메시지입니다.

# Description:
MessageReadMethodDescriptions = 로봇의 편지함 (1-10)에서 메시지를 읽습니다.

# Description:
MessageReadMethods = 메시지읽기

# Description:
MessageReceivedEventDescriptions = 전화기로 문자 메시지를받을 때 발생하는 이벤트입니다.

# Description:
MessageReceivedEvents = 메시지를받았을때

# Description:
MessageWriteMethodDescriptions = 로봇의 편지함 (1-10)에 메시지를 작성합니다.

# Description:
MessageWriteMethods = 메시지쓰기

# Description:
MinValueProperties = 최솟값

# Description:
MinValuePropertyDescriptions = 슬라이더의 최소값을 설정합니다. 최소값을 변경하면 축소판 위치가 (새) 최소값과 최대 값 사이의 중간이되도록 재설정됩니다. 새로운 최소치가 현재의 최대치보다 큰 경우, minimum 및 maximum의 양쪽 모두가이 값으로 설정됩니다. MinValue를 설정하면 샘의 위치가 MinValue와 MaxValue의 중간으로 재설정되고 PositionChanged 이벤트가 발생합니다.

# Description:
MinimumIntervalProperties = 최소간격

# Description:
MinimumIntervalPropertyDescriptions = 사운드 간의 최소 간격 (밀리 초)입니다. 사운드를 재생하면 간격이 경과 할 때까지 모든 Play () 호출이 무시됩니다.

# Description:
MinuteMethodDescriptions = 시간의 분

# Description:
MinuteMethods = 분가져오기

# Description:
MinuteProperties = 분

# Description:
MinutePropertyDescriptions = 시간 피커를 사용하여 마지막으로 선택한 시간의 분

# Description:
MockSpinnerAddItems = 항목 추가…

# Description:
ModeProperties = 모드

# Description:
ModePropertyDescriptions = 센서 모드는 SetAngleMode 또는 SetRateMode에 각각 해당하는 \"속도\"또는 \"각도\"의 텍스트 상수가 될 수 있습니다.

# Description:
MonthInTextProperties = 월이름

# Description:
MonthInTextPropertyDescriptions = 날짜선택을 사용하여 마지막으로 선택한 달의 이름을 텍스트 형식으로 반환합니다.

# Description:
MonthMethodDescriptions = 1에서 12까지의 숫자로 표시된 월

# Description:
MonthMethods = 월가져오기

# Description:
MonthNameMethodDescriptions = 월의 이름

# Description:
MonthNameMethods = 월이름가져오기

# Description:
MonthProperties = 월

# Description:
MonthPropertyDescriptions = 날자선택을 사용해 마지막에 선택된 달의 번호. 월은 1 월 = 1 월, 12 = 12 월에 시작됩니다.

# Description:
MotorPortsProperties = 모터포트

# Description:
MotorPortsPropertyDescriptions = 모터가 연결된 모터 포트. 포트는 일련의 포트 문자로 지정됩니다.

# Description:
MoveBackwardIndefinitelyMethodDescriptions = 두 드라이브 모터의 역방향 전원을 켜서 최대 전력의 지정된 백분율로 무한대로 로봇을 뒤로 이동합니다.

# Description:
MoveBackwardIndefinitelyMethods = 계속뒤로가기

# Description:
MoveBackwardMethodDescriptions = 두 드라이브 모터의 역방향 전원을 켜서 지정된 거리만큼 로봇을 뒤로 움직입니다.

# Description:
MoveBackwardMethods = 뒤로가기

# Description:
MoveForwardIndefinitelyMethodDescriptions = 두 드라이브 모터에 전방으로 힘을 가하여 지정 된 퍼센트의 최대 전력으로 로봇을 무한대로 앞으로 움직입니다.

# Description:
MoveForwardIndefinitelyMethods = 계속앞으로가기

# Description:
MoveForwardMethodDescriptions = 두 구동 모터에 전방으로 힘을 가하여 지정된 거리만큼 로봇을 앞으로 움직입니다.

# Description:
MoveForwardMethods = 앞으로가기

# Description:
MoveIntoBoundsMethodDescriptions = 스프라이트의 일부가 경계를 벗어나는 경우에, 스프라이트를 경계 내로 다시 이동합니다.  스프라이트가 너무 커서 캔바스에 맞지 않으면 스프라이트의 왼쪽이 캔바스의 왼쪽에 맞춰집니다. 스프라이트가 너무 크고 캔버스에 맞지 않는 경우 스프라이트의 위쪽이 캔바스의 위쪽과 정렬됩니다.

# Description:
MoveIntoBoundsMethods = 경계안으로이동하기

# Description:
MoveToMethodDescriptions = 스프라이트의 왼쪽 상단 모서리를 지정된 x 및 y 좌표로 이동합니다.

# Description:
MoveToMethods = 좌표로이동하기

# Description:
MovingProperties = 이동

# Description:
# Description:
MultiLineProperties = 여러줄

# Description:
MultiLinePropertyDescriptions = 참인 경우,이 텍스트 박스는 리턴 키를 사용하여 입력되는 여러 줄의 입력을 허용합니다. 한 줄짜리 텍스트 상자의 경우 리턴 키 대신 완료 키가 있으며 완료를 누르면 키보드가 숨겨집니다. 앱은 ''키보드 숨기 메소드를 호출하여 키보드가 두꺼운 텍스트 상자로 숨겨져 있어야합니다.

# Description:
NamespaceProperties = 네임스페이스

# Description:
NamespacePropertyDescriptions = 데이터를 저장하기 위한 네임 스페이스.

# Description:
NearFieldHelpStringComponentPallette = <p> NFC 기능을 제공하는 보이지 않는 구성 요소. 현재이 구성 요소는 텍스트 태그의 읽기 및 쓰기 만 지원합니다 (장치가 지원하는 경우). </ p> <p> 텍스트 태그를 읽고 쓸려면 구성 요소에 <code> ReadMode </ code> 속성이 있어야합니다 </ p> <p> <strong> 참고 : </ strong>이 구성 요소는 모든 App Inventor 앱의 Screen1에서만 작동합니다. </ p>

# Description:
NewInstanceMadeEventDescriptions = ''새 인스턴스 만들기''를 호출 한 후 새 인스턴스가 성공적으로 만들어졌음을 나타냅니다.

# Description:
NewInstanceMadeEvents = 새인스턴스가만들어졌을때

# Description:
NewLeaderEventDescriptions = 이 게임에 ''리더 정하기''를 통해 지정된 새 리더가 있음을 나타냅니다.

# Description:
NewLeaderEvents = 새로운리더가생겼을때

# Description:
NoLongerCollidingWithEventDescriptions = 한 쌍의 스프라이트가 더 이상 충돌하지 않는다는 것을 나타내는 이벤트입니다.

# Description:
NoLongerCollidingWithEvents = 더이상충돌하지않을때

# Description:
NoOpenPollEventDescriptions = 서비스에 열린 투표가 없음을 나타내는 이벤트입니다.

# Description:
NoOpenPollEvents = 열린투표가없을때

# Description:
NorthLatitudeProperties = 북위

# Description:
# Description: Title for the Warning Dialog Box
NoticeTitle = 알림!

# Description:
NotifierHelpStringComponentPallette = Notifier 구성 요소는 경고 대화 상자, 메시지 및 임시 경고를 표시하고 다음 방법을 통해 Android 로그 항목을 만듭니다. <ul> <li> ShowMessageDialog : 버튼을 눌러 사용자가 해제해야하는 메시지를 표시합니다. </ li> <li > ShowChooseDialog : 예를 들어, 예 또는 아니요와 같이 AfterChoosing 이벤트가 발생한 후 사용자가 두 가지 응답 중 하나를 선택할 수있게 해주는 두 개의 버튼을 표시합니다. </ li> <li> ShowTextDialog : AfterTextInput 이벤트가 발생한 이후의 메시지입니다. <li> ShowPasswordDialog : 메시지에 대한 응답으로 비밀번호를 입력 할 수있게 한 다음 AfterTextInput 이벤트가 발생합니다. <li> ShowAlert : 잠시 후 자동으로 사라지는 임시 경고를 표시합니다. </ li> <li> ShowProgressDialog : 사용자가 해고 할 수없는로드하는 스피너와 함께 경고를 표시합니다. </ li> <li> DismissProgressDialog : ShowProgressDialog가 표시 한 진행 대화 상자를 닫습니다. </ li> <li> LogError : Android 로그에 오류 메시지를 기록합니다. </ li> <li> LogInfo : Android 로그에 정보 메시지를 기록합니다. </ li> <li> LogWarning : Android 로그에 경고 메시지를 기록합니다. & lt; big & gt;, & lt; blockquote & gt ;, & lt; br & gt; & lt; cite & gt; & lt; dfn & gt; & lt; div & gt ;, & lt; <small>, <strong>, <sub>, <sup>, <tt> 등의 정보를 포함 할 수있다. & lt; u & gt; </ li> <li> 글꼴 태그를 사용하여 색상을 지정할 수도 있습니다 (예 : & lt; font color = \"blue\"& gt;). 사용 가능한 색상 이름은 아쿠아, 검정, 파랑, 자홍색, 녹색, 회색, 라임, 밤색, 네이비, 올리브, 보라색, 빨간색, 은색, 청록색, 흰색 및 노란색입니다. </ li> </ ul>

# Description:
NotifierLengthProperties = 알림표시시간

# Description:
NotifierLengthPropertyDescriptions = 경고가 표시되는 시간을 \"짧게\"또는 \"길게\"지정합니다.

# Description:
NowMethodDescriptions = 휴대 전화의 시계에서 현재 시각을 인스턴트 형식으로 가져옵니다.

# Description:
NowMethods = 현재시각인스턴트로가져오기

# Description:
NumbersOnlyProperties = 숫자만

# Description:
NumbersOnlyPropertyDescriptions = 참인 경우이 텍스트 상자는 숫자 만 키보드 입력으로 허용합니다. 숫자에는 소수점 및 선행 마이너스 기호가 포함될 수 있습니다. 이것은 키보드 입력에만 적용됩니다. NumbersOnly가 참인 경우에도 [텍스트 세트]를 사용하여 텍스트를 입력 할 수 있습니다.

# Description:
NxtColorSensorHelpStringComponentPallette = LEGO MINDSTORMS NXT robot의 컬러 센서에 고급 인터페이스를 제공하는 컴포넌트

# Description:
NxtDirectCommandsHelpStringComponentPallette = LEGO MINDSTORMS NXT robot에 NXT에 직접 명령을 전달하는 기능과 초급 인터페이스를 제공하는 컴포넌트.

# Description:
NxtDriveHelpStringComponentPallette = LEGO MINDSTORMS NXT robot에 로보트를 움직이고 회전하게 할 수 있는 기능과 고급 인터페이스를 제공하는 컴포넌트.

# Description:
NxtLightSensorHelpStringComponentPallette = LEGO MINDSTORMS NXT robot의 조명센서에 고급 인터페이스를 제공하는 컴포넌트.

# Description:
NxtSoundSensorHelpStringComponentPallette = LEGO MINDSTORMS NXT robot의 소리 센서에 고급 인터페이스를 제공하는 컴포넌트

# Description:
NxtTouchSensorHelpStringComponentPallette = LEGO MINDSTORMS NXT robot의 터치 센서에 고급 인터페이스를 제공하는 컴포넌트

# Description:
NxtUltrasonicSensorHelpStringComponentPallette = LEGO MINDSTORMS NXT robot의 초음파 센서에 고급 인터페이스를 제공하는 컴포넌트

# Description:
OnProperties = 에

# Description:
# Description:
OnSettingsEventDescriptions = 이 이벤트는 \"settings\"메뉴 항목이 선택되면 시작됩니다 (ReplForm.java에 정의 된 Companion App에서만 사용 가능).

# Description:
OnSettingsEvents = 세팅중일때

# Description:
OpenMethodDescriptions = 사용자가 클릭한 것처럼 피커를 엽니다.

# Description:
OpenMethods = 열기

# Description:
OpenScreenAnimationMethods = 스크린열기애니메이션

# Description:
OpenScreenAnimationProperties = 스크린열기애니메이션

# Description:
OpenScreenAnimationPropertyDescriptions = 다른 화면으로 전환하기 위한 애니메이션입니다. 유효한 옵션은 default, fade, zoom, slidehorizontal, slidevertical 및 none입니다.

# Description:
OrientationChangedEventDescriptions = Default OrientationChanged 이벤트 핸들러입니다. <p> 기기의 방향이 변경되면이 이벤트가 발생합니다. 방위각, 피치 및 롤의 새 값을보고하고 방위각, 피치 및 롤 속성도 설정합니다. </ p> <p> 방위각은 나침반의 각도로, 피치는 장치가 위로 기울어지는 방식을 나타냅니다. 아래로, 롤은 기기가 좌우로 기울어 진 정도를 나타냅니다. </ p>

# Description:
OrientationChangedEvents = 방향이변경되었을때

# Description:
OrientationSensorHelpStringComponentPallette = <p> 기기의 실제 방향에 대한 정보를 3 차원으로 제공하는 보이지 않는 구성 요소 : <ul> <li> <strong> 롤 </ strong> : 기기가 수평 일 때 0 도가 90도까지 증가합니다. 장치가 왼쪽으로 기울어지고 장치가 오른쪽으로 기울이면 기울기가 -90 도로 감소합니다. </ li> <li> <strong> 피치 </ strong> : 기기가 수평 일 때 0도, 위로 기울이면 기기가 기울어 져 최대 90도, 뒤집혀 180 도가됩니다. 마찬가지로 장치가 기울어 져서 아래쪽이 아래로 내려 가면 피치가 -90 도로 감소하고 -180도까지 내려갑니다. </ li> <li> <azimuth </ strong> > : 장치의 상단이 북쪽을 가리키면 0도, 동쪽을 가리키는 경우 90도, 남쪽을 가리키는 경우 180도, 서쪽을 가리키는 경우 270도입니다. </ li> </ ul> 기기 자체가 움직이지 않는다고 가정합니다. </ p>

# Description:
OtherPlayerStartedEventDescriptions = 이 이벤트는 다른 플레이어가 시작되면 (현재 플레이어가 재생 중이거나 일시 중지되었지만 중지되지 않은 경우) 신호를 보냅니다.

# Description:
OtherPlayerStartedEvents = 다른플레이어가시작될때

# Description:
OtherScreenClosedEventDescriptions = 다른 화면이 닫히고 제어가 이 화면으로 돌아 왔을 때 발생하는 이벤트입니다.

# Description:
OtherScreenClosedEvents = 다른스크린을닫았을때

# Description: Text for the Package SDK 26 Warning Dialog Box (HTML)
Package26Notice = 이 옵션을 사용하여 Google Play 스토어에 제출할 수있는 애플리케이션을 만듭니다. <br/> 이러한 애플리케이션은 4.0 이상인 Android 버전에서 실행되지 않습니다.

# Description: Text for the Package non-SDK 26 Warning Dialog Box (HTML)
PackageNotice = Android 버전 2.1 (Eclair)로 다시 작동하지만 Google Play 스토어에서 게시 할 수없는 앱을 제작하려면이 옵션을 사용하세요.

# Description:
PaintColorProperties = 페인트색상

# Description:
PaintColorPropertyDescriptions = 선이 그려지는 색

# Description:
PanToMethodDescriptions = 지정된 위도와 경도로 지도 중심을 이동하고 줌 레벨을 지정된 줌으로 조정합니다.

# Description:
PanToMethods = 팬하기

# Description:
PasswordTextBoxHelpStringComponentPallette = <p> 비밀번호를 입력하는 상자입니다. 이것은 사용자가 입력 한 문자를 표시하지 않는다는 점을 제외하면 일반 <code> TextBox </ code> 구성 요소와 동일합니다. </ p> <p> 상자의 텍스트 값은 <code> 텍스트 </ code> 속성 빈 칸이면 빈 상자로 희미하게 나타나는 <code> 힌트 </ code> 속성은 사용자에게 무엇을 입력할지에 대한 지침을 제공 할 수 있습니다. </ p> <p> 텍스트 상자는 일반적으로 < 텍스트 입력이 완료되면 사용자가 버튼을 클릭하는 <code> Button </ code> 구성 요소가 있습니다. </ p>

# Description:
PasswordVisibleProperties = 암호보이기여부

# Description:
PasswordVisiblePropertyDescriptions = 비밀 번호의 가시성.

# Description:
PauseMethodDescriptions = 비디오의 재생을 일시 정지합니다. <code> 시작 </ code> 메소드를 호출하여 동일한 위치에서 재생을 다시 시작할 수 있습니다.

# Description:
PauseMethods = 일시정지하기

# Description:
PedometerHelpStringComponentPallette = 걸음 수를 셀 수 있는 컴포넌트입니다.

# Description:
PermissionDeniedEventDescriptions = 앱 사용자가 필요한 권한을 거부했을 때 처리 할 이벤트입니다.

# Description: The name of the event handler for when the app is denied a dangerous permission by the user.
PermissionDeniedEvents = 권한이거부되었을때

# Description:
PermissionGrantedEventDescriptions = 앱 사용자가 필요한 권한을 부여 할 때 처리 할 이벤트입니다. 이 이벤트는 AskForPermission 메소드에 대한 응답으로 권한이 부여 된 경우에만 실행됩니다.

# Description: The name of the event handler for when the app is granted a dangerous permission by the user.
PermissionGrantedEvents = 권한이승인되었을때

# Description:
PersistProperties = 지속여부

# Description:
PersistPropertyDescriptions = 참 인 경우 변수는 오프라인 일 때 값을 유지하고 앱이 종료됩니다. 값은 다음에 네트워크에 연결되어있는 동안 앱이 실행될 때 Firebase에 업로드됩니다. 이 기능은 네트워크에 연결되지 않은 상태에서 데이터를 수집하는 응용 프로그램에 유용합니다. 참고 : AppendValue 및 RemoveFirst는 오프라인 상태에서 제대로 작동하지 않으므로 네트워크 연결이 필요합니다. 참고 : Firebase 구성 요소에 Persist를 설정하면 모든 화면의 모든 Firebase 구성 요소가 영구적으로 유지됩니다. 이것은 저수준의 Firebase 라이브러리의 제한 사항입니다. 또한 persist를 true로 설정하려면 점진적 개발을 위해 Companion을 연결하기 전에이를 수행해야합니다.

# Description:
PhoneCallEndedEventDescriptions = 통화가 종료되었음을 나타내는 이벤트입니다. 상태가 1이면 수신 통화가 누락되거나 거부됩니다. 상태가 2 인 경우 전화가 끊기 전에 전화가 응답됩니다. 상태가 3이면 발신 전화가 끊깁니다. 전화번호는 종료 된 전화 번호입니다.

# Description:
PhoneCallEndedEvents = 전화통화를종료했을때

# Description:
PhoneCallHelpStringComponentPallette = <p> Designer 또는 Blocks Editor에서 설정할 수있는 <code> 전화번호 </ code> 속성에 지정된 번호로 전화를 걸 수있는 보이지 않는 구성 요소입니다. 이 구성 요소에는 <code> MakePhoneCall </ code> 메서드가있어서 프로그램에서 전화를 걸 수 있습니다. </ p> <p> 종종이 구성 요소는 <code> ContactPicker </ code> 구성 요소와 함께 사용됩니다. 사용자는 전화에 저장된 연락처 중에서 연락처를 선택하고 <code> 전화번호 </ code> 속성을 연락처의 전화 번호로 설정합니다. </ p> <p> 직접 전화 번호를 지정하려면 (예 : 650 -555-1212), <code> 전화번호 </ code> 속성을 지정된 숫자가있는 텍스트 (예 : \"6505551212\")로 설정하십시오. 대시, 점 및 괄호가 포함될 수 있지만 (예 : \"(650) -555-1212\") 무시됩니다. 공백은 포함되지 않을 수 있습니다. </ p>

# Description:
PhoneCallStartedEventDescriptions = 통화가 시작되었음을 나타내는 이벤트입니다. 상태가 1이면 수신 전화가 울립니다. 상태가 2이면 발신 전화가 걸립니다. 전화번호는 수신 / 발신 전화 번호입니다.

# Description:
PhoneCallStartedEvents = 전화통화를시작했을때

# Description:
PhoneNumberListProperties = 전화번호리스트

# Description:
# Description:
PhoneNumberPickerHelpStringComponentPallette = 클릭하면 연락처 중 선택할 수있는 전화 번호 목록이 표시됩니다. 사용자가 선택한 후에는 다음 속성이 선택한 연락처에 대한 정보로 설정됩니다. <ul> <li> <code> ContactName </ code> : 연락처의 이름 </ li> <li> 전화 번호 </ code> : 연락처의 전화 번호 </ li> <li> <code> EmailAddress </ code> : 연락처의 이메일 주소 </ li> / code> : <code> Image </ code> 또는 <code> ImageSprite </ code>에 대해 <code> Picture </ code> 속성 값으로 사용할 수있는 연락처 이미지를 포함하는 파일의 이름입니다. (<code> TextAlignment </ code>, <code> BackgroundColor </ code> 등) 버튼의 모양에 영향을주는 속성이 있습니다. </ li> </ li> (<code> 사용 </ code>)을 클릭 할 수 있는지 여부. </ p> <p> 전화번호Picker 구성 요소는 일부 Android 기기에서 작동하지 않을 수 있습니다. 예를 들어 시스템 3.0 이전의 Android 시스템에서는 반환 된 전화 번호 및 이메일 주소 목록이 비어 있습니다.

# Description:
PhoneNumberProperties = 전화번호

# Description:
PhoneNumberPropertyDescriptions = ''메시지 보내기'' 메서드가 호출 될 때 메시지를 보낼 번호입니다. 숫자는 지정된 숫자가있는 텍스트 문자열입니다 (예 : 6505551212). 대시, 점 및 괄호가 포함될 수 있지만 (예 : (650) -555-1212) 무시됩니다. 공백을 포함하면 안됩니다.

# Description:
PhoneStatusHelpStringComponentPallette = 전화번호 정보를 반환하는 컴포넌트

# Description:
PictureProperties = 사진

# Description:
# Description:
PitchProperties = 피치

# Description:
PitchPropertyDescriptions = TextToSpeech의 음높이를 설정합니다. 값이 0과 2 사이 여야하며, 낮은 값은 합성 된 음색의 음을 낮추고 큰 값은 값을 높이는 값입니다.

# Description:
PlayMethodDescriptions = Source 속성에 지정된 사운드를 재생합니다.

# Description:
PlayMethods = 재생하기

# Description:
PlayOnlyInForegroundProperties = 현재스크린에서만재생

# Description:
PlayOnlyInForegroundPropertyDescriptions = 참이면 플레이어는 현재 화면을 종료 할 때 재생을 일시 중지합니다. 거짓 (기본 옵션)이면 현재 화면이 표시 될 때마다 계속 재생됩니다.

# Description:
PlaySoundFileMethodDescriptions = 로봇에서 소리 파일을 재생합니다.

# Description:
PlaySoundFileMethods = 소리파일재생하기

# Description:
PlayToneMethodDescriptions = 로봇이 소리를 내도록 합니다.

# Description:
PlayToneMethods = 음재생하기

# Description:
PlayerHelpStringComponentPallette = 오디오를 재생하고 전화 진동을 제어하는 멀티미디어 구성 요소. 멀티미디어 필드의 이름은 디자이너 또는 블록 편집기에서 설정할 수있는 <code> 소스 </ code> 속성에 지정됩니다. 진동의 시간 길이는 밀리 초 (천분의 1 초) 단위로 블록 편집기에 지정됩니다. <p> 지원되는 오디오 형식은 <a href = \"http://developer.android.com/guide/appendix/ </ p> <p>이 구성 요소는 노래와 같이 긴 사운드 파일에 가장 적합하지만 <code> 소리 </ code> > 구성 요소는 사운드 효과와 같이 짧은 파일에 더 효율적입니다. </ p>

# Description:
PlayerJoinedEventDescriptions = 새 플레이어가이 게임 인스턴스에 참가했음을 나타냅니다.

# Description:
PlayerJoinedEvents = 플레이어가참가했을때

# Description:
PlayerLeftEventDescriptions = 플레이어가이 게임 인스턴스에서 나왔음을 나타냅니다.

# Description:
PlayerLeftEvents = 플레이어떠남

# Description:
PlayersProperties = 플레이어

# Description:
PlayersPropertyDescriptions = 이 게임 인스턴스의 현재 플레이어 집합입니다. 각 플레이어는 문자열 인 전자 메일 주소로 지정됩니다. 플레이어 목록은 게임 서버와 성공적인 통신이 이루어질 때마다 업데이트됩니다.

# Description:
PointInDirectionMethodDescriptions = 스프라이트가 좌표가 (x, y) 를 향하도록 설정합니다.

# Description:
PointInDirectionMethods = 좌표바라보기

# Description:
PointTowardsMethodDescriptions = 스프라이트가 지정된 대상 스프라이트를 향하도록합니다. 새로운 제목은 두 스프라이트의 중심점을 연결하는 선과 평행합니다.

# Description:
PointTowardsMethods = 스프라이트바라보기

# Description:
PointsFromStringProperties = 문자열좌표

# Description:
PointsFromStringPropertyDescriptions = 지정된 좌표 리스트를 이용하여 다각형을 그립니다.

# Description:
PointsProperties = 좌표

# Description:
PointsPropertyDescriptions = 다각형을 그리는 데 사용 된 점의 순서를 가져오거나 설정합니다.

# Description:
PolygonHelpStringComponentPallette = 다각형

# Description:
PositionChangedEventDescriptions = 슬라이더 섬의 위치가 변경된 것을 나타냅니다.

# Description:
PositionChangedEvents = 위치가변경되었을때

# Description:
PostFileMethodDescriptions = Url 속성과 지정된 파일의 데이터를 사용하여 HTTP POST 요청을 수행합니다. <br> SaveResponse 속성이 참이면 응답이 파일에 저장되고 GotFile 이벤트가 트리거됩니다. ResponseFileName 속성을 사용하여 파일 이름을 지정할 수 있습니다. <br> SaveResponse 속성이 거짓이면 GotText 이벤트가 트리거됩니다.

# Description:
PostFileMethods = 파일POST전송하기

# Description:
PostMediaMethodDescriptions = 지정된 미디어 파일을 저장하도록 웹 서비스에 요청합니다.

# Description:
PostMediaMethods = 미디어POST전송하기

# Description:
PostTextMethodDescriptions = Url 속성과 지정된 텍스트를 사용하여 HTTP POST 요청을 수행합니다. <br> 텍스트의 문자는 UTF-8 인코딩을 사용하여 인코딩됩니다. <br> SaveResponse 속성이 참이면 응답이 파일에 저장되고 GotFile 이벤트가 트리거됩니다. responseFileName 속성을 사용하여 파일 이름을 지정할 수 있습니다. <br> SaveResponse 속성이 거짓이면 GotText 이벤트가 트리거됩니다.

# Description:
PostTextMethods = 텍스트POST전송하기

# Description:
PostTextWithEncodingMethodDescriptions = Url 속성과 지정된 텍스트를 사용하여 HTTP POST 요청을 수행합니다. <br> 텍스트의 문자가 지정된 인코딩을 사용하여 인코딩됩니다. <br> SaveResponse 속성이 참이면 응답이 파일에 저장되고 GotFile 이벤트가 트리거됩니다. ResponseFileName 속성을 사용하여 파일 이름을 지정할 수 있습니다. <br> SaveResponse 속성이 거짓이면 GotText 이벤트가 트리거됩니다.

# Description:
PostTextWithEncodingMethods = 인코딩하여텍스트POST전송하기

# Description:
PressedEventDescriptions = 터치 센서를 눌렀습니다.

# Description:
PressedEventEnabledProperties = 눌림이벤트활성화여부

# Description:
PressedEventEnabledPropertyDescriptions = 터치 센서를 눌렀을 때 Pressed 이벤트가 발생할지 여부입니다.

# Description:
PressedEvents = 눌렸을때

# Description:
PrimaryColorDarkProperties = 기본어두운색상

# Description:
PrimaryColorDarkPropertyDescriptions = 이것은 매티리얼 UI에서 어두운 요소에 사용되는 기본 색상입니다.

# Description:
PrimaryColorProperties = 기본색상

# Description:
PrimaryColorPropertyDescriptions = 이것은 ActionBar와 같은 매티리얼 UI 요소에 사용되는 기본 색상입니다.

# Description:
ProgressBarFor = 진행 바

# Description:
ProjectBucketProperties = 프로젝트버킷

# Description:
ProjectBucketPropertyDescriptions = 이 FirebaseDB의 프로젝트 버킷을 가져옵니다.

# Description:
ProjectIDProperties = 프로젝트ID

# Description:
ProjectIDPropertyDescriptions = 이 CloudDB 프로젝트의 ProjectID를 가져옵니다.

# Description:
PromptProperties = 프롬프트

# Description:
PromptPropertyDescriptions = 스피너에서 현재 제목이 있는 텍스트

# Description:
PromptforPermissionProperties = 권한확인프롬프트

# Description:
PromptforPermissionPropertyDescriptions = 참이면 Geolocation API에 대한 액세스 권한을 부여하기 위해 WebView 사용자에게 프롬프트합니다. 거짓이면 권한이 부여된다고 가정합니다.

# Description:
ProviderLockedProperties = 서비스제공자잠금여부

# Description:
# Description:
ProviderNameProperties = 서비스제공자이름

# Description:
# Description:
ProximityChangedEventDescriptions = 장치에 대한 객체의 거리 (cm 단위)가 변경되면 트리거됩니다.

# Description:
ProximityChangedEvents = 거리가변경되었을때

# Description:
ProximityChangedMethods = 거리변경

# Description:
ProximityChangedPropertiesProperties = 거리변경속성

# Description:
ProximitySensorHelpStringComponentPallette = 기기의 스크린으로부터 상대적으로 물체가 얼마나 근접해있는지를 (단위는 cm) 측정할 수 있는 보이지 않는 컴포넌트입니다.이 센서는 주로 스마트폰이 사람의 귀에 가까이에 있는지를 확인하기 위해 사용합니다; 즉, 물체가 기기로부터 얼마나 멀리 있는지를 확인하는 것입니다. 많은 기기들은 cm 단위릐 절대 거리를 반환합니다. 그러나 몇몇은 단지 가까운지 멀리 있는지만 알려주기도 합니다. 이 경우에 센서는, 멀리 있을 경우에는 최대 거리를가까이 있을 때는 이보다 작은 값을 알려줍니다.

# Description:
PublicInstancesProperties = 공개인스턴스

# Description:
PublicInstancesPropertyDescriptions = 공개로 표시된 게임 인스턴스 집합입니다. 현재의 값이 돌려 주어 지도록 (듯이)하려면, 최초로 #GetInstanceLists를 호출합니다.

# Description:
PutFileMethodDescriptions = Url 속성과 지정된 파일의 데이터를 사용하여 HTTP PUT 요청을 수행합니다. <br> SaveResponse 속성이 참이면 응답이 파일에 저장되고 GotFile 이벤트가 트리거됩니다. ResponseFileName 속성을 사용하여 파일 이름을 지정할 수 있습니다. <br> SaveResponse 속성이 거짓이면 GotText 이벤트가 트리거됩니다.

# Description:
PutFileMethods = 파일PUT전송하기

# Description:
PutTextMethodDescriptions = Url 속성과 지정된 텍스트를 사용하여 HTTP PUT 요청을 수행합니다. <br> 텍스트의 문자는 UTF-8 인코딩을 사용하여 인코딩됩니다. <br> SaveResponse 속성이 참이면 응답이 파일에 저장되고 GotFile 이벤트가 트리거됩니다. responseFileName 속성을 사용하여 파일 이름을 지정할 수 있습니다. <br> SaveResponse 속성이 거짓이면 GotText 이벤트가 트리거됩니다.

# Description:
PutTextMethods = 텍스트PUT전송하기

# Description:
PutTextWithEncodingMethodDescriptions = Url 속성과 지정된 텍스트를 사용하여 HTTP PUT 요청을 수행합니다. <br> 텍스트의 문자가 지정된 인코딩을 사용하여 인코딩됩니다. <br> SaveResponse 속성이 참이면 응답이 파일에 저장되고 GotFile 이벤트가 트리거됩니다. ResponseFileName 속성을 사용하여 파일 이름을 지정할 수 있습니다. <br> SaveResponse 속성이 거짓이면 GotText 이벤트가 트리거됩니다.

# Description:
PutTextWithEncodingMethods = 인코딩하여텍스트PUT전송하기

# Description:
QueryProperties = 쿼리

# Description:
QueryPropertyDescriptions = Fusion Tables API에 보낼 쿼리입니다. <p> 합법적 인 쿼리 형식 및 예는 <a href=\"https://developers.google.com/fusiontables/docs/v2/getting_started\" target=\"_blank\"> Fusion Tables API v2.0 참조 설명서 < / a>. </ p> <p> 쿼리를 UTF 인코딩하는 것에 대해 걱정할 필요가 없습니다. 그러나 참조 설명서에 설명 된 구문을 따르는 지 확인해야합니다. 즉, 열 이름에 대문자를 사용하는 것과 같은 것이므로 열 이름에 공백이 있으면 작은 따옴표를 사용해야합니다. </ p >

# Description:
RadiusProperties = 반지름

# Description:
RadiusPropertyDescriptions = 원의 반지름 (미터).

# Description:
ReadFromMethodDescriptions = 저장소의 파일에서 텍스트를 읽습니다. 파일 이름 앞에 /를 붙여 SD 카드의 특정 파일에서 읽습니다. 예를 들어 /myFile.txt는 /sdcard/myFile.txt 파일을 읽습니다. 응용 프로그램과 함께 패키지 된 자산을 읽으려면 (Companion에서도 작동 함) 파일 이름을 // (두 개의 슬래시)로 시작하십시오. 파일 이름이 슬래시로 시작하지 않으면 응용 프로그램 개인 저장소 (패키지 된 응용 프로그램의 경우)와 /sdcard/AppInventor/data (컴패니언의 경우)에서 읽습니다.

# Description:
ReadFromMethods = 불러오기

# Description:
ReadModeProperties = 읽기모드

# Description:
# Description:
ReadyEventDescriptions = 지도가 초기화되었으며 사용자 상호 작용을위한 준비가되었습니다.

# Description:
ReadyEvents = 준비되었을때

# Description:
ReceiveSigned1ByteNumberMethodDescriptions = 연결된 Bluetooth 장치에서 부호있는 1 바이트 번호를 수신합니다.

# Description:
ReceiveSigned1ByteNumberMethods = 부호있는1바이트숫자받기

# Description:
ReceiveSigned2ByteNumberMethodDescriptions = 연결된 Bluetooth 장치에서 부호있는 2 바이트 숫자를 수신합니다.

# Description:
ReceiveSigned2ByteNumberMethods = 부호있는2바이트숫자받기

# Description:
ReceiveSigned4ByteNumberMethodDescriptions = 연결된 Bluetooth 장치에서 부호있는 4 바이트 숫자를 수신합니다.

# Description:
ReceiveSigned4ByteNumberMethods = 부호있는4바이트숫자받기

# Description:
ReceiveSignedBytesMethodDescriptions = 연결된 Bluetooth 장치에서 여러 개의 서명 된 바이트 값을 수신합니다. numberOfBytes가 0보다 작은 경우 구분 기호 바이트 값이 수신 될 때까지 읽습니다.

# Description:
ReceiveSignedBytesMethods = 부호있는바이트받기

# Description:
ReceiveTextMethodDescriptions = 연결된 Bluetooth 장치에서 텍스트를 수신합니다. numberOfBytes가 0보다 작은 경우 구분 기호 바이트 값이 수신 될 때까지 읽습니다.

# Description:
ReceiveTextMethods = 텍스트받기

# Description:
ReceiveUnsigned1ByteNumberMethodDescriptions = 연결된 Bluetooth 장치에서 부호없는 1 바이트 번호를 수신합니다.

# Description:
ReceiveUnsigned1ByteNumberMethods = 부호없는1바이트숫자받기

# Description:
ReceiveUnsigned2ByteNumberMethodDescriptions = 연결된 Bluetooth 장치에서 부호없는 2 바이트 번호를 수신합니다.

# Description:
ReceiveUnsigned2ByteNumberMethods = 부호없는2바이트숫자받기

# Description:
ReceiveUnsigned4ByteNumberMethodDescriptions = 연결된 Bluetooth 장치에서 부호없는 4 바이트 번호를 수신합니다.

# Description:
ReceiveUnsigned4ByteNumberMethods = 부호없는4바이트숫자받기

# Description:
ReceiveUnsignedBytesMethodDescriptions = 연결된 Bluetooth 장치에서 여러 개의 부호없는 바이트 값을 수신합니다. numberOfBytes가 0보다 작은 경우 구분 기호 바이트 값이 수신 될 때까지 읽습니다.

# Description:
ReceiveUnsignedBytesMethods = 부호없는바이트받기

# Description:
ReceivingEnabledProperties = 데이터수신활성화

# Description:
ReceivingEnabledPropertyDescriptions = 1 (OFF)로 설정하면 메시지가 수신되지 않습니다. 2 (FOREGROUND) 또는 3 (ALWAYS)로 설정하면 구성 요소가 실행중인 경우 메시지에 응답합니다. 앱이 실행 중이 아니면 2 (FOREGROUND)로 설정하면 메시지가 삭제됩니다. 3 (항상)으로 설정하고 앱이 실행되고 있지 않으면 휴대 전화에 알림이 표시됩니다. 알림을 선택하면 앱이 표시되고 MessageReceived 이벤트가 발생합니다. 응용 프로그램이 휴면 상태 일 때 수신 된 메시지는 대기 상태가되고 응용 프로그램이 깨어 나면 여러 개의 MessageReceived 이벤트가 나타날 수 있습니다. 앱 개발자는 사용자에게이 속성을 제어 할 수있는 권한을 부여하여 앱을 설치할 때 휴대 전화가 문자 메시지를 무시하도록 할 수 있습니다.

# Description:
RecordVideoMethodDescriptions = 비디오를 녹화 한 다음 AfterRecoding 이벤트를 발생시킵니다.

# Description:
RecordVideoMethods = 비디오녹화하기

# Description:
RectangleHelpStringComponentPallette = 사각형

# Description:
RedisPortProperties = 레디스포트

# Description:
RedisPortPropertyDescriptions = 사용할 Redis Server 포트. 기본값은 6381입니다.

# Description:
RedisServerProperties = 레디스서버

# Description:
RedisServerPropertyDescriptions = 데이터를 저장하는 데 사용할 Redis 서버. \"DEFAULT\"설정은 MIT 서버가 사용될 것임을 의미합니다.

# Description:
ReleasedEventDescriptions = 터치 센서가 해제되었습니다.

# Description:
ReleasedEventEnabledProperties = 터치해제이벤트활성화

# Description:
ReleasedEventEnabledPropertyDescriptions = 터치 센서가 해제 될 때 Released 이벤트가 실행되는지 여부.

# Description:
ReleasedEvents = 터치해제

# Description:
RemoveFirstFromListMethodDescriptions = 목록의 첫 번째 요소를 반환하고 이를 개별적으로 제거합니다. 두 장치가이 기능을 동시에 사용하면 첫 번째 요소를 가져오고 다른 요소는 두 번째 요소를 가져오고, 사용 가능한 요소가 없으면 오류가 발생합니다. 요소를 사용할 수있게되면 \"FirstRemoved\"이벤트가 트리거됩니다.

# Description:
RemoveFirstFromListMethods = 첫번째항목삭제하기

# Description:
RemoveFirstMethodDescriptions = 목록의 첫 번째 요소를 반환하고 이를 개별적으로 제거합니다. 두 장치가이 기능을 동시에 사용하면 첫 번째 요소를 가져오고 다른 요소는 두 번째 요소를 가져오고, 사용 가능한 요소가 없으면 오류가 발생합니다. 요소를 사용할 수있게되면 \"FirstRemoved\"이벤트가 트리거됩니다.

# Description:
RemoveFirstMethods = 첫번째항목삭제하기

# Description:
RequestBallotMethodDescriptions = <code> ServiceURL </ code> 속성에 지정된 웹 서비스에 투표를 요청하십시오. 완료되면 <code> GotBallot </ code>, <code> NoOpenPoll </ code> 또는 <code> WebServiceError </ code> 이벤트 중 하나가 발생합니다.

# Description:
RequestBallotMethods = 투표요청하기

# Description:
RequestDirectMessagesMethodDescriptions = 로그인 한 사용자에게 가장 최근의 직접 메시지 20 개를 요청합니다. 메시지가 검색되면 시스템은 <code> DirectMessagesReceived </ code> 이벤트를 발생시키고 <code> DirectMessages </ code> 속성을 메시지 목록으로 설정합니다. <p> <u> 요구 사항 </ u> : <code> IsAuthorized </ code> 이벤트가 발생하여 사용자가 성공적으로 Twitter에 로그인했음을 알리는 경우에만 호출해야합니다. </ p>

# Description:
RequestDirectMessagesMethods = 쪽지요청하기

# Description:
RequestFocusMethodDescriptions = 텍스트 박스를 활성화합니다.

# Description:
RequestFocusMethods = 포커스요청하기

# Description:
RequestFollowersMethodDescriptions = 나를 팔로우하는 사용자를 가져옵니다.

# Description:
RequestFollowersMethods = 팔로워요청하기

# Description:
RequestFriendTimelineMethodDescriptions = 사용자의 타임 라인에서 가장 최근 20 개의 메시지를 가져옵니다.

# Description:
RequestFriendTimelineMethods = 친구타임라인요청하기

# Description:
RequestHeadersProperties = 요청헤더

# Description:
RequestHeadersPropertyDescriptions = 요청 헤더는 두 요소로 된 하위 목록의 목록입니다. 각 하위 목록의 첫 번째 요소는 요청 헤더 필드 이름을 나타냅니다. 각 하위 목록의 두 번째 요소는 요청 헤더 필드 값 (단일 값 또는 여러 값을 포함하는 목록)을 나타냅니다.

# Description:
RequestMentionsMethodDescriptions = 로그인 한 사용자의 가장 최근의 언급 20 개를 요청합니다. 멘션이 검색되면 시스템은 <code> MentionsReceived </ code> 이벤트를 발생시키고 <code> Mentions </ code> 속성을 멘션 목록으로 설정합니다. <p> <u> 요구 사항 </ u> : <code> IsAuthorized </ code> 이벤트가 발생하여 사용자가 성공적으로 Twitter에 로그인했음을 알리는 경우에만 호출해야합니다. </ p>

# Description:
RequestMentionsMethods = 멘션요청하기

# Description:
RequestTranslationMethodDescriptions = 번역 할 대상 언어를 제공하면 (예 : 스페인어의 경우 ''''es '''', 영어의 경우 ''''en '''', 러시아어의 경우 ''''ru '''') 번역 할 단어 나 문장을 제공함으로써이 메소드는 Yandex.Translate 서비스로의 번역. 텍스트가 외부 서비스에 의해 변환되면 이벤트 GotTranslation이 실행됩니다. 참고 : Yandex.Translate는 소스 언어를 감지하려고 시도합니다. 또한 언어 변환에 미리 지정하도록 지정할 수 있습니다. 즉 es-ru는 스페인어에서 러시아어로 번역을 지정합니다.

# Description:
RequestTranslationMethods = 번역요청하기

# Description:
ResetInputScaledValueMethodDescriptions = 로봇에서 입력 센서의 스케일 된 값을 재설정합니다.

# Description:
ResetInputScaledValueMethods = 입력된배율값초기화하기

# Description:
ResetMethodDescriptions = 스텝 카운터, 거리 측정 및 실행 시간을 재설정합니다.

# Description:
ResetMethods = 초기화

# Description:
ResetMotorPositionMethodDescriptions = 모터 위치 재설정.

# Description:
ResetMotorPositionMethods = 모터위치초기화하기

# Description:
ResetTachoCountMethodDescriptions = 현재 tacho 수를 0으로 설정합니다.

# Description:
ResetTachoCountMethods = 타코카운트초기화하기

# Description:
ResolveActivityMethodDescriptions = 이 ActivityStarter에 해당하는 활동 이름을 반환하거나 해당 활동을 찾을 수없는 경우 빈 문자열을 반환합니다.

# Description:
ResolveActivityMethods = 액티비티가져오기

# Description:
ResponseFileNameProperties = 응답파일이름

# Description:
ResponseFileNamePropertyDescriptions = 응답을 저장해야하는 파일의 이름. SaveResponse가 참이고 ResponseFileName이 비어 있으면 새 파일 이름이 생성됩니다.

# Description:
ResultNameProperties = 결과이름

# Description:
# Description:
ResultProperties = 결과

# Description:
# Description:
ResultTypeProperties = 결과유형

# Description:
# Description:
ResultUriProperties = 결과URI

# Description:
# Description:
ResumeMethodDescriptions = 일시 정지 후 사운드 재생을 다시 시작합니다.

# Description:
ResumeMethods = 다시시작하기

# Description:
ReverseDirectionProperties = 역방향

# Description:
ReverseDirectionPropertyDescriptions = 모터의 방향이 바뀌 었는지 여부를 지정합니다.

# Description:
RollProperties = 롤

# Description:
# Description:
RotateInDistanceMethodDescriptions = 거리만큼  모터를 회전합니다.

# Description:
RotateInDistanceMethods = 거리만큼회전하기

# Description:
RotateInDurationMethodDescriptions = 모터를 일정 시간 동안 회전합니다.

# Description:
RotateInDurationMethods = 시간만큼회전하기

# Description:
RotateInTachoCountsMethodDescriptions = 회전 수를 이용해 모터를 회전합니다.

# Description:
RotateInTachoCountsMethods = 타코카운트만큼회전하기

# Description:
RotateIndefinitelyMethodDescriptions = 모터 회전을 시작합니다.

# Description:
RotateIndefinitelyMethods = 계속회전하기

# Description:
RotateSyncInDistanceMethodDescriptions = 동일한 속도로 모터를 cm 단위로 회전 합니다.

# Description:
RotateSyncInDistanceMethods = 동시에거리만큼회전하기

# Description:
RotateSyncInDurationMethodDescriptions = 일정 시간 동안 동일한 속도로 두 모터를 회전합니다.

# Description:
RotateSyncInDurationMethods = 동시에시간만큼회전하기

# Description:
RotateSyncInTachoCountsMethodDescriptions = 두 모터를 동일한 속도로 타코 (tacho) 카운트만큼 회전시킵니다.

# Description:
RotateSyncInTachoCountsMethods = 동시에타코카운트만큼회전하기

# Description:
RotateSyncIndefinitelyMethodDescriptions = 같은 속도로 두 모터를 회전합니다.

# Description:
RotateSyncIndefinitelyMethods = 동시에계속회전하기

# Description:
RotatesProperties = 회전하기

# Description:
RotatesPropertyDescriptions = 참이면 스프라이트의 방향과 일치하게 스프라이트 이미지가 회전합니다. 거짓 인 경우 스프라이트 방향이 변경되어도 스프라이트 이미지가 회전하지 않습니다. 스프라이트는 중심점을 중심으로 회전합니다.

# Description:
RotationAngleProperties = 회전각도

# Description:
RotationAnglePropertyDescriptions = 이미지 그림이 회전 된 각도입니다. 이 회전은 디자이너 화면에는 표시되지 않고 기기에서만 표시됩니다.

# Description:
RotationProperties = 회전

# Description:
RotationPropertyDescriptions = 지도에서 회전을 설정하거나 가져옵니다.

# Description:
RowsProperties = 행

# Description:
# Description:
SaveAsMethodDescriptions = 이 Canvas의 그림을 fileName이라는 파일에있는 장치의 외부 저장소에 저장합니다. fileName은 파일 형식을 결정하는 .jpg, .jpeg 또는 .png 중 하나로 끝나야합니다.

# Description:
SaveAsMethods = 다른이름으로저장하기

# Description:
SaveFileMethodDescriptions = 텍스트를 파일에 저장합니다. 파일 이름이 슬래시 (/)로 시작하면 파일은 sdcard에 기록됩니다. 예를 들어 /myFile.txt에 쓰면 /sdcard/myFile.txt에 파일이 기록됩니다. 파일 이름이 슬래시로 시작하지 않으면 프로그램의 개인 데이터 디렉토리에 기록되며 다른 프로그램에서는 액세스 할 수 없습니다. AI Companion에는 디버깅을 용이하게하기 위해이 파일들이 /sdcard/AppInventor/data에 기록되는 특별한 예외가 있습니다. 이 블록은 이미 존재하는 파일을 덮어 씁니다. 파일에 내용을 추가하려면 append 블록을 사용하십시오.

# Description:
SaveFileMethods = 파일저장하기

# Description:
SaveMethodDescriptions = 만보계 상태를 전화기에 저장합니다. 허가 만보계를 사용하는 App의 호출 간격과 거리의 누적을 허용합니다. 각기 다른 Apps에는 자체 저장된 상태가 있습니다.

# Description:
SaveMethods = 저장하기

# Description:
SaveResponseProperties = 응답저장하기

# Description:
SaveResponsePropertyDescriptions = 응답을 파일에 저장할지 여부.

# Description:
SavedRecordingProperties = 저장경로

# Description:
SavedRecordingPropertyDescriptions = 기록을 저장해야하는 파일의 경로를 지정합니다. 이 속성이 빈 문자열이면 녹음을 시작하면 적절한 위치에 파일이 만들어집니다. 속성이 빈 문자열이 아닌 경우 확장명이 .3gp 인 파일 이름을 포함하여 기존 디렉토리의 파일에 대한 전체 경로를 지정해야합니다.

# Description:
ScalePictureToFitProperties = 사진크기맞추기

# Description:
ScalePictureToFitPropertyDescriptions = 이미지뷰의 크기와 일치하도록 이미지의 크기를 조정할지 여부를 지정합니다.

# Description:
ScaleUnitsProperties = 크기단위

# Description:
# Description: A property for scaling images
ScalingProperties = 크기변경

# Description:
ScalingPropertyDescriptions = 이 속성은 이미지의 높이 또는 너비에 따라 그림의 크기가 조정되는 방식을 결정합니다. 비율에 비례하여 (0) 화면 종횡비를 유지합니다. 가로 세로 비율이 변경 되더라도 가로 세로 맞춤 (1)은 이미지 영역과 일치합니다.

# Description:
ScreenOrientationChangedEventDescriptions = 화면 방향이 변경됨

# Description:
ScreenOrientationChangedEvents = 스크린방향이변경되었을때

# Description:
ScreenOrientationProperties = 스크린방향

# Description:
ScreenOrientationPropertyDescriptions = 텍스트 값으로 지정된 요청 된 화면 방향입니다. 일반적으로 사용되는 값은 가로, 세로, 센서, 사용자 및 지정되지 않음입니다. 가능한 설정의 전체 목록은 ActivityInfo.Screen_Orientation에 대한 Android 개발자 문서를 참조하십시오.

# Description:
ScrollableProperties = 스크롤가능여부

# Description:
ScrollablePropertyDescriptions = 이 옵션을 선택하면 화면에 세로 스크롤 막대가 표시되며 응용 프로그램의 높이가 장치의 실제 높이를 초과 할 수 있습니다. 이 옵션을 선택하지 않으면 응용 프로그램 높이가 장치 높이로 제한됩니다.

# Description:
SdkLevelMethodDescriptions = 현재 Android SDK 레벨 가져 오기

# Description:
SdkLevelMethods = SDK레벨

# Description:
SearchResultsProperties = 검색결과

# Description:
SearchResultsPropertyDescriptions = <ol> <li> <code> SearchTwitter </ code> 메소드를 호출합니다. </ li> <li> <code> > SearchSuccessful </ code> 이벤트가 있습니다. </ li> </ ol> 속성 값은 <code> SearchSuccessful </ code>의 매개 변수와 동일합니다. <code> SearchTwitter </ code>를 호출하기 전에 <code> Authorize </ code> 메서드를 호출 할 필요는 없습니다.

# Description:
SearchSuccessfulEventDescriptions = 이 이벤트는 <code> SearchSuccessful </ code>을 통해 요청 된 검색 결과가 검색 될 때 발생합니다. 결과 목록은 <code> results </ code> 매개 변수 또는 <code> Results </ code> 속성에서 찾을 수 있습니다.

# Description:
SearchSuccessfulEvents = 검색이성공했을때

# Description:
SearchTwitterMethodDescriptions = 주어진 문자열 쿼리에 대해 트위터를 검색합니다. <p> <u> 요구 사항 </ u> : 사용자가 성공적으로 로그인했음을 나타내는 <code> IsAuthorized </ code> 이벤트가 발생한 후에 만 호출해야합니다. Twitter. </ p>

# Description:
SearchTwitterMethods = 트위터검색하기

# Description:
SecondMethodDescriptions = 분 초

# Description:
SecondMethods = 초가져오기

# Description:
SecureProperties = 보안

# Description:
SecurePropertyDescriptions = Bluetooth v2.1 이상이 설치된 장치에서 지원되는 SSP (Simple Secure Pairing)를 호출할지 여부입니다. 내장 Bluetooth 장치로 작업 할 때이 속성을 거짓로 설정해야 할 수 있습니다. Android 2.0-2.2의 경우이 속성 설정이 무시됩니다.

# Description:
SeekToMethodDescriptions = 비디오에서 요청한 시간 (밀리 초 단위)을 찾습니다. 비디오가 일시 정지되어 있으면 표시된 프레임이 탐색에 의해 업데이트되지 않습니다. 플레이어는 비디오의 키 프레임으로 만 이동할 수 있으므로 짧은 간격으로 다른 시간을 찾는 것은 실제로 다른 프레임으로 이동할 수 없습니다.

# Description:
SeekToMethods = 찾아가기

# Description:
SelectionColorProperties = 선택된항목색상

# Description:
SelectionColorPropertyDescriptions = 선택한 항목의 색상입니다.

# Description:
SelectionIndexProperties = 선택된항목번호

# Description:
SelectionIndexPropertyDescriptions = 현재 선택된 항목의 색인으로, 1부터 시작합니다. 항목을 선택하지 않으면 값은 0이됩니다.

# Description:
SelectionProperties = 선택된항목

# Description:
SelectionPropertyDescriptions = 스피너에서 현재 선택된 항목을 반환합니다.

# Description:
Send1ByteNumberMethodDescriptions = 연결된 Bluetooth 장치에 1 바이트 숫자를 전송합니다.

# Description:
Send1ByteNumberMethods = 1바이트숫자보내기

# Description:
Send2ByteNumberMethodDescriptions = 연결된 Bluetooth 장치에 2 바이트 숫자를 보냅니다.

# Description:
Send2ByteNumberMethods = 2바이트숫자보내기

# Description:
Send4ByteNumberMethodDescriptions = 연결된 Bluetooth 장치에 4 바이트 숫자를 보냅니다.

# Description:
Send4ByteNumberMethods = 4바이트숫자보내기

# Description:
SendBallotMethodDescriptions = 완성 된 투표 용지를 웹 서비스로 보냅니다. 응용 프로그램에서 <code> UserId </ code> 및 <code> UserChoice </ code> 속성을 설정해야 호출됩니다.

# Description:
SendBallotMethods = 투표보내기

# Description:
SendBytesMethodDescriptions = 연결된 블루투스 장치에 바이트 값 리스트를 보냅니다.

# Description:
SendBytesMethods = 바이트보내기

# Description:
SendMessageDirectMethodDescriptions = 문자 메시지를 직접 보내기

# Description:
SendMessageDirectMethods = SendMessageDirect

# Description:
SendMessageEvents = 메시지보내기

# Description:
SendMessageMethodDescriptions = 문자 메시지 보내기

# Description:
SendMessageMethods = 메시지보내기

# Description:
SendQueryMethodDescriptions = 쿼리를 퓨전테이블 서버에 보냅니다.

# Description:
SendQueryMethods = 쿼리보내기

# Description:
SendTextMethodDescriptions = 연결된 Bluetooth 장치로 텍스트를 보냅니다.

# Description:
SendTextMethods = 텍스트보내기

# Description:
SensitivityProperties = 민감도

# Description:
SensitivityPropertyDescriptions = 가속도계의 민감도를 나타내는 숫자입니다. 선택 사항은 다음과 같습니다. 1 = 약함, 2 = 보통, 3 = 강함.

# Description:
SensorPortProperties = 센서포트

# Description:
SensorPortPropertyDescriptions = 센서가 연결된 센서 포트입니다.

# Description:
SensorValueChangedEventDescriptions = 센서 값이 변경되면 호출됩니다.

# Description:
SensorValueChangedEventEnabledProperties = 센서변경이벤트여부

# Description:
SensorValueChangedEventEnabledPropertyDescriptions = 센서 값이 변경 될 때 SensorValueChanged 이벤트가 실행되어야하는지 여부입니다.

# Description:
SensorValueChangedEvents = 센서값이변경되었을때

# Description:
ServerCommandFailureEventDescriptions = 서버 명령이 실패했음을 나타냅니다.

# Description:
ServerCommandFailureEvents = 서버명령이실패했을때

# Description:
ServerCommandMethodDescriptions = 게임 서버에 지정된 명령을 보냅니다.

# Description:
ServerCommandMethods = 서버명령보내기

# Description:
ServerCommandSuccessEventDescriptions = 서버 명령이 성공적으로 리턴되었음을 나타냅니다.

# Description:
ServerCommandSuccessEvents = 서버명령이성공했을때

# Description:
ServiceAccountEmailProperties = 서비스계정이메일

# Description:
ServiceAccountEmailPropertyDescriptions = 서비스 계정 인증이 사용 중이면, 서비스 계정 전자 메일 주소입니다.

# Description:
ServiceURLProperties = 서비스URL

# Description:
ServiceURLPropertyDescriptions = 투표 서비스의 URL

# Description:
ServiceUrlProperties = 서비스URL

# Description:
ServiceUrlPropertyDescriptions = 게임 서버의 URL입니다.

# Description:
SetAmbientModeMethodDescriptions = 반사광 없이 센서가 빛의 레벨을 읽도록 합니다.

# Description:
SetAmbientModeMethods = 주변모드로설정하기

# Description:
SetAngleModeMethodDescriptions = 센서의 방향을 측정합니다.

# Description:
SetAngleModeMethods = 각도모드로설정하기

# Description:
SetBackgroundPixelColorMethodDescriptions = 지정된 점의 색상을 설정합니다. 이것은 DrawPoint와 달리 color에 대한 인수를가집니다.

# Description:
SetBackgroundPixelColorMethods = 배경픽셀색상지정하기

# Description:
SetBrickNameMethodDescriptions = 로봇의 브릭 이름을 설정합니다.

# Description:
SetBrickNameMethods = 브릭이름지정하기

# Description:
SetCenterMethodDescriptions = 해당 위도와 경도의 가운데에 맞도록 Rectangle을 이동합니다. 중심에서 가장자리까지 측정 한 사각형의 너비와 높이를 유지합니다.

# Description:
SetCenterMethods = 중심점정하기

# Description:
SetCmUnitMethodDescriptions = 거리를 센티미터로 측정합니다.

# Description:
SetCmUnitMethods = 단위를센치미터로정하기

# Description:
SetColorModeMethodDescriptions = 색상 감지 모드로 들어갑니다.

# Description:
SetColorModeMethods = 색상모드로설정하기

# Description:
SetDateToDisplayFromInstantMethodDescriptions = 날짜 피커 창이 열릴 때 표시 할 날짜를 설정할 수 있습니다.

# Description:
SetDateToDisplayFromInstantMethods = 인스턴트로표시할날짜설정하기

# Description:
SetDateToDisplayMethodDescriptions = 날짜 피커 창이 열릴 때 표시 할 날짜를 설정할 수 있습니다. 월은 1-12, 일자는의 1-31입니다.

# Description:
SetDateToDisplayMethods = 표시할날짜설정하기

# Description:
SetInchUnitMethodDescriptions = 거리를 인치로 측정합니다.

# Description:
SetInchUnitMethods = 단위를인치로설정하기

# Description:
SetInputModeMethodDescriptions = 로봇에 입력 센서를 구성합니다.

# Description:
SetInputModeMethods = 입력모드지정하기

# Description:
SetInstanceMethodDescriptions = InstanceId를 설정하고 지정된 인스턴스를 조인합니다.

# Description:
SetInstanceMethods = 인스턴스설정하기

# Description:
SetLeaderMethodDescriptions = 플레이어에게 playerId에 리더를 설정하도록 서버에 지시합니다. 현재 리더 만 새로운 리더를 설정할 수 있습니다.

# Description:
SetLeaderMethods = 리더설정하기

# Description:
SetLocationMethodDescriptions = 마커의 위치를 설정합니다.

# Description:
SetLocationMethods = 위치설정하기

# Description:
SetOutputStateMethodDescriptions = 로봇의 모터 출력 상태를 설정합니다.

# Description:
SetOutputStateMethods = 출력상태설정하기

# Description:
SetRateModeMethodDescriptions = 센서의 각속도를 측정합니다.

# Description:
SetRateModeMethods = 속도모드로설정하기

# Description:
SetReflectedModeMethodDescriptions = 반사광으로 센서가 빛의 레벨을 읽도록 합니다.

# Description:
SetReflectedModeMethods = 반사광모드로설정하기

# Description:
SetStatusMethods = 상태설정하기

# Description:
SetTimeToDisplayFromInstantMethodDescriptions = 날짜 피커 팝업에 나타나는 시간을 설정합니다. 현재 시간이 기본값으로 표시됩니다.

# Description:
SetTimeToDisplayFromInstantMethods = 인스턴트에서표시할시간설정하기

# Description:
SetTimeToDisplayMethodDescriptions = 날짜 피커 팝업에 표시 할 시간을 설정하십시오. 현재 시간이 기본값으로 표시됩니다.

# Description:
SetTimeToDisplayMethods = 표시할시간설정하기

# Description:
ShakingEventDescriptions = 장치가 흔들 리기 시작했거나 흔들린 채로 있음을 나타냅니다.

# Description:
ShakingEvents = 흔들렸을때

# Description:
ShapeProperties = 모양

# Description:
ShapePropertyDescriptions = 버튼의 모양을 지정합니다 (기본값, 둥근 모양, 직사각형, 타원형). 이미지가 표시되면 모양은 보이지 않습니다.

# Description:
ShareFileMethodDescriptions = 사용 가능한 앱 목록을 표시하고 사용자가 목록에서 하나를 선택할 수있게하여 휴대 전화에 설치된 가능한 모든 응용 프로그램을 통해 파일을 공유합니다. 선택한 앱이 파일이 삽입 된 상태로 열립니다.

# Description:
ShareFileMethods = 파일공유하기

# Description:
ShareFileWithMessageMethodDescriptions = 사용 가능한 앱 목록을 표시하고 사용자가 목록에서 하나를 선택할 수있게하여 휴대 전화에 설치된 가능한 모든 응용 프로그램을 통해 파일과 메시지를 공유합니다. 선택한 앱이 파일 및 메시지가 삽입 된 상태로 열립니다.

# Description:
ShareFileWithMessageMethods = 메시지와함께파일공유하기

# Description:
ShareMessageMethodDescriptions = 사용 가능한 앱 목록을 표시하고 사용자가 목록에서 하나를 선택할 수있게하여 휴대 전화에 설치된 가능한 모든 응용 프로그램을 통해 메시지를 공유합니다. 선택한 앱이 열리 며 메시지가 삽입됩니다.

# Description:
ShareMessageMethods = 메시지공유하기

# Description:
SharingHelpStringComponentPallette = 공유는 앱과 기기에 설치된 다른 앱간에 파일 및 / 또는 메시지를 공유 할 수있는 보이지 않는 구성 요소입니다. 구성 요소에는 제공된 정보를 처리 할 수있는 설치된 앱 목록이 표시되며 사용자가 메일 앱, 소셜 네트워크 앱, 문자 메시지 앱 등과 같이 콘텐츠를 공유하도록 선택할 수 있습니다. <br> 파일 경로는 카메라 또는 ImagePicker와 같은 다른 구성 요소에서 직접 가져올 수 있지만 저장 장치에서 읽기 위해 직접 지정할 수도 있습니다. 다른 장치는 저장 장치를 다르게 취급하므로 예를 들어 <code> Appinventor / assets </ code> 폴더에 arrow.gif라는 파일이있는 경우 시도해 볼 수있는 몇 가지 사항은 다음과 같습니다. <ul> <li > <code> \"file : ///sdcard/Appinventor/assets/arrow.gif\"</ code> </ li> 또는 <li> <code> \"/ storage / Appinventor / assets / arrow.gif\"</ code> > </ li> </ ul>

# Description:
ShowAlertMethodDescriptions = 경고창 보이기

# Description:
ShowAlertMethods = 경고창보이기

# Description:
ShowChooseDialogMethodDescriptions = 사용자가 선택할 수있는 두 개의 단추가있는 대화 상자를 표시합니다. cancelable이 참이면 추가 CANCEL 버튼이 있습니다. 버튼을 누르면 AfterChoosing 이벤트가 발생합니다. AfterChoosing에 대한 \"choice\"매개 변수는 눌린 버튼의 텍스트이거나 CANCEL 버튼이 눌려진 경우 \"Cancel\"입니다.

# Description:
ShowChooseDialogMethods = 선택대화창보이기

# Description:
ShowCompassProperties = 나침반보이기

# Description:
ShowCompassPropertyDescriptions = 사용자 방향에 따라 회전하는 나침반 아이콘을 표시합니다.

# Description:
ShowFeedbackProperties = 피드백보이기

# Description:
ShowFeedbackPropertyDescriptions = 이미지로 사용되는 버튼에 대한 시각적 피드백을 배경으로 표시할지 여부를 지정합니다.

# Description:
ShowFilterBarProperties = 필터보이기

# Description:
ShowFilterBarPropertyDescriptions = ShowFilterBar의 가시성을 설정합니다. 참은 막대를 표시하고 거짓는 막대를 숨 깁니다.

# Description:
ShowInfoboxMethodDescriptions = 해당 형상에 대한 정보창이 표시됩니다.

# Description:
ShowInfoboxMethods = 정보창보이기

# Description:
ShowListsAsJsonProperties = JSON형식으로리스트보기

# Description:
ShowListsAsJsonPropertyDescriptions = 거짓 인 경우 목록은 Lisp 표기법을 사용하여 문자열로 변환됩니다 (예 : (a 1 b2 (cd)와 같이 공백으로 구분 된 기호로 참으로 설정하면 목록이 Json 또는 Python과 같이 나타납니다. 예 : [ \"a\", 1 , \"b\", 2, [ \"c\", \"d\"]]이 속성은 Screen 1에만 나타나며 Screen 1의 값은 모든 스크린의 동작을 결정합니다. JSON / Python 구문이 필요한 경우 Inventor 프로그래머는 명시 적으로이를 참으로 설정해야합니다. 미래의 어느 시점에서 기본적으로이 속성이 참으로 설정된 새 프로젝트가 만들어 지도록 시스템을 변경합니다. App Inventor 프로그래머는 필요하다면 새로운 프로젝트에서 \"거짓\"로 설정할 수도 있습니다.

# Description:
ShowLoadingDialogProperties = 로딩창보이기

# Description:
ShowLoadingDialogPropertyDescriptions = 로딩 대화창을 표시할지 여부

# Description:
ShowMessageDialogMethodDescriptions = 경고창을 닫는 버튼을 표시합니다.

# Description:
ShowMessageDialogMethods = 메시지창보이기

# Description:
ShowPasswordDialogMethodDescriptions = 사용자가 암호를 입력 할 수있는 대화 상자를 표시하고 (입력이 마스킹 됨), AfterTextInput 이벤트가 발생합니다. cancelable이 참이면 추가 CANCEL 버튼이 있습니다. 암호를 입력하면 AfterTextInput 이벤트가 발생합니다. AfterTextInput에 대한 \"응답\"매개 변수는 입력 된 암호이거나 CANCEL 단추가 눌려진 경우 \"취소\"매개 변수입니다.

# Description:
ShowPasswordDialogMethods = 암호입력창보이기

# Description:
ShowProgressDialogMethodDescriptions = 선택적 제목과 메시지가있는 대화 상자를 표시합니다 (원하지 않는 경우 빈 문자열 사용). 이 대화 상자에는 프로그램이 작동 중임을 나타내는 회전 아티팩트가 포함되어 있습니다. 사용자가이를 취소 할 수는 없지만 DismissProgressDialog 블록을 사용하여 App Inventor 프로그램에 의해 해제되어야합니다.

# Description:
ShowProgressDialogMethods = 진행대화창보이기

# Description:
ShowScaleProperties = 축척보기

# Description:
ShowScalePropertyDescriptions = 지도에 축척 참조를 표시합니다.

# Description:
ShowStatusBarProperties = 상태바보이기

# Description:
ShowStatusBarPropertyDescriptions = 상태 표시 줄은 화면의 맨 위에있는 막대입니다. 이 속성은 상태 표시 줄이 표시되는지 여부를보고합니다.

# Description:
ShowTextDialogMethodDescriptions = 사용자가 텍스트를 입력 할 수있는 대화 상자를 표시 한 후 AfterTextInput 이벤트가 발생합니다. cancelable이 참이면 추가 CANCEL 버튼이 있습니다. 텍스트를 입력하면 AfterTextInput 이벤트가 발생합니다. AfterTextInput에 대한 \"응답\"매개 변수는 입력 된 텍스트이거나 CANCEL 단추가 눌려진 경우 \"취소\"매개 변수입니다.

# Description:
ShowTextDialogMethods = 텍스트입력창보이기

# Description:
ShowUserProperties = 사용자보이기

# Description:
ShowUserPropertyDescriptions = 지도에 사용자의 위치를 표시합니다.

# Description:
ShowZoomProperties = 줌보이기

# Description:
ShowZoomPropertyDescriptions = 지도에 확대 / 축소 버튼을 표시합니다.

# Description:
SimpleStepEventDescriptions = 이 이벤트는 원시 걸음이 감지 될 때 실행됩니다.

# Description:
SimpleStepEvents = 간단한걸음이감지되었을때

# Description:
SimpleStepsProperties = 간단한걸음

# Description:
SimpleStepsPropertyDescriptions = 만보계가 시작된 이후에 취해진 간단한 걸음의 수.

# Description:
SizingProperties = 크기조정

# Description:
SizingPropertyDescriptions = 고정으로 설정하면 단일 고정 크기 화면 및 자동 크기 조정을위한 화면 레이아웃이 만들어집니다. 응답 형으로 설정하면 화면 레이아웃은 장치의 실제 해상도를 사용합니다. App Inventor에서 반응 형 디자인에 대한 문서를 참조하십시오. 이 속성은 Screen1에만 표시되며 앱의 모든 화면에 대한 크기 조정을 제어합니다.

# Description:
SliderHelpStringComponentPallette = 슬라이더는 조정 컨트롤을 드래그하여 진행 상태를 표시하는 컴포넌트이다. 조정 컨트롤을 터치하여 왼쪽이나 오른쪽으로 드래그하면 슬라이더 조정 컨트롤의 위치를 바꿀 수 있다. 슬라이더 조정 컨트롤이 드래그되면, 위치 변경됨 이벤트가 발생하여 슬라이더 조정 컨트롤의 위치를 알려준다. 슬라이더의 변경된 조정 컨트롤 위치 값은 텍스트 상자의 글꼴 크기, 공의 반지름과 같은 다른 컴포넌트의 속성을 동적으로 업데이트 하는데 사용됩니다.

# Description:
SoundHelpStringComponentPallette = <p> 사운드 파일을 재생하고 선택적으로 블록 편집기에 지정된 밀리 초 (천분의 1 초) 동안 진동하는 멀티미디어 구성 요소입니다. 재생할 사운드 파일의 이름은 Designer 또는 블록 편집기에서 지정할 수 있습니다. </ p> <p> 지원되는 사운드 파일 형식은 <a href = \"http://developer.android.com/ </ p> <p>이 <code> 사운드 </ code> 구성 요소는 다음과 같은 짧은 사운드 파일에 가장 적합합니다. </ p> <p> <code> Player </ code> 구성 요소는 노래와 같이 더 긴 사운드에 더 효율적입니다. </ p> <p> 소스를 설정 한 후 즉시 사운드를 재생하려고하면 오류가 발생할 수 있습니다 . </ p>

# Description:
SoundRecorderHelpStringComponentPallette = <p> 오디오를 녹음하는 멀티미디어 구성 요소입니다. </ p>

# Description:
SourceProperties = 소스

# Description:
SourcePropertyDescriptions = 동영상의 ''경로''입니다. 대개이 이름은 디자이너에 추가해야하는 비디오 파일의 이름이됩니다.

# Description:
SouthLatitudeProperties = 남위

# Description:
# Description:
SpeakMethodDescriptions = 주어진 메시지를 말합니다.

# Description:
SpeakMethods = 말하기

# Description:
SpeechRateProperties = 말하기속도

# Description:
SpeechRatePropertyDescriptions = TextToSpeech에 대한 SpeechRate를 설정합니다. 값이 작을수록 피치가 느려지고 값이 클수록 값이 커지는 0과 2 사이의 값이어야합니다.

# Description:
SpeechRecognizerHelpStringComponentPallette = 음성 인식 기능을 입력된 말을 글로 변환해주는 컴포넌트입니다.

# Description:
SpeedProperties = 속도

# Description:
SpeedPropertyDescriptions = 스프라이트가 움직이는 속도입니다. 스프라이트는 간격마다이 여러 픽셀을 이동합니다.

# Description:
SpinnerHelpStringComponentPallette = <p> 요소 목록이있는 팝업을 표시하는 스피너 구성 요소입니다. 이러한 요소는 <code> ElementsFromString </ code> 속성을 문자열로 구분 된 연결 (예 : <em> 선택 사항 1, 선택 사항 2, 선택 항목 3 </ em>)으로 설정하여 디자이너 또는 블록 편집기에서 설정할 수 있습니다. 블록 편집기에서 <code> 요소 </ code> 속성을 목록으로 설정하십시오. 스피너는 이미 선택된 첫 번째 항목으로 생성됩니다. 따라서 Picking 이벤트를 생성하지 않습니다. 따라서 첫 번째 Spinner 항목을 \"아래에서 선택 ...\"과 같이 선택하지 않는 것이 유용합니다. </ p>

# Description:
StartActivityMethodDescriptions = 이 ActivityStarter에 해당하는 활동을시작합니다.

# Description:
StartActivityMethods = 액티비티시작하기

# Description:
StartDragEventDescriptions = 사용자가 드래그 작업을 시작했습니다.

# Description:
StartDragEvents = 드래그를시작했을때

# Description:
StartMethodDescriptions = 비디오 재생을 시작합니다.

# Description:
StartMethods = 시작하기

# Description:
StartProgramMethodDescriptions = 로봇에서 이전에 다운로드 한 프로그램의 실행을 시작합니다.

# Description:
StartProgramMethods = 프로그램시작하기

# Description:
StartedMovingEventDescriptions = 움직임이 시작되었을 때 이벤트

# Description:
StartedMovingEvents = 움직임이시작되었을때

# Description:
StartedRecordingEventDescriptions = 레코더가 시작되었으며 중지 될 수 있음을 나타냅니다.

# Description:
StartedRecordingEvents = 녹음이시작되었을때

# Description:
StatusChangedEventDescriptions = 공급자가 손실되거나 새 공급자가 사용되기 시작한 경우와 같이 위치 공급자 서비스의 상태가 변경되었음을 나타냅니다.

# Description:
StatusChangedEvents = 상태가변경되었을때

# Description:
StopAcceptingMethodDescriptions = 들어오는 연결을 수락하지 않습니다.

# Description:
StopAcceptingMethods = 수신정지하기

# Description:
StopBeforeDisconnectProperties = 연결끊기전에중지하기

# Description:
StopBeforeDisconnectPropertyDescriptions = 분리하기 전에 구동 모터를 정지할지 여부.

# Description:
StopDetectionTimeoutProperties = 정지감지시간

# Description:
StopDetectionTimeoutPropertyDescriptions = 유휴 상태 (아무 단계도 감지되지 않음)가 경과 한 후 \"중지됨\"상태가되는 기간 (밀리 초)

# Description:
StopDragEventDescriptions = 사용자가 드래그 작업을 중지했습니다.

# Description:
StopDragEvents = 드래그를멈추었을때

# Description:
StopFollowingMethodDescriptions = 팔로잉을 중지합니다.

# Description:
StopFollowingMethods = 언팔로우

# Description:
StopMethodDescriptions = 비디오가 시작되면 다시 시작하고 비디오가 재생 중이면 일시 중지합니다.

# Description:
StopMethods = 정지

# Description:
StopProgramMethodDescriptions = 로봇에서 현재 실행중인 프로그램의 실행을 중지합니다.

# Description:
StopProgramMethods = 프로그램정지하기

# Description:
StopSoundMethodDescriptions = 로봇에서 소리재생을 정지합니다.

# Description:
StopSoundMethods = 소리정지하기

# Description:
StopSoundPlaybackMethodDescriptions = 사운드 재생을 중지합니다.

# Description:
StopSoundPlaybackMethods = 소리재생정지하기

# Description:
StoppedMovingEventDescriptions = 움직임 정지 이벤트

# Description:
StoppedMovingEvents = 움직임이정지되었을때

# Description:
StoppedRecordingEventDescriptions = 레코더가 중지되었으며 다시 시작할 수 있음을 나타냅니다.

# Description:
StoppedRecordingEvents = 녹음이정지되었을때

# Description:
StoreValueMethodDescriptions = 웹 서비스에 주어진 태그와 값을 저장하도록 요청합니다.

# Description:
StoreValueMethods = 값저장하기

# Description:
StrideLengthProperties = 보폭

# Description:
StrideLengthPropertyDescriptions = 평균 보폭을 미터로 설정합니다.

# Description:
StrokeColorProperties = 윤곽선색상

# Description:
StrokeColorPropertyDescriptions = 지도 형상의 윤곽선 색상입니다.

# Description:
StrokeWidthProperties = 윤곽선두께

# Description:
StrokeWidthPropertyDescriptions = 지도 형상의 윤곽선 두께입니다.

# Description:
SwitchHelpStringComponentPallette = 체크 상자는 사용자 클릭에 따라 선택되거나 해제됩니다. 디자이너 또는 블록 에디터에서 모양을 다양하게 변경할 수 있습니다.

# Description:
SystemTimeMethodDescriptions = 전화기의 내부 시간

# Description:
SystemTimeMethods = 시스템시간가져오기

# Description:
TableArrangementHelpStringComponentPallette = <p> 표 형식으로 표시되어야하는 구성 요소를 배치 할 형식 지정 요소입니다. </ p>

# Description:
TachoCountChangedEventDescriptions = tacho 횟수가 변경되면 호출됩니다.

# Description:
TachoCountChangedEventEnabledProperties = 타코카운트변경이벤트활성화

# Description:
TachoCountChangedEventEnabledPropertyDescriptions = TachoCountChanged 이벤트가 각도가 변경 될 때 발생해야하는지 여부입니다.

# Description:
TachoCountChangedEvents = 타코카운트가변경되었을때

# Description:
TagListEventDescriptions = 알려진 태그 목록을 받았을 때 트리거되는 이벤트입니다. \"GetTagList\"기능과 함께 사용됩니다.

# Description:
TagListEvents = 태그리스트를받았을

# Description:
TagReadEventDescriptions = 새 태그가 감지되었음을 나타냅니다. 현재이 항목은 매니페스트에 지정된 일반 텍스트 태그입니다. Compiler.java를 참조하십시오.

# Description:
TagReadEvents = 태그를읽었을때

# Description:
TagWrittenEventDescriptions = Event for TagWritten

# Description:
TagWrittenEvents = 태그를작성했을때

# Description:
TakePictureMethodDescriptions = 그림을 찍은 다음 AfterPicture 이벤트를 발생시킵니다. useFront가 참인 경우 전면 카메라를 요청하는 의도에 추가를 추가합니다.

# Description:
TakePictureMethods = 사진찍기

# Description:
TapAtPointEventDescriptions = 사용자가 지도상의 한 지점에서 탭했습니다.

# Description:
TapAtPointEvents = 지점에탭했을때

# Description:
TextAlignmentProperties = 텍스트정렬

# Description:
TextAlignmentPropertyDescriptions = 왼쪽, 가운데, 또는 오른쪽

# Description:
TextBoxHelpStringComponentPallette = <p> 사용자가 텍스트를 입력 할 수있는 상자입니다. 초기 또는 사용자가 입력 한 텍스트 값은 <code> 텍스트 </ code> 속성에 있습니다. 빈칸 인 경우 상자에 희미한 텍스트로 나타나는 <code> 힌트 </ code> 속성은 입력 할 내용에 대한 지침을 사용자에게 제공 할 수 있습니다. </ p> <p> <code> MultiLine </ code> > 속성은 텍스트가 둘 이상의 행을 가질 수 있는지 여부를 결정합니다. 한 줄의 텍스트 상자의 경우 사용자가 완료 키를 누르면 키보드가 자동으로 닫힙니다. 여러 줄 텍스트 상자의 키보드를 닫으려면 응용 프로그램에서 HideKeyboard 메서드를 사용하거나 뒤로 키를 누르십시오. </ p> <p> <code> NumbersOnly </ code> 속성은 숫자 입력을 허용하도록 키보드를 제한합니다 텍스트 상자 (<code> TextAlignment </ code>, <code> BackgroundColor </ code> 등)의 모양에 영향을 미치고 사용 가능 여부는 <code> </ p> <p> 텍스트 상자는 일반적으로 <code> Button </ code> 구성 요소와 함께 사용되며 텍스트 입력이 완료되면 사용자가 버튼을 클릭합니다. </ p> <p > 사용자가 입력 한 텍스트를 표시하지 않으려면 대신 <code> PasswordTextBox </ code>를 사용하십시오. </ p>

# Description:
TextColorProperties = 텍스트색상

# Description:
TextColorPropertyDescriptions = 버튼 텍스트의 색상

# Description:
TextInputCanceledEventDescriptions = 사용자가 ShowTextDialog를 취소 할 때 발생하는 이벤트입니다.

# Description:
TextInputCanceledEvents = 텍스트입력을취소했을때

# Description:
TextProperties = 텍스트

# Description:
TextPropertyDescriptions = 버튼에 표시 할 텍스트입니다.

# Description:
TextSizeProperties = 텍스트크기

# Description:
TextSizePropertyDescriptions = 목록뷰 항목의 텍스트 크기입니다.

# Description:
TextToSpeechHelpStringComponentPallette = 음성 변환 기능을 사용하여 글을 말로 바꾸어주는 컴포넌트입니다.

# Description:
TextToWriteProperties = 작성할텍스트

# Description:
# Description:
TextingHelpStringComponentPallette = <code> SendMessage </ code> 메소드가 호출 될 때 <code> Message </ code> 속성에 지정된 문자 메시지를 <code> 전화번호 </ code> / code> 속성을 사용합니다. </ p> <p> <code> ReceivingEnabled </ code> 속성을 1로 설정하면 메시지를받지 못하게됩니다. <code> ReceivingEnabled </ code>가 2로 설정된 경우 메시지는 응용 프로그램이 실행 중일 때만 수신됩니다. 마지막으로 <code> ReceivingEnabled </ code>가 3으로 설정되어 있으면 응용 프로그램이 실행되고 있지 않을 때 응용 프로그램이 <b> 및 </ b> 실행 중일 때 메시지가 수신되고 대기 중이고 알림이 사용자에게 표시됩니다. </ p> <p> 메시지가 도착하면 <code> MessageReceived </ code> 이벤트가 발생하고 발신 번호와 메시지를 제공합니다. </ p> <p>이 구성 요소가 포함 된 앱은 그것은 배경에 있습니다 (즉, 화면에 보이지 않을 때). moreo는 앱이 실행 중이 지 않을지라도 전화에 설치되어있는 한. 앱이 포 그라운드에 있지 않을 때 휴대 전화가 문자 메시지를 수신하면 휴대 전화는 알림 바에 알림을 표시합니다. 알림을 선택하면 앱이 표시됩니다. 앱 개발자는 사용자가 문자 메시지를 무시하도록 ReceivingEnabled를 제어 할 수있는 권한을 사용자에게 부여하려고합니다. </ p> <p> GoogleVoiceEnabled 속성이 참이면 메시지를 보낼 수 있습니다 Google 보이스를 사용하는 Wi-Fi. 이 옵션을 사용하려면 사용자에게 Google 보이스 계정이 있어야하며 모바일 음성 앱이 휴대 전화에 설치되어 있어야합니다. Google 보이스 옵션은 Android 2.0 (Eclair) 이상을 지원하는 휴대 전화에서만 작동합니다. </ p> <p> 전화 번호 (예 : 650-555-1212)를 지정하려면 <code> 전화번호 </ code> 속성을 지정된 자릿수의 텍스트 문자열 (예 : 6505551212)로 매핑합니다. 대시, 점 및 괄호가 포함될 수 있지만 (예 : (650) -555-1212) 무시됩니다. 공백은 포함되지 않을 수 있습니다. </ p> <p> 앱이 전화 번호를 지정하는 또 다른 방법은 저장된 <code> 전화번호Picker </ code> 구성 요소를 사용하여 전화 번호를 선택할 수있게하는 것입니다 전화의 연락처에서. </ p>

# Description:
ThemeProperties = 테마

# Description:
ThemePropertyDescriptions = 응용 프로그램에서 사용하는 테마를 설정합니다.

# Description:
ThumbColorActiveProperties = 활성화섬네일색상

# Description:
# Description:
ThumbColorInactiveProperties = 비활성화섬네일색상

# Description:
# Description:
ThumbEnabledProperties = 섬네일활성화

# Description:
ThumbEnabledPropertyDescriptions = 슬라이더 섬을 표시할지 여부를 설정합니다.

# Description:
ThumbPositionProperties = 섬네일위치

# Description:
ThumbPositionPropertyDescriptions = 슬라이더 섬의 위치를 설정합니다. 이 값이 MaxValue보다 크면 MaxValue와 동일한 값으로 설정됩니다. 이 값이 MinValue보다 작으면 MinValue와 동일한 값으로 설정됩니다.

# Description:
TimeIntervalProperties = 시간간격

# Description:
TimeIntervalPropertyDescriptions = 센서가 위치 업데이트를 보내는 데 사용할 최소 시간 간격 (밀리 초)을 결정합니다. 그러나 위치 업데이트는 전화 위치가 실제로 변경된 경우에만 수신되며 지정된 시간 간격의 사용은 보장되지 않습니다. 예를 들어 시간 간격으로 1000을 사용하면 위치 업데이트가 1000ms보다 빨리 실행되지 않지만 이후에 언제든지 실행될 수 있습니다.

# Description:
TimePickerHelpStringComponentPallette = <p> 버튼을 클릭하면 사용자가 시간을 선택할 수있는 팝업 대화 상자가 열립니다. </ p>

# Description:
TimerAlwaysFiresProperties = 타이머항상작동

# Description:
TimerAlwaysFiresPropertyDescriptions = 참이면 응용 프로그램이 화면에 표시되지 않더라도 실행됩니다.

# Description:
TimerEnabledProperties = 타이머활성화여부

# Description:
TimerEnabledPropertyDescriptions = 참이면 타이머를 발생시킵니다.

# Description:
TimerEventDescriptions = 타이머가 작동할 때

# Description:
TimerEvents = 타이머가작동할때

# Description:
TimerIntervalProperties = 타이머간격

# Description:
TimerIntervalPropertyDescriptions = 밀릿 단위의 타이머 이벤트 간격

# Description:
TinyDBHelpStringComponentPallette = TinyDB는 앱에 데이터를 저장할 수 있는 컴포넌트입니다.  앱 인벤터로 만든 앱들은 매번 실행될 때 마다 초기화됩니다: 만약 변수에 값을 지정해놓고 앱을 종료하면, 그 변수의 값은 다음 번 앱을 실행할 때 사라지게 됩니다. 하지만, TinyDB는  영구적  데이터 저장소입니다. 즉, 매번 앱을 실행할 때 마다 저장해둔 데이터를 사용할 수 있습니다. 예를 들어 게임을 만든다면, 최고 점수를 저장해두고 매번 게임을 플레이 할 때 마다 가져올 수 있습니다.   데이터 항목들은 문자열이며 태그로 구분하여 저장됩니다. 데이터 항목을 저장하려면, 태그를 지정해줘야 합니다. 그러면, 태그로 저장된 데이터를 찾을 수도 있습니다.  앱 마다 하나의 데이터 저장소를 가지게 됩니다. 만약 여러개의 TinyDB 컴포넌트를 가지고 있어도, 모두 같은 데이터 저장소를 사용하게 됩니다. 별도의 저장소를 사용하는 효과를 내려면, 다른 키를 사용하세요. 또한 각각의 앱은 각각의 데이터 저장소를 가지게 됩니다. TinyDB는 다중 스크린 앱의 여러 스크린들 간의 데이터 공유는 가능하지만, 휴대전화의 서로 다른 앱들 사이에 데이터를 전달할 수는 없습니다.  AI 컴패니언을 이용해 앱을 개발 중이라면, 컴패니언을 사용하는 모든 앱들은 같은 TinyDB를 공유하게 됩니다. 앱이 패키징되면 더 이상 공유되지 않습니다. 그러나, 개발하는 동안에는, 새로운 앱 개발을 시작 할때마다, 주의해서 TinyDB를 초기화 해야합니다.

# Description:
TinyWebDBHelpStringComponentPallette = 정보를 저장하고 검색하기 위해 웹 서비스와 통신하는 숨겨진 컴포넌트입니다.

# Description:
TitleProperties = 제목

# Description:
TitlePropertyDescriptions = 사용자가 지도 형상을 클릭 할 때 표시되는 정보 창에  제목입니다.

# Description:
TitleVisibleProperties = 제목보이기

# Description:
TitleVisiblePropertyDescriptions = 제목 표시 줄은 화면의 상단 회색 막대입니다. 이 속성은 제목 표시 줄이 표시되는지 여부를 나타

# Description:
ToggleDirectionMethodDescriptions = 모터의 방향을 토글합니다.

# Description:
ToggleDirectionMethods = 방향뒤바꾸기

# Description:
TokenProperties = 토큰

# Description:
TokenPropertyDescriptions = 이 필드에는 백업 된 Redis 서버에 로그인하는 데 사용되는 인증 토큰이 들어 있습니다. \"DEFAULT\"서버의 경우이 값을 편집하지 마십시오. 시스템이이 값을 입력합니다. 시스템 관리자는 여러 사람의 여러 프로젝트간에 데이터를 공유하는 데 사용할 수있는 특별한 가치를 제공 할 수도 있습니다. 자신의 Redis 서버를 사용하는 경우 서버의 구성에서 비밀번호를 설정하고 여기에 입력하십시오.

# Description:
TopOfRangeProperties = 범위상한선

# Description:
TopOfRangePropertyDescriptions = BelowRange, WithinRange 및 AboveRange 이벤트에 사용되는 범위의 맨 위입니다.

# Description:
TouchDownEventDescriptions = 버튼이 눌려 졌음을 나타냅니다.

# Description:
TouchDownEvents = 터치다운했을때

# Description:
TouchUpEventDescriptions = 버튼 눌림이 해제되었음을 나타냅니다.

# Description:
TouchUpEvents = 터치업했을때

# Description:
TouchedEventDescriptions = 사용자가 스프라이트를 터치 한 다음 손가락을 즉시 들어 올리면 터치의 (x, y) 위치를 캔버스의 왼쪽 위를 기준으로 제공합니다.

# Description:
TouchedEvents = 터치했을때

# Description:
TrackColorActiveProperties = 활성화트랙색상

# Description:
TrackColorActivePropertyDescriptions = 전원을 켤 때 토글 트랙의 색상

# Description:
TrackColorInactiveProperties = 비활성화트랙색상

# Description:
TrackColorInactivePropertyDescriptions = 전원을 껐을 때 토글 트랙의 색상

# Description:
TurnClockwiseIndefinitelyMethodDescriptions = 좌측 구동 모터를 전진시키고 우측 구동 모터를 후방으로 동력으로써 로봇을 시계 방향으로  최대 전력의 일정 비율로 회전합니다.

# Description:
TurnClockwiseIndefinitelyMethods = 계속시계방향으로돌기

# Description:
TurnCounterClockwiseIndefinitelyMethodDescriptions = 오른쪽 구동 모터를 전진시키고 왼쪽 구동 모터를 후진시킴으로써 최대 출력의 지정된 비율로 로봇을 반 시계 방향으로 계속해서 돌립니다.

# Description:
TurnCounterClockwiseIndefinitelyMethods = 계속시계반대방향으로돌기

# Description:
TutorialURLProperties = 튜토리얼URL

# Description:
TutorialURLPropertyDescriptions = 프로젝트를 편집하는 동안 사용할 자습서 사이드 바 URL입니다. 학습 도구로 사용됩니다.

# Description:
TweetMethodDescriptions = 이렇게하면 지정한 텍스트가있는 로그인 사용자로 트윗이 전송되고 160자를 초과하면 트림됩니다. <p> <u> 요구 사항 </ u> : 사용자가 트위터에 성공적으로 로그인했음을 나타내는 <code> IsAuthorized </ code> 이벤트가 발생한 후에 만 호출해야합니다. </ p>

# Description:
TweetMethods = 트윗하기

# Description:
TweetWithImageMethodDescriptions = 이렇게하면 지정된 텍스트와 업로드 할 이미지의 경로가있는 로그인 한 사용자로 트윗을 전송하며, 160자를 넘으면 트리밍됩니다. 이미지가 발견되지 않거나 유효하지 않은 경우 텍스트 만 트윗됩니다. <p> <u> 요구 사항 </ u> : <code> IsAuthorized </ code> 이벤트가 발생한 후에 만 호출해야합니다. 사용자가 성공적으로 트위터에 로그인했습니다. </ p>

# Description:
TweetWithImageMethods = 이미지와함께트윗하기

# Description:
TwitPic_API_KeyProperties = TwitPic_API_키

# Description:
TwitPic_API_KeyPropertyDescriptions = TwitPic에서 제공하는 이미지 업로드 용 API 키.

# Description:
TwitterHelpStringComponentPallette = <a href=\"http://www.twitter.com\" target=\"_blank\"> Twitter </a>와 통신 할 수있는 보이지 않는 구성 요소입니다. 사용자가 트위터 계정에 로그인하면 <code> IsAuthorized </ code> 이벤트에 의해 승인이 성공적으로 확인되었습니다. <ul> <li> 트위터에서 트윗이나 라벨을 검색합니다 (< (<code> Tweet </ code>) </ li> <li> 이미지로 트윗 보내기 (<code> TweetWithImage </ code>) </ li> </ li> <li> 특정 사용자 (<code> DirectMessage </ code>)에게 메시지 전달 </ li> <li> 로그인 한 사용자에게 가장 최근 메시지 (<code> RequestDirectMessages < / code>) </ li> <li> 특정 사용자 (<code> 팔로우 </ code>) </ li> (<code> RequestFollowers </ code>) </ li> <li> 로그인 한 사용자 (<code> RequestFollowers </ code>) 다음 사용자 목록 가져 오기 </ li> > RequestFriendTimeline </ code>) </ li> <li> 로그인 한 사용자의 가장 최근 언급을 얻으십시오 (<code> RequestMentions </ code> >) </ li> </ ul> </ p> <p> http://twitter.com/oauth_clients/new에서 앱과 관련된 Twitter 인증을위한 소비자 키와 소비자 비밀번호를 받아야합니다

# Description:
TypeProperties = 유형

# Description:
TypePropertyDescriptions = 지도 형상의 유형입니다. 사각형의 경우 \"Rectangle\"텍스트를 반환합니다.

# Description:
UnauthenticateMethodDescriptions = 컴패니언에 문제가 있고 다른 Firebase 계정으로 전환하는 경우이 기능을 사용하여 내부 Firebase 캐시를 지울 수 있습니다. 블록 편집기에서이 블록에 대해 \"Do It\"기능을 사용할 수 있습니다. 참고 : 일반적으로 응용 프로그램의 일부로이 블록을 사용할 필요는 없습니다.

# Description:
UnauthenticateMethods = 인증취소하기

# Description:
UnitProperties = 단위

# Description:
UnitPropertyDescriptions = 거리 단위. \"cm\"또는 \"inch\"중 하나 일 수 있습니다.

# Description:
UnspecifiedPropertyCategory = 불특정

# Description:
UriDecodeMethodDescriptions = 인코딩 된 텍스트 값을 디코딩합니다.

# Description:
UriDecodeMethods = URI디코딩하기

# Description:
UriEncodeMethodDescriptions = 주어진 텍스트 값을 인코딩하여 URL에서 사용할 수 있도록합니다.

# Description:
UriEncodeMethods = URI인코딩하기

# Description:
UrlProperties = URL

# Description:
UrlPropertyDescriptions = 웹 요청의 URL입니다.

# Description:
UseExternalScannerProperties = 외부스캐너사용

# Description:
UseExternalScannerPropertyDescriptions = App Inventor가 \"Bar Code Scanner\"와 같은 외부 스캐닝 프로그램을 찾아 사용할 경우

# Description:
UseFrontProperties = 전면카메라사용

# Description:
UseFrontPropertyDescriptions = 전면 카메라를 사용해야하는지 여부를 지정합니다 (사용 가능한 경우). 장치에 전면 카메라가없는 경우이 옵션은 무시되고 카메라가 정상적으로 열립니다.

# Description:
UseGPSProperties = GPS사용

# Description:
# Description:
UseSSLProperties = SSL사용

# Description:
UseSSLPropertyDescriptions = SSL을 사용하여 CloudDB / Redis 서버와 통신하려면 참으로 설정하십시오. \"DEFAULT\"서버의 경우이 값을 참으로 설정해야합니다.

# Description:
UseServiceAuthenticationProperties = 서비스인증사용

# Description:
UseServiceAuthenticationPropertyDescriptions = 인증에 서비스 계정을 사용해야하는지 여부를 나타냅니다.

# Description:
UserChoiceProperties = 사용자선택

# Description:
UserChoicePropertyDescriptions = <code> SendBallot </ code> 전에 서버에 보낼 투표 선택이 호출됩니다. 이것은 <code> BallotOptions </ code> 중 하나 여야합니다.

# Description:
UserEmailAddressProperties = 사용자이메일주소

# Description:
UserEmailAddressPropertyDescriptions = 이 기기와 연결된 이메일 주소입니다. 이 속성은 더 이상 사용되지 않으며 항상 빈 텍스트 값을 반환합니다.

# Description:
UserEmailAddressSetEventDescriptions = 사용자 이메일 주소가 설정되었음을 나타냅니다.

# Description:
UserEmailAddressSetEvents = 사용자이메일주소를설정했을때

# Description:
UserIdProperties = 사용자아이디

# Description:
UserIdPropertyDescriptions = 투표와 함께 투표 서버로 보내지는 유권자를 나타내는 텍스트. 이것은 <code> SendBallot </ code>이 호출되기 전에 설정되어야합니다.

# Description:
UserLatitudeProperties = 사용자위도

# Description:
UserLatitudePropertyDescriptions = ShowUser가 활성화 된 경우 사용자의 위도를 반환합니다.

# Description:
UserLongitudeProperties = 사용자경도

# Description:
UserLongitudePropertyDescriptions = ShowUser가 활성화 된 경우 사용자의 경도를 반환합니다.

# Description:
UsernameProperties = 사용자이름

# Description:
UsernamePropertyDescriptions = 권한이 부여 된 사용자의 사용자 이름. 권한이 부여 된 사용자가 없으면 비워 둡니다.

# Description:
UsesLocationProperties = 위치정보사용

# Description:
UsesLocationPropertyDescriptions = 응용 프로그램에 Javascript Geolocation API 사용 권한을 부여할지 여부. 이 속성은 디자이너에서만 사용할 수 있습니다.

# Description:
ValueStoredEventDescriptions = StoreValue 서버 요청이 성공했음을 나타내는 이벤트입니다.

# Description:
ValueStoredEvents = 값이저장되었을때

# Description:
VersionCodeProperties = 버전코드

# Description:
VersionCodePropertyDescriptions = Google Play 스토어 용으로 새 Android 앱 패키지 파일 (APK)을 만들 때마다 증분되어야하는 정수 값입니다.

# Description:
VersionNameProperties = 버전이름

# Description:
VersionNamePropertyDescriptions = Google Play 스토어 사용자가 여러 버전의 앱을 구분할 수 있도록 변경할 수있는 문자열입니다.

# Description:
VerticalArrangementHelpStringComponentPallette = <p> 아래에 표시되어야하는 구성 요소를 배치 할 형식 지정 요소입니다. (첫 번째 하위 구성 요소는 맨 위에 저장되고 두 번째 하위 구성 요소는 그 아래에 저장됩니다.) 구성 요소를 옆에 표시하려면 대신 <code> HorizontalArrangement </ code>를 사용하십시오. </ p>

# Description:
VerticalScrollArrangementHelpStringComponentPallette = <p> 아래에 표시되어야하는 구성 요소를 배치 할 형식 지정 요소입니다. (첫 번째 하위 구성 요소는 맨 위에 저장되고 두 번째 하위 구성 요소는 그 아래에 저장됩니다.) 구성 요소를 옆에 표시하려면 대신 <code> HorizontalArrangement </ code>를 사용하십시오. </ p> <p>이 버전 스크롤 가능하다

# Description:
VibrateMethodDescriptions = 지정된 밀리 초 동안 진동합니다.

# Description:
VibrateMethods = 진동하기

# Description:
VideoPlayerHelpStringComponentPallette = 비디오를 재생할 수있는 멀티미디어 구성 요소. 응용 프로그램이 실행되면 VideoPlayer가 화면 상에 사각형으로 표시됩니다. 사용자가 사각형을 터치하면 컨트롤이 재생 / 일시 중지, 앞으로 건너 뛰기, 동영상 내에서 뒤로 건너 뛰기로 표시됩니다. 응용 프로그램은 <code> 시작 </ code>, <code> 일시 중지 </ code> 및 <code> SeekTo </ code> 메서드를 호출하여 동작을 제어 할 수도 있습니다. <p> 동영상 파일은 3GPP (.3gp) 또는 MPEG-4 (.mp4) 형식이어야합니다. 올바른 형식에 대한 자세한 내용은 <a href=\"http://developer.android.com/guide/appendix/media-formats.html\" target=\"_blank\"> Android 지원 미디어 형식 </a>을 참조하십시오. Android 용 App Inventor는 1MB 미만의 비디오 파일 만 허용하며 미디어 (비디오, 오디오 및 사운드) 파일 모두에 사용할 수있는 것은 아니지만 응용 프로그램의 전체 크기를 5MB로 제한합니다. 미디어 파일이 너무 크면 응용 프로그램을 패키징하거나 설치할 때 오류가 발생할 수 있습니다.이 경우 미디어 파일 수나 파일 크기를 줄여야합니다. Windows Movie Maker 및 Apple iMovie와 같은 대부분의 비디오 편집 소프트웨어를 사용하면 비디오를 축소하거나 비디오를보다 압축 된 형식으로 다시 인코딩하여 비디오 크기를 줄일 수 있습니다. </ p> <p> 원본은 스트리밍 비디오를 가리키는 URL로 보내지 만 URL은 비디오를 재생하는 프로그램이 아니라 비디오 파일 자체를 가리켜 야합니다.

# Description:
ViewContactMethodDescriptions = URI를 통해 연락처보기

# Description:
ViewContactMethods = 연락처보기

# Description:
VisibleProperties = 보이기여부

# Description:
VisiblePropertyDescriptions = 구성 요소를 화면에 표시할지 여부를 지정합니다. 컴퍼넌트가 표시되고있는 경우는 값이 참으로, 비 표시의 경우는 거짓가됩니다.

# Description:
VolumeProperties = 볼륨

# Description:
VolumePropertyDescriptions = 볼륨을 0에서 100 사이의 숫자로 설정합니다. 0보다 작은 값은 0으로 처리되고 100보다 큰 값은 100으로 처리됩니다.

# Description:
VotingHelpStringComponentPallette = 투표 구성 요소는 웹 서비스와 통신하여 투표 용지를 검색하고 사용자 투표를 되돌려 보냅니다. <p> 애플리케이션은 <code> Initialize </ code> 이벤트 핸들러에서 <code> RequestBallot </ code> 메소드를 호출하여 웹 서비스 (< code> ServiceURL </ code> 속성). 웹 서비스의 응답에 따라 시스템은 <ol> <li> <code> GotBallot </ code> 중 투표 질문과 옵션이 검색되었으며 속성 <code> 투표 결과가 없음을 나타내는 </ li> <li> <code> NoOpenPoll </ code> 서비스가 합법적 인 응답을 제공하지 못했고 오류 메시지를 제공하지 않음을 나타내는 <code> WebServiceError </ code>를 추가로 선택해야합니다. </ li> </ ol> </ p> <p> <code> BallotOptions </ code> 중 하나를 선택하고 <code> UserChoice </ code> 속성을 해당 선택 항목으로 설정하십시오. <code> UserChoice </ code> 및 <code> UserId </ code>가 설정되면 응용 프로그램은 사용자가 투표 할 사용자를 지정하도록 <code> UserId </ code> 응용 프로그램은이 정보를 웹 서비스에 보내기 위해 <code> SendBallot </ code>을 호출 할 수 있습니다. 서비스가 투표를 성공적으로 받으면 <code> GotBallotConfirmation </ code> 이벤트가 발생합니다. 그렇지 않으면 적절한 오류 메시지와 함께 <code> WebServiceError </ code> 이벤트가 발생합니다. </ p>

# Description:
WalkStepEventDescriptions = 이 이벤트는 걸음이 감지 될 때 실행됩니다. 걸음은 전진 동작과 관련이 있는 걸음입니다.

# Description:
WalkStepEvents = 걸음이감지되었을때

# Description:
WalkStepsProperties = WalkSteps

# Description:
WalkStepsPropertyDescriptions = 만보계가 시작된 이후에 걸은 걸음 수.

# Description:
WebHelpStringComponentPallette = HTTP GET, POST, PUT, DELETE 요청을 보내는 보이지 않는 컴포넌트입니다.

# Description:
WebRTCProperties = 웹RTC

# Description:
WebRTCPropertyDescriptions = 참이면 WebRTC를 사용하여 서버와 통신합니다.

# Description:
WebServiceErrorEventDescriptions = 웹 서비스와의 통신에서 오류가 발생했음을 나타내는 이벤트입니다.

# Description:
WebServiceErrorEvents = 웹서비스오류가발생했을때

# Description:
WebViewStringChangeEventDescriptions = JavaScript가 AppInventor.setWebViewString을 호출하면이 이벤트가 실행됩니다.

# Description:
WebViewStringChangeEvents = 웹뷰스트링이변경되었을때

# Description:
WebViewStringProperties = 웹뷰스트링

# Description:
WebViewStringPropertyDescriptions = WebView에서 window.AppInventor 객체로 자바 스크립트를 통해 볼 수있는 String을 가져옵니다.

# Description:
WebViewerHelpStringComponentPallette = 웹 페이지를보기위한 구성 요소. 홈 URL은 디자이너 또는 블록 편집기에서 지정할 수 있습니다. 탭을 클릭하면 링크를 따라갈 수 있도록 설정하고 사용자는 웹 양식을 작성할 수 있습니다. 경고 : 이것은 완전한 브라우저가 아닙니다. 예를 들어 휴대 전화의 하드웨어 키를 누르면 브라우저 기록으로 돌아 가지 않고 앱이 종료됩니다. <p /> WebViewer.WebViewString 속성을 사용하면 Webviewer에서 실행중인 앱과 자바 스크립트 코드 사이에서 통신 할 수 있습니다 페이지. 응용 프로그램에서 WebViewString을 가져오고 설정합니다. WebViewer에는 methoods </ em getWebViewString () </ em> 및 <em> setWebViewString (text) </ em>을 사용하여 window.AppInventor 객체를 참조하는 자바 스크립트가 포함됩니다. <p /> 예를 들어 WebViewer가 Javascript 명령을 포함하는 페이지로 열리면 <br /> <em> document.write ( \"대답은\"+ window.AppInventor.getWebViewString ()); </ em> br /> WebView.WebVewString을 \"hello\"로 설정하면 웹 페이지에 </ br> <em> 답변이 안녕하세요 </ em>가 표시됩니다. <br /> 웹 페이지에 명령을 실행하는 자바 스크립트가 포함되어 있으면 <br /> <em> window.AppInventor.setWebViewString ( \"hello from Javascript\") </ em>, <br /> WebViewString 속성 값 <br /> <em> Javascript의 안녕하세요 </ em>가됩니다.

# Description:
WeekdayMethodDescriptions = 1 (일요일)에서 7 (토요일)까지의 숫자로 표시되는 요일

# Description:
WeekdayMethods = 요일가져오기

# Description:
WeekdayNameMethodDescriptions = 요일의 이름

# Description:
WeekdayNameMethods = 요일이름가져오기

# Description:
WestLongitudeProperties = 서경

# Description:
# Description:
WheelDiameterProperties = 바퀴지름

# Description:
WheelDiameterPropertyDescriptions = 회전에 사용되는 바퀴의 지름.

# Description:
WidthPercentProperties = 너비퍼센트

# Description:
WidthPercentPropertyDescriptions = 컴퍼넌트의 가로 폭을, 부모 컴퍼넌트의 폭의 퍼센티지로 지정합니다.

# Description:
WidthProperties = 너비

# Description:
WidthPropertyDescriptions = 컴퍼넌트의 수평 폭을 픽셀 단위로 지정합니다.

# Description:
WithinRangeEventDescriptions = 거리가 범위 내에 있습니다.

# Description:
WithinRangeEventEnabledProperties = 가능한이벤트범위내

# Description:
WithinRangeEventEnabledPropertyDescriptions = Distance가 BottomOfRange와 TopOfRange 사이에있을 때 WithinRange 이벤트가 실행되어야하는지 여부입니다.

# Description:
WithinRangeEvents = 범위내에있을때

# Description:
WriteTypeProperties = 쓰기타입

# Description:
# Description:
XAccelProperties = X가속도

# Description:
# Description:
XAngularVelocityProperties = X각속도

# Description:
XAngularVelocityPropertyDescriptions = X 축 주위의 각속도 (초당 각도)입니다.

# Description:
XMLTextDecodeMethodDescriptions = 주어진 XML 문자열을 디코딩하여 리스트 구조를 만듭니다. 자세한 정보는 App Inventor 설명서의 \"기타 주제, 메모 및 세부 사항\"을 참조하십시오.

# Description:
XMLTextDecodeMethods = XML텍스트디코딩하기

# Description:
XProperties = X

# Description:
XPropertyDescriptions = 스프라이트의 왼쪽 가장자리의 가로 좌표입니다. 스프라이트가 오른쪽으로 이동함에 따라 증가합니다.

# Description:
XmlTextParams = XML텍스트

# Description:
YAccelProperties = Y가속도

# Description:
# Description:
YAngularVelocityProperties = Y각속도

# Description:
YAngularVelocityPropertyDescriptions = Y 축 주위의 각속도 (초당 각도)입니다.

# Description:
YProperties = Y

# Description:
YPropertyDescriptions = 스프라이트 맨 위의 수직 좌표로, 스프라이트가 아래로 이동함에 따라 증가합니다.

# Description:
YandexTranslateHelpStringComponentPallette = 단어나 문장을 다른 언어로 번역하려면 이 컴포넌트를 사용하세요. 이 컴포넌트는 Yandex.Translate 서비스에 요청을 보내므로, 인터넷에 연결되어야 사용할 수 있습니다. 원래 언어와 번역하고자 하는 언어를 두 글자의 언어 코드를 사용하여 소스-대상 형식으로 입력하세요. 예를 들어 ”en-es”는 영어에서 스페인어로, \"es-ru”는 스페인어에서 러시아어로 번역합니다. 소스 언어를 지정하지 않으면, 서비스는 자동으로 소스 언어를 알아내려합니다. 만약 “es”라고만 입력하면 소스 언어는 자동으로 알아내어 스페인어로 번역합니다.이 컴포넌트는 Yandex 번역 서비스를 통해 운영됩니다. 자세한 내용은 http://api.yandex.com/translate/ 를 참고하세요. 이용 가능한 언어, 언어 코드, 상태 코드의 의미를 알 수 있습니다. 참고: 번역은 백그라운드에서 비동기로 진행됩니다. 번역이 완료되면, “번역 받음” 이벤트가 실행됩니다.

# Description:
YearMethodDescriptions = 연도

# Description:
YearMethods = 연도가져오기

# Description:
YearProperties = 년

# Description:
YearPropertyDescriptions = 날짜 피커를 사용하여 마지막으로 선택한 연도

# Description:
ZAccelProperties = Z가속도

# Description:
# Description:
ZAngularVelocityProperties = ZAngularVelocity

# Description:
ZAngularVelocityPropertyDescriptions = Z 축을 중심으로 한 각속도 (초당 각도)입니다.

# Description:
ZProperties = Z

# Description:
ZPropertyDescriptions = 스프라이트의 보여지는 순서입니다. 낮은 번호의 레이어 앞에 더 높은 번호의 레이어가 배치됩니다.

# Description:
ZoomChangeEventDescriptions = 사용자가 지도의 확대 / 축소 수준을 변경했습니다.

# Description:
ZoomChangeEvents = 줌이변경되었을때

# Description:
ZoomLevelProperties = 줌레벨

# Description:
ZoomLevelPropertyDescriptions = 지도의 확대 / 축소 수준입니다. ZoomLevel의 유효한 값은 타일 공급자 및지도의 위도와 경도에 따라 다릅니다. 예를 들어, 확대 / 축소 수준은 타일 저장 공간을 절약하기 위해 밀도가 높은 도심보다 더 제한되어 있으므로 유효한 값은 대양의 경우 1-7, 도시의 경우 1-18 일 수 있습니다. 확대 / 축소 수준이 너무 높아서 서버가 지원할 수없는 경우 타일 공급자가 경고 또는 오류 타일을 보낼 수 있습니다.

# Description: Label of the link for About
aboutMenuItem = 소개

# Description:
accelerometerSensorComponentPallette = 가속도센서

# Description:
accountDisabledMessage = 귀하의 계정은 사용중지되었습니다

# Description:
activityStarterComponentPallette = 액티비티스타터

# Description: Text on "Add..." button
addButton = 파일 올리기 ...

# Description: Label of the button for adding a new screen
addFormButton = 스크린 추가 ...

# Description: Error message reported when adding a form failed on the server.
addFormError = 서버 오류: 폼을 추가할 수 없습니다. 나중에 다시 시도해주세요!

# Description: Text on 'Add' button to continue with screen creation.
addScreenButton = 추가

# Description:
addressParams = 주소

# Description: Label of the button leading to admin functionality
adminTabName = 관리자

# Description: Error message when user tries to upload aia file as media asset
aiaMediaAsset = 이 파일을 사용하려면, 프로젝트 > 프로젝트 불러오기 (.aia)를 이용해 주세요 ...

# Description: URL for more info on using aia files properly
aiaMediaAssetHelp = http://appinventor.mit.edu/explore/ai2/share.html

# Description: Error message when user tries to upload aia file as media asset
aiaMediaAssetTitle = 오류 : .aia 파일을 미디어 자산으로 업로드 할 수 없습니다.

# Description:
altitudeParams = 고도

# Description:
angleParams = 각도

# Description:
animTypeParams = 애니메이션유형

# Description: Label on any-component branch of block selector tree
anyComponentLabel = 모든 컴포넌트

# Description:
apkInstalledToPhone = APK 파일이 스마트폰에서 설치됩니다.

# Description:
apkSavedToComputer = APK 파일이 다운로드 폴더에 저장됩니다.

# Description:
argumentsParams = 인자

# Description: Caption for asset list box.
assetListBoxCaption = 미디어

# Description: Caption and summary for Automatic choice
automaticCaption = 자동

# Description:
azimuthParams = 방위각

# Description: Text on 'Back' button to go back to the previous page of the wizard.
backButton = 뒤로

# Description: System error message for a bad alignment property editor
badAlignmentPropertyEditorForArrangement = 시스템 오류: 수평 또는 수직 배치의 잘못된 에디터 속성 값.

# Description: Default message for bad value for Horizontal Alignment
# 0=componentName
badValueForHorizontalAlignment = 시스템 오류: 수평배치 (레이아웃) 잘못된 값 - {0}

# Description: Default message for bad value for Vartical Alignment
# 0=componentName
badValueForVerticalAlignment = 시스템 오류: 수직배치 (레이아웃) 잘못된 값 - {0}

# Description:
ballComponentPallette = 공

# Description:
barcodeScannerComponentPallette = 바코드스캐너

# Description: Title of barcode dialog.
# 0=projectName
barcodeTitle = 바코드 링크 for {0}

# Description: Warning in barcode dialog.
# 0=aTagStart, 1=aTagEnd
barcodeWarning = 노트: 이 바코드는 2시간 동안만 유효합니다. 다른 기기들과 앱을 공유하는 방법은 {0}  FAQ {1}의 정보를 참고하세요.

# Description:
bashWarningDialogButtonContinue = 멀티 세션으로 계속하기

# Description:
bashWarningDialogButtonNo = 멀티 세션 사용하지 않기

# Description:
bashWarningDialogMessage = <p> <font color = red> 경고 : </ font>이 계정에 대해 두 번째 App Inventor 세션이 열렸습니다. 두 세션 모두 계속 진행할 수 있지만 둘 이상의 세션에서 App Inventor를 동시에 사용하면 App Inventor 서버에서 복구 할 수없는 방식으로 블록이 손실 될 수 있습니다. </ p> <p> 동일한 계정에서 여러 세션을 엽니 다. 그러나 이런 방식으로 작업해야한다면 정기적으로 프로젝트를 로컬 컴퓨터로 내 보내야합니다. 그러면 App Inventor 서버와 별개로 백업 복사본을 얻을 수 있습니다. 프로젝트를 내보내려면 프로젝트 메뉴에서 \"내보내기\"를 사용하십시오. </ p>

# Description:
bashWarningDialogText = 계속해서 멀티 세션을 사용하시겠습니까?

# Description: Text for color choice 'Black'
blackColor = 검정

# Description:
blackTitleTheme = 검정 타일 텍스트

# Description: Caption for block selector box.
blockSelectorBoxCaption = 블록

# Description: Label of the button for opening the blocks editor when the it is already open
blocksEditorIsOpenButton = 블록 에디터가 열려있음

# Description: Tab name for blocks editor
# 0=formName
blocksEditorTabName = {0} 블록

# Description: Message when blocks fail to load properly
# 0=formName
blocksLoadFailure = 스크린{0} 의 블록을 올바르게 불러오지 못했습니다. 이 문제가 해결되기 전에는 블록 에디터에서 편집할 수 없습니다.

# Description: Message indicating that blocks changes were not saved
# 0=formName
blocksNotSaved = 블록 영역을 올바르게 불러오지 못했습니다. 스크린 {0} 의 블록에 대한 변경사항은 저장되지 않습니다.

# Description:
blocksTruncatedDialogButtonHTML = %1 초만 기다려주세요...

# Description:
blocksTruncatedDialogButtonNoSave = 이전 버전을 다시 불러옵니다.

# Description:
blocksTruncatedDialogButtonSave = 빈 스크린을 저장합니다

# Description:
blocksTruncatedDialogMessage = <p> <b> %1 </ b>에 모든 블록이 제거 된 것으로 보입니다. </ p> <p> <ul> <li> 빈 화면을 저장하면 모든 블록이 영구적으로 사라집니다. </ li> <li> 또는 이전에 저장 한 프로젝트 버전을 복원 할 수 있습니다. </ li> </ ul> </ p>

# Description:
blocksTruncatedDialogText = 블록 작업공간이 비어있습니다

# Description: Text for color choice 'Blue'
blueColor = 파랑

# Description:
bluetoothClientComponentPallette = 블루투스클라이언트

# Description:
bluetoothServerComponentPallette = 블루투스서버

# Description:
bottomParams = 아래

# Description: Error message reported when building a target failed on the server because of a network error.
buildError = 서버 오류: 대상을 빌드할 수 없습니다. 나중에 다시 시도해주세요!

# Description: Error message reported when a build failed due to an error in the build pipeline.
buildFailedError = 빌드 실패!

# Description: Message shown in the build output panel when a build is requested.
# 0=projectName, 1=time
buildRequestedMessage = {0}의 빌드가 {1} 번 요청되었습니다.

# Description: Error message reported when the build server is temporarily too busy to accept a build request.
buildServerBusyError = 빌드 서버가 지금 매우 혼잡합니다. 몇 분후에 다시 시도해주세요.

# Description: Error message reported when the build server is running a different version of the App Inventor code.
buildServerDifferentVersion = 빌드 서버가 현재 버전의 앱 인벤터와 호환되지 않습니다.

# Description: Label of the button leading to build related cascade items
buildTabName = 빌드

# Description:
buildingApk = APK 빌드하기

# Description: Label on built-in-blocks branch of block selector tree
builtinBlocksLabel = 공통 블록

# Description: Label on built-in-Colors-blocks branch of block selector tree
builtinColorsLabel = 색상

# Description: Label on built-in-Control-blocks branch of block selector tree
builtinControlLabel = 제어

# Description: Label on built-in-Lists-blocks branch of block selector tree
builtinListsLabel = 리스트

# Description: Label on built-in-Logic-blocks branch of block selector tree
builtinLogicLabel = 논리

# Description: Label on built-in-Math-blocks branch of block selector tree
builtinMathLabel = 수학

# Description: Label on built-in-Procedures-blocks branch of block selector tree
builtinProceduresLabel = 함수

# Description: Label on built-in-Text-blocks branch of block selector tree
builtinTextLabel = 텍스트

# Description: Label on built-in-Variables-blocks branch of block selector tree
builtinVariablesLabel = 변수

# Description:
button1TextParams = 버튼1텍스트

# Description:
button2TextParams = 버튼2텍스트

# Description:
buttonComponentPallette = 버튼

# Description: Edit Profile Button, only seen by profile owner
buttonEditProfile = 프로필 수정

# Description: Label of the Send Email of reportlist
buttonSendEmail = 이메일 보내기

# Description:
buttonTextParams = 버튼텍스트

# Description: Update Profile Button, only seen by profile owner
buttonUpdateProfile = 프로필 업데이트

# Description:
camcorderComponentPallette = 캠코더

# Description:
cameraComponentPallette = 카메라

# Description: Label of the button for canceling the blocks editor launch
cancelBlocksEditorButton = 블록 에디터 여는 중... (클릭하여 취소)

# Description: Text on "Cancel" button.
cancelButton = 취소

# Description: Text on 'Dont Add' button to dismiss screen creation.
cancelScreenButton = 추가하지 마세요

# Description:
cancelableParams = 취소가능여부

# Description:
canvasComponentPallette = 캔버스

# Description: Text for text alignment choice 'center'
centerTextAlignment = 가운데

# Description:
centerXParams = 중심X

# Description:
centerYParams = 중심Y

# Description:
centroidParams = 중심기준

# Description:
centroidsParams = 중심기준

# Description:
checkBoxComponentPallette = 체크박스

# Description: Label of the button for checkpoint
checkpointButton = 체크포인트 ...

# Description: Name of Checkpoint menuitem
checkpointMenuItem = 체크포인트

# Description: Label in front of new name in checkpoint dialog.
checkpointNameLabel = 체크포인트 이름:

# Description: Title of checkpoint dialog.
# 0=projectName
checkpointTitle = 체크포인트 - {0}

# Description:
choiceParams = 선택된항목

# Description: Message shown when there is no current file editor to switch to
chooseProject = 불러올 프로젝트를 선택하거나 새로운 프로젝트를 생성해주세요.

# Description:
circleComponentPallette = 원

# Description:
classicTheme = 클래식

# Description: Text on 'Clear' button
clearButton = 지우기

# Description:
clipParams = 클립

# Description:
clockComponentPallette = 시계

# Description:
cloudDBComponentPallette = 클라우드DB

# Description: Caption for context menu item for minimizing the box.
cmMinimize = 접기

# Description: Caption for context menu item for resizing the box.
cmResize = 크기 조정…

# Description: Caption for context menu item for restoring a minimized box.
cmRestore = 펼치기

# Description:
colorCodeParams = 색상코드

# Description:
colorNameParams = 색상이름

# Description:
colorParams = 색상

# Description:
columnsParams = 열

# Description:
commandParams = 명령

# Description: Information about the Companion
companionInformation = 컴패니언 정보

# Description: Menu item to update the Companion to the latest version
companionUpdate = 컴패니언 업데이트

# Description:
companionUpdateMustHaveProject = 컴패니언을 업데이트하려면 프로젝트를 열어야 합니다

# Description:
compilingPart1 = 컴파일링 파트 1

# Description:
compilingPart2 = 컴파일링 파트 2 (기다려 주세요)

# Description: Error message when the component database is not valid.
# 0=projectName
componentDatabaseCorrupt = \" {0} \"프로젝트의 구성 요소 데이터베이스가 손상되었습니다.

# Description: Error message reported when the component import failed
componentImportError = 확장기능 불러오기가 실패했습니다!

# Description:
componentImportFromComputer = 컴퓨터에서 불러오기

# Description: For importing from a URL
componentImportFromURL = URL

# Description: Error message reported when the component import failed due to unknown url
componentImportUnknownURLError = 알수 없는 URL 때문에 확장기능 불러오기가 실패했습니다

# Description: Caption for component import wizard.
componentImportWizardCaption = 프로젝트에 확장 프로그램 불러오기

# Description: Caption for component Name Label in rename wizard.
componentNameLabel = 확장기능 이름

# Description:
componentParams = 컴포넌트

# Description: Caption for component rename wizard.
componentRenameWizardCaption = 확장기능 이름 변경

# Description: Alert message reported when the component import upgraded an already imported extension
componentUpgradedAlert = 확장기능 업그레이드 :

# Description: Caption for component upload wizard.
componentUploadWizardCaption = 컴포넌트 업로드 ..

# Description:
conditionsParams = 조건

# Description: Confirmation message for delete keystore
confirmDeleteKeystore = 정말 키 저장소 파일을 삭제하시겠습니까? 만약 동의하시면, 오래된 키 저장소 파일은 앱 인벤터 서버에서 완전히 제거됩니다. 다음 번 프로젝트를 폰에 패키징 할 때, 다른 새로운 키 저장소 파일이 자동으로 생성됩니다. 만약 지금 삭제하려는 키 저장소 파일을 사용한 앱이 구글 플레이 스토어에 배포된 적이 있다면, 더 이상 앱을 업데이트 할 수 없습니다. 앞으로 패키징 되는 프로젝트들은 새로운 키 저장소 파일을 통해 서명 받게 됩니다. 키 저장소를 변경하게 되면 이전에 설치된 앱의 재설치에도 영향을 줍니다. 만약 잘 이해가 되지 않는다면, 위의 “도움말”을 선택하여 “문제 해결”로 들어가신 후, “키 저장소와 앱의 서명”이라는 문서를 읽어보시기 바랍니다. 이 파일을 삭제하면 되돌릴 수 없습니다.

# Description: Confirmation message for selecting multiple projects and clicking delete
# 0=projectNames
confirmDeleteManyProjects = 이 프로젝트들을 정말로 삭제하시겠니까: {0}  ?

# Description: Confirmation message for selecting multiple projects and clicking delete when gallery is on
# 0=projectNames
confirmDeleteManyProjectsWithGalleryOn = 이 프로젝트들을 삭제하시겠습니까: {0} ? 이 중 배포된 프로젝트가 있다면, 갤러리에 배포된 복사본도 같이 지워지게 됩니다.

# Description: Confirmation message for selecting a single project and clicking delete
# 0=projectName
confirmDeleteSingleProject = 이 프로젝트를 정말로 삭제하시겠습니까:  {0} ?

# Description: Confirmation message for selecting a single project and clicking delete when gallery is on
# 0=projectName
confirmDeleteSinglePublishedProject = 이 프로젝트를 삭제하시겠습니까: {0} ? 갤러리에 배포된 프로젝트 복사본도 같이 지워지게 됩니다.

# Description: Confirmation message shown when conflicting files are about to be deleted.
# 0=newFile, 1=existingFile
confirmOverwrite = 저장 요청 {1} 같은 이름 {0} 의 파일이 이미 이 에 존재합니다. 이전 파일을 삭제하시겠습니까? 또한 {1}(과)와 겹치는 이름을 가진 다른 파일들도 삭제됩니다.

# Description: Confirmation message shown when keystore is about to be overwritten.
confirmOverwriteKeystore = 정말 키 저장소 파일을 덮어쓰시겠습니까? 만약 동의하시면, 오래된 키 저장소 파일은 앱 인벤터 서버에서 완전히 제거됩니다. 만약 지금 덮어쓰려는 키 저장소 파일을 사용한 앱이 구글 플레이 스토어에 배포된 적이 있다면, 더 이상 앱을 업데이트 할 수 없습니다. 앞으로 패키징 되는 프로젝트들은 새로운 키 저장소 파일을 통해 서명 받게 됩니다. 키 저장소를 변경하게 되면 이전에 설치된 앱의 재설치에도 영향을 줍니다. 만약 잘 이해가 되지 않는다면, 위의 “도움말”을 선택하여 “문제 해결”로 들어가신 후, “키 저장소와 앱의 서명”이라는 문서를 읽어보시기 바랍니다. .이 파일을 덮어쓰면 되돌릴 수 없습니다.

# Description: Label of the button for selecting phone connection
connectButton = 연결

# Description: Label of the button leading to Connect related cascade items
connectTabName = 연결

# Description:
connectivityComponentPallette = 연결

# Description:
contactPickerComponentPallette = 연락처선택버튼

# Description:
contentsParams = 콘텐츠

# Description: Error message reported when copying a project failed on the server.
copyProjectError = 서버 오류: 프로젝트를 복사할 수 없습니다. 나중에 다시 시도해주세요!

# Description: Message that is shown to indicate that a copying RPC is going on
copyingRpcMessage = 복사 중 ...

# Description:
corruptionDialogMessage = <p> <b> 프로젝트를 읽는 동안 오류가 감지되었습니다. </ b> </ p> <p> 프로젝트가 손상되지 않도록하기 위해 세션이 종료되었습니다. 이 창을 닫을 수 있습니다. </ p>

# Description:
corruptionDialogText = 프로젝트 읽기 오류

# Description:
countParams = 개수

# Description:
createNoProjectsDialogMessage1 = 앱 인벤터 2에 아직 생성된 프로젝트가 없습니다. 앱 인벤터의 사용법을 배우려면, 창 오른쪽 상단의 “가이드” 링크를 클릭하세요. 또는 첫 프로젝트를 시작해보고자 한다면, 화면 좌측 상단의 “새 프로젝트 시작하기” 버튼을 클릭하세요.

# Description:
createNoProjectsDialogText = 앱 인벤터 2에 오신 것을 환영합니다!

# Description:
createNoprojectsDialogMessage2 = 행복한 창작 시간!

# Description: Error message reported when the project couldn't be created on the server.
createProjectError = 서버 오류: 프로젝트를 생성할 수 없습니다. 나중에 다시 시도해주세요!

# Description:
createWelcomeDialogButton = 계속

# Description:
createWelcomeDialogText = 앱 인벤터에 오신 것을 환영합니다!

# Description:
currentXParams = 현재X

# Description:
currentYParams = 현재Y

# Description:
customEllipsis = 사용자지정...

# Description: Text for color choice 'Cyan'
cyanColor = 청록색

# Description: Text for color choice 'Dark Gray'
darkGrayColor = 어두운 회색

# Description:
darkTheme = Dark

# Description: Header to indicate the date an extension was compiled
dateBuilt = 만든 날짜:

# Description:
datePickerComponentPallette = 날짜선택버튼

# Description:
dayParams = 일

# Description:
daysParams = 일

# Description: Text for button shape choice 'default'
defaultButtonShape = 기본값

# Description: Default project name in checkoint dialog
# 0=projectName, 1=suffix
defaultCheckpointProjectName = {0}_체크포인트{1}

# Description: Text for color choice 'Default'
defaultColor = 기본값

# Description: Text for font typeface choice 'default '
defaultFontTypeface = 기본값

# Description: Message that is shown to indicate that a loading RPC is going on
defaultRpcMessage = 불러오는 중 …

# Description: Defaulf project name in save as dialog
# 0=projectName
defaultSaveAsProjectName = {0}_복사

# Description: Text for screen animation choice 'Default '
defaultScreenAnimation = 기본값

# Description: Text for property editors
defaultText = 기본값

# Description:
defaultTheme = 장치 기본값

# Description: Text on "Delete" button
deleteButton = 삭제

# Description: Text on "Delete component" button
deleteComponentButton = 컴포넌트 삭제

# Description: Label for the context menu command that deletes a file
deleteFileCommand = 삭제…

# Description: Error message reported when deleting a file failed on the server.
deleteFileError = 서버 오류: 이 파일을 삭제할 수 없습니다. 나중에 다시 시도해주세요!

# Description: Error message reported when a server error occurs during delete keystore
deleteKeystoreError = 서버 오류: 키 저장소 파일을 삭제할 수 없습니다.

# Description: Label of the button for delete keystore
deleteKeystoreMenuItem = 키 저장소 삭제

# Description: Text on "Delete Project" button
deleteProjectButton = 프로젝트 삭제

# Description: Error message reported when deleting a project failed on the server.
deleteProjectError = 서버 오류: 프로젝트를 삭제할 수 없습니다. 나중에 다시 시도해주세요!

# Description: Name of Delete project menuitem
trashProjectMenuItem = 프로젝트 삭제

# Description: Message that is shown to indicate that a deleting RPC is going on
deletingRpcMessage = 삭제 중 …

# Description:
descriptionParams = 설명

# Description:
destinationParams = 목적지

# Description:
determiningPermissions = 권한 확정하기

# Description: Text on "Dismiss" button.
dismissButton = 거절하기

# Description:
distanceParams = 거리

# Description:
doFaultMethodDescriptions = 예외 처리를 디버그하는데 사용되는 예외를 발생시킵니다.

# Description:
doFaultMethods = 오류생성

# Description:
doNotShow = 다시 보지 않기

# Description: Caption for button to finish the box resizing dialog.
done = 완료

# Description: Warning that downloading projects will take a while
downloadAllAlert = 프로젝트를 다운로드하는데 시간이 다소 걸립니다. 잠시만 기다려주세요…

# Description: Label for the context menu command that downloads a file
downloadFileCommand = 내 컴퓨터에 다운로드

# Description: Error message displayed when a server error occurs during download keystore
downloadKeystoreError = 서버 오류: 키 저장소 파일을 내려받을 수 없습니다.

# Description: Label of the button for export keystore
downloadKeystoreMenuItem = 키 저장소 내보내기

# Description: Label of item for building a project and downloading
downloadToComputerMenuItem = 앱 ( .APK를 내 컴퓨터에 저장하기 )

# Description: Label of item for building a project and downloading
downloadToComputerMenuItem2 = 구글 플레이 앱 ( .APK 를 내 컴퓨터에 저장하기 )

# Description: Title of the dialog box for downloading a user's project source
downloadUserSourceDialogTitle = 사용자 소스 다운로드

# Description: Label of the button for admins to download a user's project source
downloadUserSourceMenuItem = 사용자 소스 다운로드

# Description: Message shown while downloading application to the phone (during compilation)
downloadingRpcMessage = 폰에 다운로드 중 …

# Description:
draggedAnySpriteParams = 드래그된모든스프라이트

# Description:
draggedSpriteParams = 드래그된스프라이트

# Description:
drawingAndAnimationComponentPallette = 그리기 & 애니메이션

# Description: Error shown when a new component name would be the same as an existing one
duplicateComponentNameError = 중복된 컴포넌트 이름!

# Description: Error shown when a new form name would be the same as an existing one
duplicateFormNameError = 중복된 스크린 이름!

# Description: Error shown when a new project name would be the same as an existing one
# 0=projectName
duplicateProjectNameError = {0} 이미 존재합니다. 같은 이름으로 프로젝트를 생성할 수 없습니다.

# Description:
durationMsParams = 밀리초기간

# Description:
durationParams = 기간

# Description:
edgeParams = 모서리

# Description:
emailAddressParams = 이메일주소

# Description: Title for user's email inbox
emailInboxTitle = 이메일

# Description:
emailPickerComponentPallette = 이메일선택

# Description: Title for moderator send email dialog
emailSendTitle = 이메일 보내기

# Description: Label of the Sent From on reportlist
emailSentFrom = 보내는 사람 :

# Description: Label of the Sent To on reportlist
emailSentTo = 받는 사람:

# Description: Message providing details about starting the emulator connection.
emulatorMenuItem = 에뮬레이터

# Description:
encodingParams = 인코딩

# Description:
endParams = 끝

# Description: error message of wrong email frequency
errorEmailFrequency = 잘못된 이메일 빈도: 수치는 0보다 커야 합니다

# Description: Message displayed when an error occurs while generating YAIL for a form.
# 0=formName
errorGeneratingYail = {0} 를(을) 위한 코드를 생성할 수 없습니다.

# Description:
errorMessageParams = 오류메시지

# Description:
errorNumberParams = 오류번호

# Description:
ev3ColorSensorComponentPallette = Ev3색상센서

# Description:
ev3CommandsComponentPallette = Ev3명령어

# Description:
ev3GyroSensorComponentPallette = Ev3자이로센서

# Description:
ev3MotorsComponentPallette = Ev3모터

# Description:
ev3SoundComponentPallette = Ev3소리

# Description:
ev3TouchSensorComponentPallette = Ev3터치센서

# Description:
ev3UIComponentPallette = Ev3UI

# Description:
ev3UltrasonicSensorComponentPallette = Ev3초음파센서

# Description:
# 0=property
expectedLatLongPair = {0} 을 위해 제공된 값은 유효한 위도, 경도가 아닙니다.

# Description:
experimentalComponentPallette = 실험실

# Description: Name of Export all Project menuitem
exportAllProjectsMenuItem = 모든 프로젝트 내보내기

# Description: Name of Export Project menuitem
exportProjectMenuItem = 선택된 프로젝트 (.aia)를 내 컴퓨터로 내보내기

# Description:
extensionComponentPallette = 확장기능

# Description: Error message when the component descriptors for an extension are not parsable.
# 0=extensionName, 1=projectName
extensionDescriptorCorrupt = \" {1} \"프로젝트의 \" {0} \"확장기능 설명이 손상되었습니다.

# Description: Extensions link
extensionsMenuItem = 확장기능

# Description: Header for extension version information
externalComponentVersion = 확장기능 버전:

# Description:
extraKeyValueWarning = ExtraKey 및 ExtraValue는 더 이상 사용되지 않으며 지원되지 않습니다.

# Description: Text for screen animation choice 'Fade '
fadeScreenAnimation = Fade에서 새로운 Extras 속성을 사용하십시오.

# Description:
featureCollectionComponentPallette = 형상모음

# Description:
featureParams = 형상

# Description:
featuresParams = 형상

# Description: Link for Report an Issue form
feedbackLink = 문제 보고

# Description: Link for Report an Issue form
feedbackMenuItem = 문제 보고

# Description: Link for Report an Issue form
feedbackTabName = 문제 보고

# Description:
fileComponentPallette = 파일

# Description:
fileNameParams = 파일이름

# Description:
fileParams = 파일

# Description: Error message reported when a file couldn't be uploaded because of its size.
fileTooLargeError = 오류: 용량이 너무 커서 파일을 올릴 수 없습니다

# Description: Error message reported when a file couldn't be uploaded to the server.
fileUploadError = 서버 오류: 파일을 올릴 수 없습니다. 나중에 다시 시도해주세요!

# Description: Caption for file upload wizard.
fileUploadWizardCaption = 파일 올리기 ...

# Description: Message displayed when an asset is uploaded.
# 0=filename
fileUploadingMessage = {0} 을(를) 앱 인벤터 서버에  업로드 중

# Description: Error message when filenames are 0 or 101+ characters long
filenameBadSize = 파일 이름은 1자 이상 100자 이하여야 합니다.

# Description: Error message when filenames are 0 or 101+ characters long
filenameBadSizeTitle = 오류: 잘못된 파일 이름 크기

# Description:
fillParams = 채우기

# Description: Caption and summary for Fill Parent choice
fillParentCaption = 부모 요소에 맞추기

# Description:
finalDialogMessage = <p> <b> 세션이 종료되었습니다.이 창을 닫을 수 있습니다 </ b> </ p>

# Description:
finalDialogText = 세션이 만료되었습니다

# Description:
firebaseDBComponentPallette = 파이어베이스DB

# Description:
firebaseExperimentalWarning = 파이어베이스DB는 실험적인 기능으로, 이후에 변경되거나 작동이 정지될 수 있습니다. 이 콤퍼넌트를 이용하여 패키징된 앱은 나중에 작동하지 않을 수 있습니다.

# Description: Error shown when user does not type letter as first character in project name.
firstCharProjectNameError = 프로젝트 이름은 항상 알파벳으로 시작해야 합니다

# Description: Text for Sizing choice 'fixed' -- scale to fit device screen
fixedSizing = 고정형

# Description:
flungSpriteParams = 플링된스프라이트

# Description:
followers2Params = 팔로워2

# Description:
forInternalUseOnlyComponentPallette = 내부사용전용

# Description:
formComponentPallette = 폼

# Description: Label to indicate the application has too many screens.
formCountErrorLabel = 경고 :이 응용 프로그램의 화면 수가 App Inventor의 한계를 초과 할 수 있습니다. <a target=\"_blank\" href=\"/reference/other/manyscreens.html\"> 여기 </a>를 클릭하면 많은 화면이있는 앱을 만드는 방법에 대한 도움말을 볼 수 있습니다. <p> 정말로 다른 화면을 추가 하시겠습니까? </ p>

# Description: Label in front of name in new screen dialog.
formNameLabel = 스크린 이름:

# Description: Name of Forums link
forumsMenuItem = 포럼

# Description:
frequencyHzParams = 주파수Hz

# Description:
frequencyParams = 주파수

# Description:
fromParams = 시작

# Description:
fromUrlButton = 시작 URL...

# Description:
functionNameParams = 함수이름

# Description:
fusiontablesControlComponentPallette = 퓨전테이블제어

# Description: Prompt for the gallery app report section if user has already reported.
galleryAlreadyReportedPrompt = 이 앱은 이미 보고되었습니다. 관리자가 곧 확인 후 해결할 예정입니다.

# Description: Caption for gallery app box.
galleryAppBoxCaption = 갤러리 앱

# Description: Text prefix for the gallery app last changed date.
galleryAppChangedPrefix = 변경 시간

# Description: Text prefix for the gallery app shared / created date.
galleryAppCreatedPrefix = 만든 시간

# Description: Error message reported when can't get gallery app like on server.
galleryAppLikeError = 서버 오류 : ''좋아요'' 수를 조회할 수 없습니다.

# Description: Text for gallery page opening feedback
galleryAppOpening = 여는 중 ...

# Description: Text for gallery page publishing feedback.
galleryAppPublishing = 퍼블리싱 중 ...

# Description: Text for gallery page removing feedback
galleryAppRemoving = 삭제 중 ...

# Description: Text for gallery page updating feedback
galleryAppUpdating = 업데이트 중 ...

# Description: Text for gallery page like button (already liked).
galleryAppsAlreadyLike = 좋아요 취소

# Description: Title for the gallery page sidebar that shows list of apps of a specific author.
galleryAppsByAuthorSidebar = 개발자 :

# Description: Text for gallery page like button (not liked yet).
galleryAppsLike = 좋아요

# Description: Title prefix for the gallery page sidebar that shows list of remixed apps.
galleryAppsRemixesSidebar = 리믹스

# Description: Text for gallery By Author Text
galleryByAuthorText = 작성자

# Description: Text for gallery app developer prefix text label
galleryByDeveloperPrefixedText = 만든이

# Description: Text for gallery page cancel button
galleryCancelText = 취소

# Description: Reference to the Creative Commons License
galleryCcLicenseRef = 갤러리에 앱을 제출하면 <a href=\"https://creativecommons.org/licenses/by/4.0/\" target=\"_blank\"> 크리에이티브 커먼즈 저작자 표시 라이선스 </a>에 따라 앱을 게시하고 당신이 그렇게 할 권한이 있음을 확인합니다.

# Description: Text for gallery page changed date label
galleryChangedDateLabel = 변경일:

# Description: Error message reported when can't get gallery app comments on server.
galleryCommentError = 서버 오류 : 댓글을 조회할 수 없습니다

# Description: Button for copying share link to clipboard
galleryCopyButton = 복사

# Description: Text for gallery page created date label
galleryCreatedDateLabel = 생성일:

# Description: Text for gallery page credit hint
galleryCreditHint = 다른앱의 코드를 사용하여 만들었나요? 무엇을 참고하였는지 크레딧에 기록하세요.

# Description: Text for gallery page credit label
galleryCreditLabel = 크레딧:

# Description: Error message reported when the gallery delete breaks
galleryDeleteError = 서버 오류: 갤러리 삭제 오류

# Description: Text for gallery page description hint
galleryDescriptionHint = 앱에 대한 설명을 작성해 주세요.

# Description: Error message reported when can't get developer gallery apps on server.
galleryDeveloperAppError = 서버 오류: 갤러리에서 개발자 갤러리 앱을 조회할 수 없습니다

# Description: Error message reported when can't get most downloaded apps server.
galleryDownloadedAppsError = 서버 오류: 갤러리에서 가장 많이 다운로드된 앱을 가져올 수 없습니다

# Description: Text for gallery page edit button
galleryEditText = 편집

# Description: Text for gallery Empty Text
# Description: Error message reported when the gallery cannot be accessed.
galleryError = 서버 오류: 갤러리에 접근할 수 없습니다

# Description: Error message reported when can't get featured on server.
galleryFeaturedAppError = 서버 오류: 갤러리에서 추천 앱을 조회할 수 없습니다

# Description: Text for gallery Feature Text
galleryFeaturedText = 추천

# Description: redirect action of galleryId
galleryGalleryIdAction = /?galleryId=

# Description: Error message if the gallery id does not exist
galleryIdNotExist = 해당 아이디의 갤러리 앱이 없습니다.

# Description: Error message reported when can't get most liked apps server.
galleryLikedAppsError = 서버오류: 갤러리에서 좋아요가 많은 앱을 불러올 수 없습니다.

# Description: Caption for gallery list box.
galleryListBoxCaption = 갤러리

# Description: More Apps Text
galleryMoreApps = 더 많은 앱

# Description: Text for gallery page more info link hint
galleryMoreInfoHint = 만약 이 앱에 튜토리얼 또는 비디오가 있다면, 여기에 URL을 입력하세요.

# Description: Text for gallery page more info link label
galleryMoreInfoLabel = 튜토리얼 / 비디오:

# Description: text for more reports
galleryMoreReports = 더 많은 신고

# Description: Error to report when an app with an extension is attempted to be added to the Gallery
galleryNoExtensionsPlease = 확장기능이 포함된 앱은 갤러리에 업로드할 수 없습니다

# Description: Error messgage for when submitting galleryapp
galleryNoScreenShotMessage = 앱을 발행하기 전에 스크린샷 또는 표현가능한 이미지를 제출해 주세요

# Description: Error messgage for when submitting galleryapp
galleryNotEnoughDescriptionMessage = 앱을 발행하기 전에 더 많은 설명을 제공해 주세요

# Description: Text for gallery page open the app button
galleryOpenText = 앱 열기

# Description: Text for gallery page publish button
galleryPublishText = 발행

# Description: Error message reported when can't get recent apps server.
galleryRecentAppsError = 서버 오류: 갤러리에서 최신 앱을 가져올 수 없습니다

# Description: Text for the gallery app remix children list.
galleryRemixChildren = 리믹스된 앱들을 보려면 클릭하세요!

# Description: Text prefix for the gallery app remixed from label.
galleryRemixedFrom = 리믹스 원본:

# Description: Text for remove confirm alert
galleryRemoveConfirmText = 이 앱을 갤러리에서 정말로 삭제하시겠습니까?

# Description: Text for gallery page remove button
galleryRemoveText = 삭제

# Description: Text for the gallery app report button.
galleryReportButton = 신고하기

# Description: Prompt for the gallery app report section when user just submitted the report.
galleryReportCompletionPrompt = 이 앱이 신고되었습니다. 관리자가 곧 확인 후 해결할 예정입니다.

# Description: Prompt for the gallery app report section.
galleryReportPrompt = 이 앱이 무례하거나 부적절하다고 생각하는 이유를 설명하거나 <a href=\"http://google.com\"> App Inventor Gallery 커뮤니티 가이드 라인 </a>을 위반하는 이유를 설명하십시오.

# Description: Text for gallery search button
gallerySearch = 검색

# Description: Error message reported when can't search on server.
gallerySearchError = 서버 오류: 갤러리에서 검색을 실패하였습니다

# Description: Search for Apps Text
gallerySearchForAppsButton = 앱 검색

# Description: Search Results Infix
gallerySearchResultsInfix = \" 검색됨

# Description: Search Results Prefix
gallerySearchResultsPrefix = 검색어 \"

# Description: Search Results Suffix
gallerySearchResultsSuffix = 결과

# Description: Error message reported when the gallery trying to set project gallery id
gallerySetProjectIdError = 서버 오류: 프로젝트 갤러리 아이디 설정 시 갤러리 오류

# Description: Error message reported when unable to extract gallery settings from xml.
gallerySettingsError = 서버 오류: 갤러리 설정에 접근할 수 없습니다

# Description: Prompt for the gallery app share section.
gallerySharePrompt = 공유 링크:

# Description: Text for gallery Single Space Text
gallerySingleSpaceText = 갱도

# Description: Link for Gallery
galleryTabName=갱도

# Description: Text for gallery Tutorial  Text
galleryTutorialText = 튜토리얼

# Description: Text for gallery Unfeature Text
galleryUnfeaturedText = 추천안함

# Description: Text for gallery Untutorial Text
galleryUntutorialText = 튜토리얼 안함

# Description: Text for gallery page update button
galleryUpdateText = 업데이트

# Description: gallery app link label
# 0=host, 1=galleryId
galleryVisitGalleryAppLinkLabel = 당신의 앱 : {0}/?galleryId={1}

# Description:
gameClientComponentPallette = 게임클라이언트

# Description: Label of the cascade item for generating YAIL for a project
generateYailMenuItem = YAIL 만들기

# Description:
generatingApplicationInformation = 앱 정보 만들기

# Description: Message displayed when cannot get a MOTD from the server.
getMotdFailed = 서버 연결에 실패하여 MOTD를 가져올 수 없습니다.

# Description: Name of Getting Started link
getStartedMenuItem = 시작하기

# Description: Label showing the ant build date and the git version
# 0=date, 1=version
gitBuildId = 빌드: {0} 버전: {1}

# Description: Text for color choice 'Gray'
grayColor = 회색

# Description: Text for color choice 'Green'
greenColor = 초록

# Description: Name of Guide link
guideTabName = 가이드

# Description:
gyroscopeSensorComponentPallette = 자이로센서

# Description: Hard Reset the Emulator.
hardResetConnectionsMenuItem = 강제 초기화

# Description: Tool tip text for header icon for closing/removing a minimized box.
hdrClose = 닫기

# Description: Tool tip text for header icon for minimizing the box.
hdrMinimize = 접기

# Description: Tool tip text for header icon for restoring a minimized box.
hdrRestore = 펼치기

# Description: Tool tip text for header icon for context menu of box.
hdrSettings = 설정

# Description:
headingParams = 방향

# Description:
heightParams = 높이

# Description: Caption for the height property
heightPropertyCaption = 높이

# Description: Label for the Help menu
helpTabName = 도움말

# Description: Label of the Text of hiding of reportlist
hideLink = 숨김

# Description: Text on Toggle Warning Button
hideWarnings = 경고 숨기기

# Description: Default value for Hint property
# 0=componentName
hintPropertyValue = {0} 의 힌트

# Description: Text for horizontal alignment choice 'Center'
horizontalAlignmentChoiceCenter = 가운데

# Description: Text for horizontal alignment choice 'Left
horizontalAlignmentChoiceLeft = 왼쪽

# Description: Text for horizontal alignment choice 'Right'
horizontalAlignmentChoiceRight = 오른쪽

# Description:
horizontalArrangementComponentPallette = 수평배치

# Description:
horizontalScrollArrangementComponentPallette = 스크롤가능수평배치

# Description:
hourParams = 시

# Description:
hoursParams = 시

# Description:
htmlTextParams = HTML텍스트

# Description:
iceServersParams = 아이스서버

# Description:
imageComponentPallette = 이미지

# Description:
imageParams = 이미지

# Description:
imagePathParams = 이미지경로

# Description:
imagePickerComponentPallette = 이미지선택버튼

# Description:
imageSpriteComponentPallette = 이미지스프라이트

# Description: String shown in the palette to import an extension
importExtensionMenuItem = 확장기능 추가하기

# Description: Name of Import Project menuitem
importProjectMenuItem = 내 컴퓨터에서 프로젝트 (.aia) 가져오기 ...

# Description: Name of Import Template menuitem
importTemplateButton = 저장소에서 프로젝트 (.aia) 가져오기 ...

# Description: Label of the Text of Template 2 of reportlist
# 0=title
inappropriateAppContentEmail = 앱 '' {0} ''에 부적절한 콘텐츠가 있습니다. 의 가이드 라인을 검토하고 그에 따라 앱을 수정하십시오.

# Description: Label of the Text of Template 1 of reportlist
# 0=title
# Description: Label of the Inappropriate App Content Remove on reportlist
inappropriateAppContentRemoveEmail = 부적절한 콘텐츠로 인해 앱 \" {0} \"이 (가) 갤러리에서 삭제되었습니다. http://ai2.appinventor.mit.edu/about/termsofservice.html의 지침을 검토하십시오. 이 조치가 잘못 취해진 것으로 생각되면이 전자 메일에 직접 회신하여 토론 할 수 있습니다. 

# Description: Label of the Inappropriate App Content Remove on reportlist
inappropriateAppContentRemoveTitle = 부적절한 앱 콘텐츠 : Remove

# Description: Label of the Inappropriate App Content on reportlist
inappropriateAppContentTitle = 부적절한 앱 콘텐츠

# Description: Label of the Text of Template 3 of reportlist
inappropriateUserProfileContentEmail = 프로필에 부적절한 콘텐츠가 있습니다. 프로필을 수정하십시오

# Description: Label of the Inappropriate User Profile Content on reportlist
inappropriateUserProfileContentTitle = 부적절한 사용자 프로필 콘텐츠

# Description: Caption for input template url wizard.
inputNewUrlCaption = URL 입력…

# Description:
installURLMethodDescriptions = URL을 다운로드하고 설치된 브라우저를 통해 Android 패키지로 설치합니다.

# Description:
installURLMethods = 설치URL

# Description:
instanceIdParams = 인스턴스아이디

# Description:
instantParams = 인스턴트

# Description: Alert after an internal error
internalError = 내부 오류가 발생했습니다.

# Description: Confirm alert after an internal error
internalErrorClickOkDebuggingView = 내부 오류가 발생했습니다. 자세한 내용은 \"확인\"을 클릭하십시오.

# Description: Confirmation for reporting a bug after an internal error
internalErrorReportBug = 내부 오류가 발생했습니다. 버그를 신고하겠습니까?

# Description: Alert after an internal error
internalErrorSeeDebuggingView = 내부 오류가 발생했습니다. 디버깅 뷰로 변경합니다.

# Description:
internalUseComponentPallette = 내부사용전용

# Description: Error shown when user types invalid character into project name.
invalidCharProjectNameError = 잘못된 문자. 프로젝트 이름은 알파벳, 숫자, 밑줄만 가능합니다

# Description: Error message when an extension descriptor pathname does not have the correct structure.
# 0=projectName
invalidExtensionInProject = \" {0} \"프로젝트에 유효하지 않은 확장기능이 있습니다. 앱인벤터는 다시 시도합니다.

# Description:
invalidSessionDialogButtonContinue = 두 개의 세션 유지

# Description:
invalidSessionDialogButtonCurrent = 이 창을 현재 세션으로 만들기

# Description:
invalidSessionDialogButtonEnd = 이 세션 종료하기

# Description:
invalidSessionDialogMessage = <p> <font color = red> 경고 : </ font>이 세션은 오래되었습니다. </ p> <p>이 App Inventor 계정은 다른 위치에서 열렸습니다. 둘 이상의 위치에서 한 계정을 동시에 사용하면 프로젝트가 손상 될 수 있습니다. </ p> <p> 다음 버튼 중 하나를 선택하여 <ul> <li>이 세션 끝내기를 클릭하십시오. </ li> <li > 현재 세션으로 만들고 다른 세션을 오래되게하십시오. </ li> <li> 두 세션 모두 계속하십시오. </ li> </ ul> </ p>

# Description:
invalidSessionDialogText = 세션이 만료되었습니다

# Description: Error message reported when user id or project id is missing
invalidUserIdOrProjectIdError = 프로젝트를 다운로드하려면 사용자 이메일 주소 또는 아이디와 프로젝트 이름이 필요합니다. 아이디는 숫자로 이루어져 있으며 시스템 로그나 데이터베이스에서 가져옵니다. 만약 이메일 주소를 사용한다면, 데이터베이스에 저장된 이메일 주소와 일치해야 합니다. 동일하게, 프로젝트 이름도 데이터베이스에 저장된 것과 일치해야합니다. 모두 대소문자를 구분합니다.

# Description: Label of the button leading to build related cascade items, when building
isBuildingButton = 패키징 ...

# Description:
isConnectedMethodDescriptions = 휴대 전화가 Wi-Fi에 있으면 참을 반환하고, 그렇지 않으면 거짓를 반환합니다.

# Description:
isConnectedMethods = 연결여부가져오기

# Description:
isDirectMethodDescriptions = 에뮬레이터 또는 USB 연결에서 실행중인 경우 참을 반환합니다.

# Description:
isDirectMethods = 다이렉트연결여부가져오기

# Description:
itemToAddParams = 추가할항목

# Description:
jsonTextParams = json텍스트

# Description: Error message reported when the keystore couldn't be uploaded to the server.
keystoreUploadError = 서버 오류: 키 저장소를 올릴 수 없습니다. 나중에 다시 시도해주세요!

# Description: Caption for keystore upload wizard.
keystoreUploadWizardCaption = 키 저장소 올리기...

# Description: Label of the Cancel Action on reportlist
labelCancel = 취소

# Description: Label of the Choose Template Label on reportlist
labelChooseTemplate = 템플릿 선택

# Description:
labelComponentPallette = 레이블

# Description: Label of the Confirm Action on reportlist
labelConfirm = 확인

# Description: Label of the Deactivate App on reportlist
labelDeactivateApp = 앱 비활성화

# Description: Label of the Deactivate App & Send Email on reportlist
labelDeactivateAppAndSendEmail = 앱 비활성화 및 이메일 전송

# Description: label of editing your profile
labelEditYourProfile = 프로필 수정

# Description: label of email description
labelEmailDescription = App Inventor는 게시 한 앱이 좋아하거나 다운로드 될 때 알림을 보냅니다. 이 기능을 사용 / 사용 중지 할 수 있으며 알림 수신 빈도를 지정할 수 있습니다

# Description: label of email frequency prefix
labelEmailFrequencyPrefix = 이메일 수신 간격

# Description: label of email frequency suffix
labelEmailFrequencySuffix = 새로운 좋아요 + 다운로드

# Description: label of more info link
labelMoreInfoLink = 상세 보기 링크

# Description: Label of the Reactivate App on reportlist
labelReactivateApp = 앱 재활성화

# Description: Label of the See All Actions of reportlist
labelSeeAllActions = 이전 행동

# Description: label of your display name
labelYourDisplayName = 표시 이름

# Description: Label of the Mark As Resolved of reportlist
labelmarkAsResolved = 해결됨으로 표시

# Description: Label of the Mark As Unresolved of reportlist
labelmarkAsUnresolved = 해결되지 않은 문제로 표시

# Description: Text for screen orientation choice 'Landscape '
landscapeScreenOrientation = 가로

# Description:
languageToTranslateToParams = 번역언어코드

# Description:
latitudeParams = 위도

# Description:
layoutComponentPallette = 레이아웃

# Description:
leftParams = 왼쪽

# Description: Text for text alignment choice 'left'
leftTextAlignment = 왼쪽

# Description:
legoMindstormsComponentPallette = 레고® 마인드스톰®

# Description: Name of Library link
libraryMenuItem = 라이브러리

# Description: Text for color choice 'Light Gray'
lightGrayColor = 밝은 회색

# Description:
lineStringComponentPallette = 선연결

# Description:
listParams = 리스트

# Description:
listPickerComponentPallette = 목록선택버튼

# Description:
listViewComponentPallette = 목록뷰

# Description: Error message reported when a source file couldn't be loaded from the server.
loadError = 서버 오류: 파일을 올릴 수 없습니다. 나중에 다시 시도해주세요!

# Description: loading indicator when opening the app
loadingAppIndicatorText = 앱 로딩 중 ...

# Description: Message to display when an asset is being downloaded from the server
# 0=assetPath
loadingAsset = 앱인벤터 서버에서  {0} 다운로드 중 ...

# Description:
locationNameParams = 장소이름

# Description:
locationSensorComponentPallette = 위치센서

# Description: Show toast for a Toast_Long of time
longToastLength = 길게

# Description:
longitudeParams = 경도

# Description: Text for color choice 'Magenta'
magentaColor = 자홍색

# Description:
mailboxParams = 메일함

# Description:
makePublicParams = 공개하기

# Description: Error message when component name contains non-alphanumeric characters besides _ or does not start with a letter
malformedComponentNameError = 컴포넌트 이름은 문자, 숫자, 밑줄만 사용할 수 있으며 반드시 문자로 시작해야합니다.

# Description: Error message when file name contains characters that would require URL encoding.
malformedFilename = 파일 이름은 알파벳, 숫자 및 기호  \"-\", \"_\", \".\", \"!\", \"~\", \"*\", \"(\", \")\" 만 가능합니다.

# Description: Error message when file name contains characters that would require URL encoding.
malformedFilenameTitle = 오류: 잘못된 파일 이름

# Description: Error message when form name contains non-alphanumeric characters besides _
malformedFormNameError = 스크린 이름은 알파벳, 숫자, 밑줄만 사용할 수 있으며 반드시 알파벳으로 시작해야합니다.

# Description: Error shown after validation of input text failed.
malformedInputError = 잘못된 입력!

# Description: Error message when project name does not start with a letter or contains a character that is not a letter, number, or underscore.
malformedProjectNameError = 프로젝트 이름은 알파벳, 숫자, 밑줄만 사용할 수 있으며 반드시 알파벳으로 시작해야합니다.

# Description:
# 0=numArgs
mapCenterWrongNumberArgumentsException = 문자열중심은 2개의 값이 필요하지만  {0}개가 입력되었습니다

# Description:
mapComponentPallette = 지도

# Description:
mapFeatureParams = 지도형상

# Description: Tooltip shown when the user hovers the mouse over the Map component's lock map control
mapLockMovementTooltip = 지도 이동 잠금

# Description: Tooltip shown when the user hovers the mouse over the Map component's reset map control
mapResetBoundingBoxTooltip = 경계 박스 다시 설정

# Description: Display name for the imperial unit system
mapScaleUnitsImperial = 야드법

# Description: Display name for the metric unit system
mapScaleUnitsMetric = 미터법

# Description: Tooltip shown when the user hovers the mouse over the Map component's set initial map control
mapSetInitialMapTooltip = 초기지도를 현재보기로 설정합니다.

# Description: Aerial photography map type
mapTypeAerial = 항공뷰

# Description: Road network map type
mapTypeRoads = 거리뷰

# Description: Terrain map type
mapTypeTerrain = 지형뷰

# Description: Tooltip shown when the user hovers the mouse over the Map component's unlock map control
mapUnlockMovementTooltip = 지도 구성 요소 잠금 해제

# Description: Tooltip shown when the user hovers the mouse over the Map component's zoom in control
mapZoomIn = 줌인

# Description:
mapZoomLevelOutOfBoundsException = 줌 레벨은 1에서 18 사이입니다

# Description: Tooltip shown when the user hovers the mouse over the Map component's zoom out control
mapZoomOut = 줌아웃

# Description:
mapsComponentPallette = 지도

# Description:
markerComponentPallette = 마커

# Description:
mediaComponentPallette = 미디어

# Description:
mediaStoreComponentPallette = 미디어저장소

# Description:
mediafileParams = 미디어파일파라미터

# Description:
mentionsParams = 멘션리스트

# Description:
messageParams = 메시지

# Description:
messageTextParams = 메시지텍스트

# Description: Caption for message output box.
messagesOutputBoxCaption = 메시지

# Description:
messagesParams = 메시지

# Description:
millisParams = 밀리초

# Description:
millisecondsParams = 밀리초

# Description:
millisecsParams = 밀리초

# Description:
minuteParams = 분

# Description:
minutesParams = 분

# Description:
modeParams = 모드

# Description: Text for accelerometer sensitivity choice 'moderate'
moderateAccelerometerSensitivity = 보통

# Description: Label of the Text of deativating this app with email of reportlist
moderationActionDeactivateThisAppWithEmail = 이메일로 앱 비활성화하기:

# Description: Label of the Text of marking this report as resolved of reportlist
moderationActionMarkThisReportAsResolved = 이 신고를 해결됨으로 표시

# Description: Label of the Text of marking this report as unresolved of reportlist
moderationActionMarkThisReportAsUnresolved = 이 신고를 해결안됨으로 표시

# Description: Label of the Text of reactivating this app of reportlist
moderationActionReactivateThisApp = 앱 재활성화하기

# Description: Label of the Text of sending an email of reportlist
moderationActionSendAnEmail = 이메일 보내기:

# Description: Label of the app author field on moderation page
moderationAppAuthorHeader = 앱 제작자

# Description: Title of the email when app was deactivated
moderationAppDeactivatedTitle = 앱인벤터 갤러리: 비활성화된 앱

# Description: Label of the app field on moderation page
moderationAppHeader = 앱

# Description: Body of the email when app was activated
# 0=title
moderationAppReactivateBody = 앱 \"{0} \" 이 (가) 다시 활성화되었습니다.

# Description: Title of the email when app was activated
moderationAppReactivatedTitle = 앱인벤터 갤러리: 활성화된 앱

# Description: Label of ...
moderationDotDotDot = ...

# Description: error message when fail to send to user from moderator
moderationErrorFailToSendEmail = 이메일을 전송하는데 실패했습니다, 나중에 다시 시도해 주세요

# Description: Caption for moderation page box.
moderationPageBoxCaption = 신고

# Description: Label of the created date of report field on moderation page
moderationReportDateCreatedHeader = 신고 날짜

# Description: Label of the report text field on moderation page
moderationReportTextHeader = 문제 신고

# Description: Label of the reporter field on moderation page
moderationReporterHeader = 신고자

# Description: Title of the email when moderator sends out an email
moderationSendEmailTitle = 앱인벤터 갤러리에서 보낸 이메일

# Description: Label of the Text of showing resolved reports of reportlist
moderationShowResolvedReports = 해결된 신고 보이기

# Description: Text for font typeface choice 'monospace '
monospaceFontTypeface = 고정 너비

# Description:
monthParams = 월

# Description:
monthsParams = 월

# Description: Label of the button leading to more cascade items
moreActionsButton = 추가 동작

# Description: Label of the link to a component's reference docs
moreInformation = 자세히 알아보기

# Description: Initial caption for MOTD box.
motdBoxCaption = 앱 인벤터에 오신 것을 환영합니다!

# Description:
motorPortLetterParams = 모터포트문자

# Description:
msParams = 밀리초

# Description: Name of My Projects tab
myProjectsTabName = 내 프로젝트

# Description:
nameParams = 이름

# Description:
nearFieldComponentPallette = NFC

# Description: Title of new Screen dialog.
newFormTitle = 새 스크린

# Description: Label next to the new name in a rename dialog
newNameLabel = 새 이름:

# Description: Label of the menu item for creating a new project
newProjectMenuItem = 새 프로젝트 시작하기

# Description: Label for template url wizard.
newUrlLabel = 템플릿 URL:

# Description: Caption for the wizard to create a new Young Android project
newYoungAndroidProjectWizardCaption = 새로운 앱인벤터 프로젝트 만들기

# Description: Exception message used when a project contains a newer version component than the version known by the system
# 0=componentType, 1=srcCompVersion, 2=sysCompVersion
newerVersionComponentException = 프로젝트 {0}에서  버전 {1}을 열 수 없습니다. (알려진 최신버전은 {2} 입니다)

# Description: Alert message displayed when project is newer than system
newerVersionProject = 이 프로젝트는 새 버전의 앱 인벤터로 저장되었습니다. 프로젝트를 불러오기는 하지만, 호환성 문제가 발생할 수 있습니다.

# Description: Text on 'Next' button to proceed to the next page of the wizard.
nextButton = 다음

# Description: Message displayed when OK button is clicked when there is no asset selected.
noAssetSelected = 자원을 선택해야 합니다!

# Description: Error message shown when a project references an unknown component.
# 0=componentName, 1=projectName
noComponentFound = 프로젝트 \" {1} \"을 로드하는 동안 콤포넌트 \"{0}  \"을 (를) 찾을 수 없습니다.

# Description: Message displayed when OK button is clicked when there is no component selected.
noComponentSelected = 컴포넌트를 선택해야 합니다!

# Description: Error message reported when a file was not selected.
noFileSelected = 업로드할 파일을 선택하세요.

# Description: Error message reported when a file was not selected.
noFileSelectedTitle = 오류: 파일이 선택되지 않았습니다

# Description: Error message displayed when no keystore file exists
noKeystoreToDownload = 내려 받을 키 저장소 파일이 없습니다

# Description:
noParams = 아니오

# Description: Error message displayed when no project is selected
noProjectSelectedForDelete = 삭제할 프로젝트를 선택하세요.

# Description: Label feedback for no results found after searching.
noResultsFound = 결과를 찾을 수 없습니다

# Description: Exception message used when a component was not upgraded
# 0=componentType, 1=srcCompVersion, 2=sysCompVersion
noUpgradeStrategyException = {0} 의 버전 {1}에서 {2}로의 업그레이드가 없습니다.

# Description: Error message reported when no url is entered.
noUrlError = URL을 입력해 주세요

# Description: Header for the non-visible components in the designer.
nonVisibleComponentsHeader = 보이지 않는 컴포넌트

# Description: Caption for None entry
noneCaption = 없음

# Description: Text for color choice 'None'
noneColor = 없음

# Description: Text for screen animation choice 'None '
noneScreenAnimation = 없음

# Description: Error shown after validation of custom length field failed.
nonnumericInputError = 값은 반드시 0 또는 0보다 큰 숫자이어야 합니다

# Description: Error shown after validation of percentage input fields.
nonvalidPercentValue = 퍼센트 입력 값은 반드시 0에서 100 사이어야 합니다

# Description: Title for Error Dialog when connection is attempted without a project.
noprojectDialogTitle = 선택된 프로젝트 없음

# Description: Error message for connection attempt without a project selected.
noprojectDuringConnect = 연결하기에 앞서 프로젝트를 만들거나 선택해야 합니다.

# Description: Error shown after validation of float failed.
# 0=nonNumericText
notAFloat = {0} 는(은) 유효한 숫자가 아닙니다

# Description: Name of the event parameter that indicates whether an event has already been handled or not.
notAlreadyHandledParams = 아직다루어지지않음

# Description: Error shown after validation of integer failed.
# 0=nonNumericText
notAnInteger = {0} 는(은) 유효한 정수가 아닙니다

# Description: Error message reported when the file selected for upload is not a component archive.
notComponentArchiveError = 선택된 파일은 컴포넌트 파일이 아닙니다!appengine.컴포넌트 파일은 aix 파일입니다.

# Description: Error message reported when the file selected for upload is not a keystore.
notKeystoreError = 선택된 파일은 키 저장소가 아닙니다!

# Description: Error message reported when the file selected for upload is not a project archive.
notProjectArchiveError = 선택된 프로젝트는 프로젝트 소스 파일이 아닙니다! 프로젝트 소스 파일의 확장자는 aia 입니다.

# Description:
noticeParams = 알림

# Description:
notifierComponentPallette = 알림

# Description:
numberOfBytesParams = 바이트수

# Description:
numberParams = 번호

# Description:
nxtColorSensorComponentPallette = Nxt색상센서

# Description:
nxtDirectCommandsComponentPallette = Nxt직접명령

# Description:
nxtDriveComponentPallette = Nxt드라이브

# Description:
nxtLightSensorComponentPallette = Nxt조도센서

# Description:
nxtSoundSensorComponentPallette = Nxt소리센서

# Description:
nxtTouchSensorComponentPallette = Nxt터치센서

# Description:
nxtUltrasonicSensorComponentPallette = Nxt초음파센서

# Description: Caption for ODE log box.
odeLogBoxCaption = 개발자 메시지

# Description: Text on "OK" button.
okButton = 확인

# Description: Label next to the old name in a rename dialog
oldNameLabel = 이전 이름:

# Description: Label of the button for opening the blocks editor
openBlocksEditorButton = 블록 에디터 열기

# Description: Text for color choice 'Orange'
orangeColor = 주황

# Description:
orientationSensorComponentPallette = 방향센서

# Description:
otherParams = 다른

# Description:
otherScreenNameParams = 다른스크린이름

# Description: Text for button shape choice 'oval'
ovalButtonShape = 타원

# Description: Message shown during a building RPC (for Young Android, called 'packaging')
packagingRpcMessage = 패키징 ...

# Description: Caption for palette box.
paletteBoxCaption = 팔레트

# Description:
passwordTextBoxComponentPallette = 암호텍스트박스

# Description:
pathParams = 경로

# Description:
patternParams = 패턴

# Description:
pedometerComponentPallette = 만보기

# Description: Caption for percent label
percentCaption = 퍼센트

# Description: Summary for length in percent
# 0=percent
percentSummary = {0} 퍼센트

# Description: The name of the parameter that is used to report the name of a needed permission.
permissionNameParams = 권한이름

# Description:
phoneCallComponentPallette = 전화

# Description: Error message displayed when the user wants to download a project to the phone, but the phone is not connected.
phoneNotConnected = 전화가 연결되지 않았습니다.

# Description:
phoneNumberParams = 전화번호

# Description:
phoneNumberPickerComponentPallette = 전화번호선택버튼

# Description:
phoneStatusComponentPallette = 전화상태

# Description: Text for color choice 'Pink'
pinkColor = 분홍

# Description:
pitchParams = 피치

# Description: Caption for pixels label
pixelsCaption = 픽셀

# Description: Summary for custom length in pixels
# 0=pixels
pixelsSummary = {0} 픽셀

# Description:
playerComponentPallette = 플레이어

# Description:
playerEmailParams = 플레이어이메일

# Description:
playerIdParams = 플레이어아이디

# Description:
pointListParams = 꼭지점리스트

# Description:
polygonComponentPallette = 다각형

# Description: Text for screen orientation choice 'Portrait '
portraitScreenOrientation = 세로

# Description:
powerParams = 전원

# Description:
preparingApplicationIcon = 앱 준비 아이콘

# Description:
preparingFinalPackage = 최종 패키지 준비

# Description:
prevXParams = 이전X

# Description:
prevYParams = 이전Y

# Description: Listbox (monitor) controlling whether to display a preview on Monitor size.
previewMonitorSize = 모니터 크기

# Description: Listbox (phone) controlling whether to display a preview on Phone size.
previewPhoneSize = 전화 크기

# Description: Listbox (tablet) controlling whether to display a preview on Tablet size.
previewTabletSize = 태블릿 크기

# Description: Label for previous checkpoints table in checkpoint dialog.
previousCheckpointsLabel = 이전 체크포인트:

# Description: Label of the link for Privacy
privacyLink = 개인 정보 보호

# Description: Label of the link for Privacy and Terms of Use
privacyTermsLink = 개인 정보 보호 정책 및 이용 동의

# Description: Label of the link for private user profile
privateProfileLink = 프로필

# Description: Caption for profile page box.
profilePageBoxCaption = 내 프로필

# Description:
programNameParams = 프로그램이름

# Description: Header for date created column of project table.
projectDateCreatedHeader = 생성일

# Description: Header for date modified column of project table.
projectDateModifiedHeader = 수정일

# Description: Label for the project id input text box
projectIdLabel = 프로젝트 아이디 또는 이름:

# Description: Error message reported when information about projects could not be retrieved from the server.
projectInformationRetrievalError = 서버 오류: 프로젝트 정보를 조회할 수 없습니다. 나중에 다시 시도해주세요!

# Description: Caption for project list box.
projectListBoxCaption = 내 프로젝트

# Description: Error message reported when a project could not be loaded from the server.
projectLoadError = 서버 오류: 프로젝트를 불러올 수 없습니다. 나중에 다시 시도해주세요!

# Description: Name of My projects menuitem
projectMenuItem = 내 프로젝트

# Description: Header for name column of project table
projectNameHeader = 이름

# Description: Label for the project name input text box
projectNameLabel = 프로젝트 이름:

# Description: Header for published column of project table.
projectPublishedHeader = 발행됨

# Description: Error message reported when a project couldn't be uploaded to the server.
projectUploadError = 서버 오류: 프로젝트를 올릴 수 없습니다. 나중에 다시 시도해주세요!

# Description: Caption for project upload wizard.
projectUploadWizardCaption = 프로젝트 가져오기…

# Description: Alert message displayed when a project is upgraded
# 0=details
projectWasUpgraded = 이 프로젝트는 오래된 버전의 앱 인벤터로 만들어져 업그레이드 되었습니다 {0}.

# Description: Name of Projects tab
projectsTabName = 프로젝트

# Description: Caption for properties box.
propertiesBoxCaption = 속성

# Description:
providerParams = 서비스제공자

# Description:
proximitySensorComponentPallette = 근접센서

# Description: Text on "Publish to Gallery" button
publishToGalleryButton = 갤러리에 발행하기

# Description:
quantityParams = 추가량

# Description:
queryParams = 쿼리

# Description:
rParams = r

# Description:
radiusParams = 반지름

# Description:
readOnlyMode = 읽기 전용 상태입니다

# Description: Confirmation query for deleting a component
reallyDeleteComponent = 이 컴포넌트를 삭제하면 블록 에디터내의 연관된 모든 블록들이 삭제됩니다. 정말로 삭제하시겠습니까?

# Description: Confirmation message that will be shown before deleting a file
reallyDeleteFile = 정말 이 파일을 삭제하시겠습니까? 앱 인벤터 서버에서 제거됩니다. 또한, 앱의 일부분은 여전히 삭제된 파일을 참조할 수도 있으며, 당신은 이것을 변경해야 합니다.

# Description: Confirmation query for removing a screen
# 0=formName
reallyDeleteForm = 이 스크린을 삭제하면 프로젝트에서 스크린을 완전히 제거하게 됩니다. 이 스크린에 연관된 모든 컴포넌트 그리고 블록들이 지워지며, 되돌릴 수 없습니다.정말로 {0} 을(를) 삭제하시겠습니까?

# Description: Confirmation query for removing a component
reallyRemoveComponent = 이 컴포넌트를 삭제하면 관련된 모든  블록이 함께 삭제됩니다. 정말로 삭제하시겠습니까?

# Description:
recipientsParams = 수신자리스트

# Description: Text for button shape choice 'rectangular'
rectButtonShape = 직사각형

# Description:
rectangleComponentPallette = 사각형

# Description: Text for color choice 'Red'
redColor = 빨강

# Description:
regulationModeParams = 정규화모드

# Description:
relativeParams = 상대적인

# Description:
reloadWindow = 다시 열기

# Description: Caption for the wizard to name the opening Young Android project
remixedYoungAndroidProjectWizardCaption = 이 앱인벤터 프로젝트 이름 정하기

# Description: Label of the button for removing a screen
removeFormButton = 스크린 제거

# Description: Label of the button for rename
renameButton = 이름 바꾸기

# Description: Title for the rename component dialog
renameTitle = 컴포넌트 이름 바꾸기

# Description:
rendezvousServerParams = 랑데뷰서버

# Description: Error shown when a new name is a reserved name in Yail or Java code
reservedNameError = 다음과 같은 이름은 컴포넌트 이름으로 사용될 수 없습니다: CsvUtil, Double, Float, Integer, JavaCollection, JavaIterator, KawaEnvironment, Long, Short, SimpleForm, String, Pattern, YailList, YailNumberToString, YailRuntimeError, abstract, continue, for, new, switch, assert, default, goto, package, synchronized, boolean, do, if, private, this, break, double, implements, protected, throw, byte, else, import, public, throws, case, enum, instanceof, return, transient, catch, extends, int, short, try, char, final, interface, static, void, class, finally, long, strictfp, volatile, const, float, native, super, while

# Description: Reset all connections.
resetConnectionsMenuItem = 다시 연결하기

# Description:
responseCodeParams = 응답코드

# Description:
responseContentParams = 응답콘텐츠

# Description:
responseParams = 응답

# Description:
responseTypeParams = 응답타입

# Description: Text for Sizing choice 'responsive' -- size based on device type
responsiveSizing = 반응형

# Description:
resultParams = 결과

# Description:
rightParams = 오른쪽

# Description: Text for text alignment choice 'right'
rightTextAlignment = 오른쪽

# Description:
rollParams = 롤

# Description: Text for button shape choice 'rounded'
roundedButtonShape = 둥근 모서리

# Description:
runStateParams = 작동상태

# Description:
rxDataLengthParams = rx데이터길이

# Description: Error shown when a new component type would be the same as a component instance name
sameAsComponentInstanceNameError = 컴포넌트의 이름은 컴포넌트 인스턴트와 같을 수 없습니다

# Description: Error shown when a new component name would be the same as a component type name
sameAsComponentTypeNameError = 컴포넌트 인스턴트 이름은 컴포넌트 유형과 같을 수 없습니다.

# Description: Text for font typeface choice 'sans serif '
sansSerifFontTypeface = 산 세리프

# Description: Label of the button for save as
saveAsButton = 다른 이름으로 저장

# Description: Name of Save as ... menuitem
saveAsMenuItem = 프로젝트 다른 이름으로 저장 ...

# Description: Title of save as dialog.
# 0=projectName
saveAsTitle = 다른 이름으로 저장 - {0}

# Description: Label of the button for save
saveButton = 저장

# Description: Error message reported when a source file couldn't be saved to the server.
saveError = 서버 오류: 파일을 저장할 수 없습니다. 나중에 다시 시도해주세요!

# Description: Error message reported when one or more file couldn't be saved to the server.
saveErrorMultipleFiles = 서버 오류: 하나 이상의 파일을 저장할 수 없습니다. 나중에 다시 시도해주세요!

# Description: Name of Save menuitem
saveMenuItem = 프로젝트 저장하기

# Description: Message reported when project was saved successfully.
# 0=saveTime
savedProject = {0} 에 저장된 프로젝트

# Description: Message that is shown to indicate that a saving RPC is going on
savingRpcMessage = 저장중 ...

# Description: A choice in ScalingChoicePropertyEditor
scaleProportionally = 비례 크기 조정

# Description: A choice in ScalingChoicePropertyEditor
scaleToFit = 화면에 크기 맞추기

# Description: Label of the button for switching screens
screensButton = 스크린 ...

# Description:
searchResultsParams = 검색결과

# Description:
secondParams = 초

# Description:
secondParamsMethods = 초가져오기

# Description:
secondsParams = 초

# Description:
secureParams = 보안

# Description: Label of the Text of seeing more of reportlist
seeMoreLink = 더 보기 ...

# Description:
seedParams = 시드

# Description:
selectionParams = 선택된항목

# Description:
senderParams = 보내는사람

# Description: Message to display when sending an asset to the companion
# 0=assetPath
sendingAssetToCompanion = {0} 을 컴패니언으로 보내는 중...

# Description:
sensorModeParams = 센서모드

# Description:
sensorPortLetterParams = 센서포트문자

# Description: Text for screen orientation choice 'Sensor '
sensorScreenOrientation = 센서

# Description:
sensorTypeParams = 센서유형

# Description:
sensorValueParams = 센서값

# Description:
sensorsComponentPallette = 센서

# Description: Text for font typeface choice 'serif '
serifFontTypeface = 세리프

# Description: Error message if the server becomes completely unavailable.
serverUnavailable = 서버가 일시적으로 작동하지 않습니다. 나중에 다시 시도해주세요!

# Description:
serviceNameParams = 서비스이름

# Description:
sessionDead = 세션이 만료되었거나 App Inventor가 업그레이드되었습니다. 계속하려면 세션을 \"새로 고침\"해야합니다. 아래의 \"새로 고침\"버튼을 누르십시오.

# Description:
setAssetsLoadedMethodDescriptions = 초기 자산을 로드했습니다. 다른 자산은 sdcard에서 가져온 것으로 선언합니다.

# Description:
setAssetsLoadedMethods = 자원로드하기

# Description:
setHmacSeedReturnCodeMethodDescriptions = HOTP 생성을위한 비밀 시드를 설정하십시오. 제공된 시드의 SHA1을 반환합니다. 이것은 랑데부 서버에 연결하는 데 사용됩니다. 참고 :이 코드는 WebRTC를 사용하는 경우 연결 협상 프로세스를 시작합니다. 이것은 약간의 kludge입니다 ...

# Description:
setHmacSeedReturnCodeMethods = HMAC시드반환코드설정하기

# Description: Error message reported when the settings couldn't be loaded from the server.
settingsLoadError = 서버 오류: 설정을 불러올 수 없습니다. 나중에 다시 시도해주세요!

# Description: Error message reported when the settings couldn't be saved to the server.
settingsSaveError = 서버 오류: 설정을 저장할 수 없습니다. 나중에 다시 시도해주세요!

# Description:
sharingComponentPallette = 공유

# Description: Show toast for a Toast_Short of time
shortToastLength = 짧게

# Description: Label of item for building a project and show barcode
showBarcodeMenuItem = 앱 (.APK 용 QR 코드 제공)

# Description: Label of item for building a project and show barcode
showBarcodeMenuItem2 = 구글 플레이 앱 ( .APK 용 QR코드 제공 )

# Description: Checkbox controlling whether to display invisible components in the designer.
showHiddenComponentsCheckbox = 뷰어에 숨겨진 컴포넌트 나타내기

# Description: Redisplay the Splash Screen
showSplashMenuItem = 스플래시 화면 보기

# Description:
showSurveySplashButtonLater = 설문 나중에 하기

# Description:
showSurveySplashButtonNever = 설문 절대 하지 않음

# Description:
showSurveySplashButtonNow = 지금 설문 참여하기

# Description:
showSurveySplashMessage = <h2> MIT App Inventor를 개선하고 사용자에 대해 더 자세히 알 수 있도록 간단한 자발적 설문 조사를 작성하십시오. </ h2>

# Description: Text on Toggle Warning Button
showWarnings = 경고 보이기

# Description:
shutdownMethodDescriptions = 정말 앱에서 나가기

# Description:
shutdownMethods = 셧다운

# Description: Label of the link for signing out
signOutLink = 로그아웃

# Description:
simpleStepsParams = 간단한걸음

# Description: Text for screen animation choice 'SlideHorizontal '
slideHorizontalScreenAnimation = 수평슬라이드

# Description: Text for screen animation choice 'SlideVertical '
slideVerticalScreenAnimation = 수직슬라이드

# Description:
sliderComponentPallette = 슬라이더

# Description:
socialComponentPallette = 소셜

# Description:
soundComponentPallette = 소리

# Description:
soundParams = 소리

# Description:
soundRecorderComponentPallette = 녹음기

# Description:
sourceParams = 소스

# Description: Caption for source structure box.
sourceStructureBoxCaption = 컴포넌트

# Description:
speechRecognizerComponentPallette = 음성인식

# Description:
speedParams = 속도

# Description:
spinnerComponentPallette = 스피너

# Description:
startAngleParams = 시작각도

# Description:
startHTTPDMethodDescriptions = 들어오는 양식을 수신하려면 내부 AppInvHTTPD를 시작하십시오. REPL 사용에만!

# Description:
startHTTPDMethods = HTTPD시작하기

# Description:
startParams = 시작

# Description:
startWebRTCMethodDescriptions = WebRTC 엔진 시작

# Description:
startWebRTCMethods = WebRTC시작하기

# Description:
startXParams = 시작X

# Description:
startYParams = 시작Y

# Description:
startingConnectionDialog = 0에서 시작

# Description:
statusParams = 상태

# Description:
storageComponentPallette = 저장소

# Description: Text for accelerometer sensitivity choice 'strong'
strongAccelerometerSensitivity = 강한

# Description: Caption for studio list box.
studioListBoxCaption = 내 스튜디오

# Description:
sweepAngleParams = 스윕각도

# Description:
switchComponentPallette = 스위치

# Description: Label of the button for switching language
switchLanguageButton = 언어

# Description: Label of the button for switching to the blocks editor
switchToBlocksEditorButton = 블록

# Description: Label of the button for admins to switch to the debug panel without an explicit error
switchToDebugMenuItem = 디버그 패널로 전환

# Description: Label of the button for switching to the form editor
switchToFormEditorButton = 디자이너

# Description: Symbol X
symbolX = X

# Description: Name of Debugging tab
tabNameDebugging = (디버깅)

# Description: Name of Design tab
tabNameDesign = 디자인

# Description: Name of Gallery tab
tabNameGallery = 갤러리

# Description: Name of moderation tab
tabNameModeration = 조정

# Description: Name of My Projects tab
tabNameProjects = 내 프로젝트

# Description:
tableArrangementComponentPallette = 표형식배치

# Description:
tableIdParams = 테이블ID

# Description:
tachoCountParams = 타코카운트

# Description:
tachoCountsParams = 타코카운트

# Description:
tachoLimitParams = 타코제한

# Description:
tagFromWebDBParams = WebDB태그

# Description:
tagParams = 태그

# Description:
targetParams = 대상

# Description: Caption for template dialog menu item.
templateUploadNewUrlCaption = 새 템플릿 라이브러리 URL 추가

# Description: Caption for template upload wizard.
templateUploadWizardCaption = 템플릿으로 프로젝트 생성

# Description: Label of the link for Terms
termsLink = 용어

# Description: None
textAnyComponentLabel = 모든

# Description:
textBoxComponentPallette = 텍스트박스

# Description:
textParams = 텍스트

# Description: Default value for Text property
# 0=componentName
textPropertyValue = {0} 의 텍스트

# Description: Text messages are always received, and a notification is shown if the App is in the background.
textReceivingChoiceAlways = 항상

# Description: Text Messages are received only when the App is in the foreground.
textReceivingChoiceForeground = 전경

# Description: Text Messages are not received at any time.
textReceivingChoiceOff = 꺼짐

# Description:
textToSpeechComponentPallette = 음성변환

# Description:
textToTranslateParams = 번역할텍스트

# Description:
textingComponentPallette = 문자메시지

# Description:
thumbPositionParams = 섬네일위치

# Description:
timePickerComponentPallette = 시간선택버튼

# Description:
timelineParams = 타임라인

# Description:
timestampParams = 타임스탬프

# Description:
tinyDBComponentPallette = 타이니DB

# Description:
tinyWebDBComponentPallette = 타이니웹DB

# Description:
titleParams = 제목

# Description: Title of the Previous Actions Popup of reportlist
titleSeeAllActionsPopup = 신고된 이전 행동

# Description: Title for App Inventor
titleYoungAndroid = MIT 앱 인벤터

# Description: Label for the Toggle Tutorial Button
toggleTutorialButton = 튜토리얼 토글하기

# Description:
topParams = 위

# Description:
touchedAnySpriteParams = 터치된스프라이트

# Description:
touchedSpriteParams = 터치된스프라이트

# Description:
translationParams = 번역

# Description: Name of Troubleshooting link
troubleshootingMenuItem = 문제 해결

# Description:
turnRatioParams = 회전비율

# Description: Name of Tutorials link
tutorialsMenuItem = 튜토리얼

# Description:
twitterComponentPallette = 트위터

# Description:
typeParams = 유형

# Description: Compilation error, with error message.
# 0=errorMesssage
unableToCompile = 이 프로젝트를 컴파일 할 수 없습니다. <br /> 컴파일러 오류 출력은 <br /> {0}  입니다.

# Description: Alert message displayed when upgrade fails
# 0=details
unexpectedProblem = 이 프로젝트 {0} 를 로딩하는 동안 문제가 발생했습니다.

# Description:
uninitializedComponentPallette = 초기화되지않은

# Description:
# 0=maptype
unknownMapTypeException = 예상치 못한 맵 유형: {0}

# Description: Text for screen orientation choice 'Unspecified '
unspecifiedScreenOrientation = 불특정

# Description: Text on "Update Gallery App" button
updateGalleryAppButton = 갤러리 앱 업데이트

# Description: Message providing details about a project upgrade involving a Logger component
# 0=name
upgradeDetailLoggerReplacedWithNotifier = {0} 의 로거 구성 요소가 알리미 구성 요소로 변경되었습니다 

# Description: Error message displayed when a server error occurs during upload keystore
uploadKeystoreError = 서버 오류 : 키 저장소 파일을 업로드 할 수 없습니다.

# Description: Label of the button for import keystore
uploadKeystoreMenuItem = 키 저장소 가져오기

# Description:
uriParams = URI

# Description:
urlImportWizardCaption = URL 에서 미디어 가져오기

# Description:
urlParams = url

# Description: Message providing details about starting a USB connection.
usbMenuItem = USB

# Description:
useBrakeParams = 브레이크사용

# Description:
useCenterParams = 중심사용

# Description: Used by the MockFirebaseDB to display default checkbox
useDefault = 기본값 사용

# Description:
useFrontDeprecated = useFront 속성이 카메라 구성 요소에서 제거되었습니다.

# Description: Label for the user id input text box
userIdLabel = 사용자 아이디 또는 이메일 (대소문자 구분):

# Description:
userInterfaceComponentPallette = 사용자 인터페이스

# Description:
userParams = 사용자

# Description: Caption for user profile box.
userProfileBoxCaption = 사용자 프로필

# Description: Text for screen orientation choice 'User '
userScreenOrientation = 사용자

# Description:
uuidParams = uuid

# Description:
valueFromWebDBParams = WebDB값

# Description:
valueIfTagNotThereParams = 찾는태그가이없을경우

# Description:
# 0=text, 1=min, 2=max
valueNotInRange = {0} 값이 기대 범위 [{1}, {2}]을 벗어났습니다

# Description:
valueParams = 값

# Description:
valueToAddParams = 추가할값

# Description:
valueToStoreParams = 저장할값

# Description:
valuesParams = 값

# Description: Text for vertical alignment choice 'Bottom'
verticalAlignmentChoiceBottom = 아래

# Description: Text for vertical alignment choice 'Center'
verticalAlignmentChoiceCenter = 가운데

# Description: Text for vertical alignment choice 'Top'
verticalAlignmentChoiceTop = 위

# Description:
verticalArrangementComponentPallette = 수직배치

# Description:
verticalScrollArrangementComponentPallette = 스크롤가능수직배치

# Description: Alert message displayed when upgrading a project without version numbers
veryOldProject = 이 프로젝트는 이전에 배포된 버전의 앱 인벤터로 저장되었습니다. 이 프로젝트를 불러오지만, 호환성 문제가 발생할 수 있습니다.

# Description:
videoPlayerComponentPallette = 비디오플레이어

# Description: Caption for a viewer box.
viewerBoxCaption = 뷰어

# Description:
volumeParams = 음량

# Description:
votingComponentPallette = 투표

# Description:
waitingForBarcode = 바코드를 기다립니다

# Description:
walkStepsParams = 걸음수

# Description:
warningDialogTitle = 경고!

# Description: Text for accelerometer sensitivity choice 'weak'
weakAccelerometerSensitivity = 약함

# Description:
webComponentPallette = 웹

# Description:
webViewerComponentPallette = 웹뷰어

# Description:
weeksParams = 주

# Description: Text for color choice 'White'
whiteColor = 흰색

# Description: Error shown when user types space into project name.
whitespaceProjectNameError = 프로젝트 이름은 빈칸을 사용할 수 없습니다

# Description:
widthParams = 너비

# Description: Caption for the width property
widthPropertyCaption = 너비

# Description:
wildcardParams = 와일드카드

# Description: Error message displayed when zero or more than one projects are selected
wrongNumberProjectSelectedForPublishOrUpdate = 게시하거나 업데이트 할 프로젝트를 하나만 선택하십시오.

# Description: Error message displayed when no or many projects are selected
wrongNumberProjectsSelected = 반드시 한 프로젝트는 선택되어야 함

# Description:
x1Params = x1

# Description:
x2Params = x2

# Description:
xAccelParams = X가속도

# Description:
xAngularVelocityParams = X각속도

# Description:
xParams = X

# Description:
xmlTextDecodeMethods = XML텍스트디코딩하기

# Description:
xmlTextParams = XML텍스트

# Description:
xvelParams = X속도

# Description:
y1Params = Y1

# Description:
y2Params = Y2

# Description:
yAccelParams = Y가속도

# Description:
yAngularVelocityParams = Y각속도

# Description:
yParams = Y

# Description: Error message reported when yail generation fails for a screen
# 0=formName, 1=description
yailGenerationError = 스크린 {0} Yail 만들기 오류: {1}. 수정후 다시 패키징을 시도해주세요.

# Description:
yandexTranslateComponentPallette = 얀덱스번역

# Description:
yearParams = 년

# Description:
yearsParams = 년

# Description: Text for color choice 'Yellow'
yellowColor = 노랑

# Description:
yvelParams = y속도

# Description:
zAccelParams = z가속도

# Description:
zAngularVelocityParams = Z각속도

# Description:
zoomParams = 줌

# Description: Text for screen animation choice 'Zoom '
zoomScreenAnimation = 줌

